{"version":3,"sources":["./src/app/modules/shared/services/file-upload.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAA2C;AAC+B;AAC/B;AACS;AAKpD,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAE5B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAE5B,YAAO,GAAG,IAAI,4CAAO,EAAO,CAAC;IAFG,CAAC;IAIzC,UAAU,CAAC,MAAc;QACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;IAChC,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;IACrC,CAAC;IAED,SAAS,CAAC,IAAU,EAAE,EAAmB,EAAE,MAAc,EAAE,IAAY,EAAE,IAAY;QAEnF,MAAM,QAAQ,GAAa,IAAI,QAAQ,EAAE,CAAC;QAE1C,MAAM,YAAY,GAAiB;YACjC,MAAM;YACN,IAAI;YACJ,IAAI;SACL,CAAC;QAEF,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC9B,QAAQ,CAAC,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;QAE9D,MAAM,GAAG,GAAG,+DAAW,CAAC,QAAQ,GAAG,GAAG,GAAG,EAAE,GAAG,SAAS,CAAC;QACxD,MAAM,GAAG,GAAG,IAAI,gEAAW,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE;YACjD,cAAc,EAAE,IAAI;YACpB,YAAY,EAAE,MAAM;SACrB,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;IAEM,YAAY,CAAC,QAAgB;QAClC,MAAM,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnC,OAAO,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACzC,CAAC;CAEF;;YAvC2B,+DAAU;;AAFzB,iBAAiB;IAH7B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,iBAAiB,CAyC7B;AAzC6B","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEvent, HttpRequest } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { ApiEndpoint } from '../model/shared.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileUploadService {\n\n  constructor(private http: HttpClient) { }\n\n  private subject = new Subject<any>();\n\n  sendDocUrl(docUrl: string) {\n    this.subject.next({ docUrl });\n  }\n\n  getDocUrl(): Observable<any> {\n    return this.subject.asObservable();\n  }\n\n  uploadDoc(file: File, id: number | string, docFor: string, type: string, name: string): Observable<HttpEvent<{}>> {\n\n    const formdata: FormData = new FormData();\n\n    const documentBody: DocumentBody = {\n      docFor,\n      name,\n      type\n    };\n\n    formdata.append('file', file);\n    formdata.append('documentBody', JSON.stringify(documentBody));\n\n    const url = ApiEndpoint.DOCUMENT + '/' + id + '/upload';\n    const req = new HttpRequest('POST', url, formdata, {\n      reportProgress: true,\n      responseType: 'text'\n    });\n\n    return this.http.request(req);\n  }\n\n  public getExtension(fileName: string) {\n    const splits = fileName.split('.');\n    return '.' + splits[splits.length - 1];\n  }\n\n}\n\nexport interface DocumentBody {\n\n  docFor: string;\n  type: string;\n  name: string;\n\n}\n"],"sourceRoot":"webpack:///"}