{"version":3,"sources":["default~modules-employees-employees-module~modules-income-expense-income-expense-module~modules-main~737a0d7e-es5.js","webpack:///node_modules/@angular/material-moment-adapter/esm2015/material-moment-adapter.js","webpack:///src/app/modules/shared/custom-date.module.ts"],"names":[],"mappings":"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","file":"x","sourcesContent":["(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[\"default~modules-employees-employees-module~modules-income-expense-income-expense-module~modules-main~737a0d7e\"],{\n\n/***/ \"./node_modules/@angular/material-moment-adapter/esm2015/material-moment-adapter.js\":\n/*!******************************************************************************************!*\\\n  !*** ./node_modules/@angular/material-moment-adapter/esm2015/material-moment-adapter.js ***!\n  \\******************************************************************************************/\n/*! exports provided: MomentDateModule, MatMomentDateModule, MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY, MAT_MOMENT_DATE_ADAPTER_OPTIONS, MomentDateAdapter, MAT_MOMENT_DATE_FORMATS */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MomentDateModule\", function() { return MomentDateModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MatMomentDateModule\", function() { return MatMomentDateModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY\", function() { return MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MAT_MOMENT_DATE_ADAPTER_OPTIONS\", function() { return MAT_MOMENT_DATE_ADAPTER_OPTIONS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MomentDateAdapter\", function() { return MomentDateAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MAT_MOMENT_DATE_FORMATS\", function() { return MAT_MOMENT_DATE_FORMATS; });\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material/core */ \"./node_modules/@angular/material/esm2015/core.js\");\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! moment */ \"./node_modules/moment/moment.js\");\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n\n\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst moment = moment__WEBPACK_IMPORTED_MODULE_2___default.a || moment__WEBPACK_IMPORTED_MODULE_2__;\n/**\n * InjectionToken for moment date adapter to configure options.\n * @type {?}\n */\nconst MAT_MOMENT_DATE_ADAPTER_OPTIONS = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"InjectionToken\"]('MAT_MOMENT_DATE_ADAPTER_OPTIONS', {\n    providedIn: 'root',\n    factory: MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY() {\n    return {\n        useUtc: false\n    };\n}\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    /** @type {?} */\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * Adapts Moment.js Dates for use with Angular Material.\n */\nclass MomentDateAdapter extends _angular_material_core__WEBPACK_IMPORTED_MODULE_1__[\"DateAdapter\"] {\n    /**\n     * @param {?} dateLocale\n     * @param {?=} _options\n     */\n    constructor(dateLocale, _options) {\n        super();\n        this._options = _options;\n        this.setLocale(dateLocale || moment.locale());\n    }\n    /**\n     * @param {?} locale\n     * @return {?}\n     */\n    setLocale(locale) {\n        super.setLocale(locale);\n        /** @type {?} */\n        let momentLocaleData = moment.localeData(locale);\n        this._localeData = {\n            firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n            longMonths: momentLocaleData.months(),\n            shortMonths: momentLocaleData.monthsShort(),\n            dates: range(31, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            (i) => this.createDate(2017, 0, i + 1).format('D'))),\n            longDaysOfWeek: momentLocaleData.weekdays(),\n            shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n            narrowDaysOfWeek: momentLocaleData.weekdaysMin(),\n        };\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYear(date) {\n        return this.clone(date).year();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getMonth(date) {\n        return this.clone(date).month();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDate(date) {\n        return this.clone(date).date();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayOfWeek(date) {\n        return this.clone(date).day();\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getMonthNames(style) {\n        // Moment.js doesn't support narrow month names, so we just use short if narrow is requested.\n        return style == 'long' ? this._localeData.longMonths : this._localeData.shortMonths;\n    }\n    /**\n     * @return {?}\n     */\n    getDateNames() {\n        return this._localeData.dates;\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getDayOfWeekNames(style) {\n        if (style == 'long') {\n            return this._localeData.longDaysOfWeek;\n        }\n        if (style == 'short') {\n            return this._localeData.shortDaysOfWeek;\n        }\n        return this._localeData.narrowDaysOfWeek;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYearName(date) {\n        return this.clone(date).format('YYYY');\n    }\n    /**\n     * @return {?}\n     */\n    getFirstDayOfWeek() {\n        return this._localeData.firstDayOfWeek;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getNumDaysInMonth(date) {\n        return this.clone(date).daysInMonth();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    clone(date) {\n        return date.clone().locale(this.locale);\n    }\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    createDate(year, month, date) {\n        // Moment.js will create an invalid date if any of the components are out of bounds, but we\n        // explicitly check each case so we can throw more descriptive errors.\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n        /** @type {?} */\n        const result = this._createMoment({ year, month, date }).locale(this.locale);\n        // If the result isn't valid, the date must have been out of bounds for this month.\n        if (!result.isValid()) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    today() {\n        return this._createMoment().locale(this.locale);\n    }\n    /**\n     * @param {?} value\n     * @param {?} parseFormat\n     * @return {?}\n     */\n    parse(value, parseFormat) {\n        if (value && typeof value == 'string') {\n            return this._createMoment(value, parseFormat, this.locale);\n        }\n        return value ? this._createMoment(value).locale(this.locale) : null;\n    }\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    format(date, displayFormat) {\n        date = this.clone(date);\n        if (!this.isValid(date)) {\n            throw Error('MomentDateAdapter: Cannot format invalid date.');\n        }\n        return date.format(displayFormat);\n    }\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    addCalendarYears(date, years) {\n        return this.clone(date).add({ years });\n    }\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    addCalendarMonths(date, months) {\n        return this.clone(date).add({ months });\n    }\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    addCalendarDays(date, days) {\n        return this.clone(date).add({ days });\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    toIso8601(date) {\n        return this.clone(date).format();\n    }\n    /**\n     * Returns the given value if given a valid Moment or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) and valid Date objects into valid Moments and empty\n     * string into null. Returns an invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    deserialize(value) {\n        /** @type {?} */\n        let date;\n        if (value instanceof Date) {\n            date = this._createMoment(value).locale(this.locale);\n        }\n        else if (this.isDateInstance(value)) {\n            // Note: assumes that cloning also sets the correct locale.\n            return this.clone(value);\n        }\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            date = this._createMoment(value, moment.ISO_8601).locale(this.locale);\n        }\n        if (date && this.isValid(date)) {\n            return this._createMoment(date).locale(this.locale);\n        }\n        return super.deserialize(value);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    isDateInstance(obj) {\n        return moment.isMoment(obj);\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        return this.clone(date).isValid();\n    }\n    /**\n     * @return {?}\n     */\n    invalid() {\n        return moment.invalid();\n    }\n    /**\n     * Creates a Moment instance while respecting the current UTC settings.\n     * @private\n     * @param {?} date\n     * @param {?=} format\n     * @param {?=} locale\n     * @return {?}\n     */\n    _createMoment(date, format, locale) {\n        const { strict, useUtc } = this._options || {};\n        return useUtc\n            ? moment.utc(date, format, locale, strict)\n            : moment(date, format, locale, strict);\n    }\n}\nMomentDateAdapter.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Injectable\"] },\n];\n/** @nocollapse */\nMomentDateAdapter.ctorParameters = () => [\n    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Inject\"], args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_1__[\"MAT_DATE_LOCALE\"],] }] },\n    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Optional\"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"Inject\"], args: [MAT_MOMENT_DATE_ADAPTER_OPTIONS,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\nconst MAT_MOMENT_DATE_FORMATS = {\n    parse: {\n        dateInput: 'l',\n    },\n    display: {\n        dateInput: 'l',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MomentDateModule {\n}\nMomentDateModule.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"NgModule\"], args: [{\n                providers: [\n                    {\n                        provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_1__[\"DateAdapter\"],\n                        useClass: MomentDateAdapter,\n                        deps: [_angular_material_core__WEBPACK_IMPORTED_MODULE_1__[\"MAT_DATE_LOCALE\"], MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n                    }\n                ],\n            },] },\n];\nconst ɵ0 = MAT_MOMENT_DATE_FORMATS;\nclass MatMomentDateModule {\n}\nMatMomentDateModule.decorators = [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__[\"NgModule\"], args: [{\n                imports: [MomentDateModule],\n                providers: [{ provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_1__[\"MAT_DATE_FORMATS\"], useValue: ɵ0 }],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\n//# sourceMappingURL=material-moment-adapter.js.map\n\n\n/***/ }),\n\n/***/ \"./src/app/modules/shared/custom-date.module.ts\":\n/*!******************************************************!*\\\n  !*** ./src/app/modules/shared/custom-date.module.ts ***!\n  \\******************************************************/\n/*! exports provided: MY_FORMATS, CustomDateModule */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MY_FORMATS\", function() { return MY_FORMATS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CustomDateModule\", function() { return CustomDateModule; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ \"./node_modules/@angular/common/fesm2015/common.js\");\n/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material */ \"./node_modules/@angular/material/esm2015/material.js\");\n/* harmony import */ var _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material-moment-adapter */ \"./node_modules/@angular/material-moment-adapter/esm2015/material-moment-adapter.js\");\n\n\n\n\n\nconst MY_FORMATS = {\n    parse: {\n        dateInput: 'LL',\n    },\n    display: {\n        dateInput: 'LL',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\nlet CustomDateModule = class CustomDateModule {\n};\nCustomDateModule = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgModule\"])({\n        imports: [\n            _angular_common__WEBPACK_IMPORTED_MODULE_2__[\"CommonModule\"]\n        ],\n        declarations: [],\n        providers: [\n            { provide: _angular_material__WEBPACK_IMPORTED_MODULE_3__[\"DateAdapter\"], useClass: _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_4__[\"MomentDateAdapter\"], deps: [_angular_material__WEBPACK_IMPORTED_MODULE_3__[\"MAT_DATE_LOCALE\"]] },\n            { provide: _angular_material__WEBPACK_IMPORTED_MODULE_3__[\"MAT_DATE_FORMATS\"], useValue: MY_FORMATS },\n        ],\n    })\n], CustomDateModule);\n\n\n\n/***/ })\n\n}]);\n//# sourceMappingURL=default~modules-employees-employees-module~modules-income-expense-income-expense-module~modules-main~737a0d7e-es2015.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Inject, Injectable, Optional, InjectionToken, NgModule } from '@angular/core';\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material/core';\nimport * as _rollupMoment from 'moment';\nimport _rollupMoment__default, {  } from 'moment';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst moment = _rollupMoment__default || _rollupMoment;\n/**\n * InjectionToken for moment date adapter to configure options.\n * @type {?}\n */\nconst MAT_MOMENT_DATE_ADAPTER_OPTIONS = new InjectionToken('MAT_MOMENT_DATE_ADAPTER_OPTIONS', {\n    providedIn: 'root',\n    factory: MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY() {\n    return {\n        useUtc: false\n    };\n}\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    /** @type {?} */\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * Adapts Moment.js Dates for use with Angular Material.\n */\nclass MomentDateAdapter extends DateAdapter {\n    /**\n     * @param {?} dateLocale\n     * @param {?=} _options\n     */\n    constructor(dateLocale, _options) {\n        super();\n        this._options = _options;\n        this.setLocale(dateLocale || moment.locale());\n    }\n    /**\n     * @param {?} locale\n     * @return {?}\n     */\n    setLocale(locale) {\n        super.setLocale(locale);\n        /** @type {?} */\n        let momentLocaleData = moment.localeData(locale);\n        this._localeData = {\n            firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n            longMonths: momentLocaleData.months(),\n            shortMonths: momentLocaleData.monthsShort(),\n            dates: range(31, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            (i) => this.createDate(2017, 0, i + 1).format('D'))),\n            longDaysOfWeek: momentLocaleData.weekdays(),\n            shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n            narrowDaysOfWeek: momentLocaleData.weekdaysMin(),\n        };\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYear(date) {\n        return this.clone(date).year();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getMonth(date) {\n        return this.clone(date).month();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDate(date) {\n        return this.clone(date).date();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayOfWeek(date) {\n        return this.clone(date).day();\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getMonthNames(style) {\n        // Moment.js doesn't support narrow month names, so we just use short if narrow is requested.\n        return style == 'long' ? this._localeData.longMonths : this._localeData.shortMonths;\n    }\n    /**\n     * @return {?}\n     */\n    getDateNames() {\n        return this._localeData.dates;\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getDayOfWeekNames(style) {\n        if (style == 'long') {\n            return this._localeData.longDaysOfWeek;\n        }\n        if (style == 'short') {\n            return this._localeData.shortDaysOfWeek;\n        }\n        return this._localeData.narrowDaysOfWeek;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYearName(date) {\n        return this.clone(date).format('YYYY');\n    }\n    /**\n     * @return {?}\n     */\n    getFirstDayOfWeek() {\n        return this._localeData.firstDayOfWeek;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getNumDaysInMonth(date) {\n        return this.clone(date).daysInMonth();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    clone(date) {\n        return date.clone().locale(this.locale);\n    }\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    createDate(year, month, date) {\n        // Moment.js will create an invalid date if any of the components are out of bounds, but we\n        // explicitly check each case so we can throw more descriptive errors.\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n        /** @type {?} */\n        const result = this._createMoment({ year, month, date }).locale(this.locale);\n        // If the result isn't valid, the date must have been out of bounds for this month.\n        if (!result.isValid()) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    today() {\n        return this._createMoment().locale(this.locale);\n    }\n    /**\n     * @param {?} value\n     * @param {?} parseFormat\n     * @return {?}\n     */\n    parse(value, parseFormat) {\n        if (value && typeof value == 'string') {\n            return this._createMoment(value, parseFormat, this.locale);\n        }\n        return value ? this._createMoment(value).locale(this.locale) : null;\n    }\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    format(date, displayFormat) {\n        date = this.clone(date);\n        if (!this.isValid(date)) {\n            throw Error('MomentDateAdapter: Cannot format invalid date.');\n        }\n        return date.format(displayFormat);\n    }\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    addCalendarYears(date, years) {\n        return this.clone(date).add({ years });\n    }\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    addCalendarMonths(date, months) {\n        return this.clone(date).add({ months });\n    }\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    addCalendarDays(date, days) {\n        return this.clone(date).add({ days });\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    toIso8601(date) {\n        return this.clone(date).format();\n    }\n    /**\n     * Returns the given value if given a valid Moment or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) and valid Date objects into valid Moments and empty\n     * string into null. Returns an invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    deserialize(value) {\n        /** @type {?} */\n        let date;\n        if (value instanceof Date) {\n            date = this._createMoment(value).locale(this.locale);\n        }\n        else if (this.isDateInstance(value)) {\n            // Note: assumes that cloning also sets the correct locale.\n            return this.clone(value);\n        }\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            date = this._createMoment(value, moment.ISO_8601).locale(this.locale);\n        }\n        if (date && this.isValid(date)) {\n            return this._createMoment(date).locale(this.locale);\n        }\n        return super.deserialize(value);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    isDateInstance(obj) {\n        return moment.isMoment(obj);\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        return this.clone(date).isValid();\n    }\n    /**\n     * @return {?}\n     */\n    invalid() {\n        return moment.invalid();\n    }\n    /**\n     * Creates a Moment instance while respecting the current UTC settings.\n     * @private\n     * @param {?} date\n     * @param {?=} format\n     * @param {?=} locale\n     * @return {?}\n     */\n    _createMoment(date, format, locale) {\n        const { strict, useUtc } = this._options || {};\n        return useUtc\n            ? moment.utc(date, format, locale, strict)\n            : moment(date, format, locale, strict);\n    }\n}\nMomentDateAdapter.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nMomentDateAdapter.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_MOMENT_DATE_ADAPTER_OPTIONS,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\nconst MAT_MOMENT_DATE_FORMATS = {\n    parse: {\n        dateInput: 'l',\n    },\n    display: {\n        dateInput: 'l',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MomentDateModule {\n}\nMomentDateModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    {\n                        provide: DateAdapter,\n                        useClass: MomentDateAdapter,\n                        deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n                    }\n                ],\n            },] },\n];\nconst ɵ0 = MAT_MOMENT_DATE_FORMATS;\nclass MatMomentDateModule {\n}\nMatMomentDateModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MomentDateModule],\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0 }],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MomentDateModule, MatMomentDateModule, MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY, MAT_MOMENT_DATE_ADAPTER_OPTIONS, MomentDateAdapter, MAT_MOMENT_DATE_FORMATS };\n//# sourceMappingURL=material-moment-adapter.js.map\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\n\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'LL',\n  },\n  display: {\n    dateInput: 'LL',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [],\n  providers: [\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n    {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\n  ],\n})\nexport class CustomDateModule { }\n"]}