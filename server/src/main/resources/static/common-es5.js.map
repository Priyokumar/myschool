{"version":3,"sources":["common-es5.js","webpack:///src/app/modules/shared/services/file-upload.service.ts"],"names":[],"mappings":"AAAA,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAC;QAEzE,KAAK,CAAC,0DAA0D;QAChE;;4EAEoE;QACpE,0CAA0C;QAC1C,KAAK,CAAC,CAAC,UAAS,MAAM,EAAE,mBAAmB,EAAE,mBAAmB;YAEhE,YAAY,CAAC;YACb,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC;YAC3C,8BAA8B,CAAC,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE,mBAAmB,EAAE,cAAa,OAAO,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;YACzI,oBAAoB,CAAC,IAAI,kCAAkC,GAAG,mBAAmB,CAAC,YAAY,CAAC,mCAAmC,CAAC,CAAC;YACpI,oBAAoB,CAAC,IAAI,0CAA0C,GAAG,mBAAmB,CAAC,oBAAoB,CAAC,+CAA+C,CAAC,CAAC;YAChK,oBAAoB,CAAC,IAAI,iDAAiD,GAAG,mBAAmB,CAAC,2BAA2B,CAAC,iDAAiD,CAAC,CAAC;YAChL,oBAAoB,CAAC,IAAI,iCAAiC,GAAG,mBAAmB,CAAC,WAAW,CAAC,uCAAuC,CAAC,CAAC;YACtI,oBAAoB,CAAC,IAAI,gDAAgD,GAAG,mBAAmB,CAAC,4BAA4B,CAAC,gDAAgD,CAAC,CAAC;YCR/K,IAAa,iBAAiB;gBAE5B,2BAAoB,IAAgB;oBAAhB,SAAI,GAAJ,IAAI,CAAY;oBAE5B,YAAO,GAAG,IAAI,4CAAO,EAAO,CAAC;gBAFG,CAAC;gBAIzC,sCAAU,GAAV,UAAW,MAAc;oBACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,MAAM,UAAE,CAAC,CAAC;gBAChC,CAAC;gBAED,qCAAS,GAAT;oBACE,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;gBACrC,CAAC;gBAED,qCAAS,GAAT,UAAU,IAAU,EAAE,EAAmB,EAAE,MAAc,EAAE,IAAY,EAAE,IAAY;oBAEnF,IAAM,QAAQ,GAAa,IAAI,QAAQ,EAAE,CAAC;oBAE1C,IAAM,YAAY,GAAiB;wBACjC,MAAM;wBACN,IAAI;wBACJ,IAAI;qBACL,CAAC;oBAEF,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;oBAC9B,QAAQ,CAAC,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;oBAE9D,IAAM,GAAG,GAAG,+DAAW,CAAC,QAAQ,GAAG,GAAG,GAAG,EAAE,GAAG,SAAS,CAAC;oBACxD,IAAM,GAAG,GAAG,IAAI,gEAAW,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE;wBACjD,cAAc,EAAE,IAAI;wBACpB,YAAY,EAAE,MAAM;qBACrB,CAAC,CAAC;oBAEH,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;gBAChC,CAAC;gBAEM,wCAAY,GAAZ,UAAa,QAAgB;oBAClC,IAAM,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACnC,OAAO,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACzC,CAAC;gBDMH,wBCJC;YDID,CCJC;YDKD,iBAAiB,CAAC,cAAc,GAAG,cAAM;gBACrC,EAAE,IAAI,EC7CkB,+DAAU;aD8CrC,EAFwC,CAExC,CAAC;YChDW,iBAAiB;gBAH7B,gEAAU,CAAC;oBACV,UAAU,EAAE,MAAM;iBACnB,CAAC;aDsDD,ECrDY,iBAAiB,CAyC7B;YDgBD,KAAK;QAAC,CAAC,CAAC;KAEP,CAAC,CAAC,CAAC;AACJ,yCAAyC","file":"x","sourcesContent":["(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[\"common\"],{\n\n/***/ \"./src/app/modules/shared/services/file-upload.service.ts\":\n/*!****************************************************************!*\\\n  !*** ./src/app/modules/shared/services/file-upload.service.ts ***!\n  \\****************************************************************/\n/*! exports provided: FileUploadService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FileUploadService\", function() { return FileUploadService; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ \"./node_modules/@angular/common/fesm2015/http.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ \"./node_modules/rxjs/_esm2015/index.js\");\n/* harmony import */ var _model_shared_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../model/shared.model */ \"./src/app/modules/shared/model/shared.model.ts\");\n\n\n\n\n\nlet FileUploadService = class FileUploadService {\n    constructor(http) {\n        this.http = http;\n        this.subject = new rxjs__WEBPACK_IMPORTED_MODULE_3__[\"Subject\"]();\n    }\n    sendDocUrl(docUrl) {\n        this.subject.next({ docUrl });\n    }\n    getDocUrl() {\n        return this.subject.asObservable();\n    }\n    uploadDoc(file, id, docFor, type, name) {\n        const formdata = new FormData();\n        const documentBody = {\n            docFor,\n            name,\n            type\n        };\n        formdata.append('file', file);\n        formdata.append('documentBody', JSON.stringify(documentBody));\n        const url = _model_shared_model__WEBPACK_IMPORTED_MODULE_4__[\"ApiEndpoint\"].DOCUMENT + '/' + id + '/upload';\n        const req = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__[\"HttpRequest\"]('POST', url, formdata, {\n            reportProgress: true,\n            responseType: 'text'\n        });\n        return this.http.request(req);\n    }\n    getExtension(fileName) {\n        const splits = fileName.split('.');\n        return '.' + splits[splits.length - 1];\n    }\n};\nFileUploadService.ctorParameters = () => [\n    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__[\"HttpClient\"] }\n];\nFileUploadService = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])({\n        providedIn: 'root'\n    })\n], FileUploadService);\n\n\n\n/***/ })\n\n}]);\n//# sourceMappingURL=common-es2015.js.map","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEvent, HttpRequest } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { ApiEndpoint } from '../model/shared.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileUploadService {\n\n  constructor(private http: HttpClient) { }\n\n  private subject = new Subject<any>();\n\n  sendDocUrl(docUrl: string) {\n    this.subject.next({ docUrl });\n  }\n\n  getDocUrl(): Observable<any> {\n    return this.subject.asObservable();\n  }\n\n  uploadDoc(file: File, id: number | string, docFor: string, type: string, name: string): Observable<HttpEvent<{}>> {\n\n    const formdata: FormData = new FormData();\n\n    const documentBody: DocumentBody = {\n      docFor,\n      name,\n      type\n    };\n\n    formdata.append('file', file);\n    formdata.append('documentBody', JSON.stringify(documentBody));\n\n    const url = ApiEndpoint.DOCUMENT + '/' + id + '/upload';\n    const req = new HttpRequest('POST', url, formdata, {\n      reportProgress: true,\n      responseType: 'text'\n    });\n\n    return this.http.request(req);\n  }\n\n  public getExtension(fileName: string) {\n    const splits = fileName.split('.');\n    return '.' + splits[splits.length - 1];\n  }\n\n}\n\nexport interface DocumentBody {\n\n  docFor: string;\n  type: string;\n  name: string;\n\n}\n"]}