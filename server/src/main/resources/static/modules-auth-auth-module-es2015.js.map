{"version":3,"sources":["./src/app/modules/auth/login/login.component.html","./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/login/login.component.scss","./src/app/modules/auth/login/login.component.ts","./src/app/modules/auth/services/auth.service.ts"],"names":[],"mappings":"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","file":"modules-auth-auth-module-es2015.js","sourcesContent":["export default \"<mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row>\\n        <span>Pesl Admin</span>\\n    </mat-toolbar-row>\\n</mat-toolbar>\\n<div class=\\\"d-flex justify-content-center align-items-center h-75\\\">\\n    <div class=\\\"p-5 mat-elevation-z1 text-center w-25\\\">\\n        <h2 class=\\\"font-300\\\">Sign In</h2>\\n        <br>\\n        <br>\\n        <form>\\n            <p>\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>Email</mat-label>\\n                    <input matInput placeholder=\\\"Enter your email\\\" [formControl]=\\\"email\\\" required>\\n                    <mat-error *ngIf=\\\"email.invalid\\\">Email is required.</mat-error>\\n                </mat-form-field>\\n            </p>\\n            <p>\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <input matInput placeholder=\\\"Enter your password\\\" [formControl]=\\\"password\\\" required>\\n                    <mat-error *ngIf=\\\"password.invalid\\\">Password is required.</mat-error>\\n                </mat-form-field>\\n            </p>\\n            <div class=\\\"text-right\\\">\\n                <button class=\\\"w-100\\\" type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"login()\\\">Login</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MaterialModule } from '../shared/material/material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthService } from './services/auth.service';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent }\n];\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [AuthService]\n})\nexport class AuthModule { }\n","export default \".error {\\n  height: 50px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ByaXlvL2FkZHMvc2Nob29sL2FkbWluLXVpL3NyYy9hcHAvbW9kdWxlcy9hdXRoL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tb2R1bGVzL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXJyb3J7XG4gICAgaGVpZ2h0OiA1MHB4O1xufSIsIi5lcnJvciB7XG4gIGhlaWdodDogNTBweDtcbn0iXX0= */\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { ILoginData } from '../model/auth.model';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class LoginComponent implements OnInit {\n\n  email = new FormControl('', Validators.required);\n  password = new FormControl('', Validators.required);\n  errorMessage: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private snackBar: MatSnackBar) { }\n\n  ngOnInit() {\n  }\n\n  async login() {\n\n    const loginData: ILoginData = {\n      email: this.email.value,\n      password: this.password.value\n    };\n\n    if (!loginData.email || !loginData.password) {\n      return;\n    }\n\n    try {\n      const resp = await this.authService.login(loginData).toPromise();\n      this.router.navigate(['admin/employees']);\n      sessionStorage.setItem('userData', JSON.stringify(resp.data));\n    } catch (error) {\n      console.error(error);\n      this.errorMessage = 'Invalid credential !';\n      this.snackBar.open('Invalid credential.', 'Got it!', { duration: 5000 });\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ILoginData } from '../model/auth.model';\nimport { environment } from '../../../../environments/environment';\n\n@Injectable()\nexport class AuthService {\n\n  LOGIN_URL = environment.baseUrl + '/security/login';\n\n  constructor(private http: HttpClient) { }\n\n  login(loginData: ILoginData) {\n    return this.http.post<any>(this.LOGIN_URL, loginData);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}