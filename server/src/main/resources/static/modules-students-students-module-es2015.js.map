{"version":3,"sources":["./src/app/modules/students/components/admission-fee/admission-fee-create-edit/admission-fee-create-edit.component.html","./src/app/modules/students/components/admission-fee/admission-fee-list/admission-fee-list.component.html","./src/app/modules/students/components/admission-fee/admission-fee-view/admission-fee-view.component.html","./src/app/modules/students/components/search-student-dialog/search-student-dialog.component.html","./src/app/modules/students/components/student-attendence/student-attendence-create-edit/student-attendence-create-edit.component.html","./src/app/modules/students/components/student-attendence/student-attendence-list/student-attendence-list.component.html","./src/app/modules/students/components/student/student-create-edit/student-create-edit.component.html","./src/app/modules/students/components/student/student-list/student-list.component.html","./src/app/modules/students/components/student/student-view/student-view.component.html","./src/app/modules/students/components/admission-fee/admission-fee-create-edit/admission-fee-create-edit.component.css","./src/app/modules/students/components/admission-fee/admission-fee-create-edit/admission-fee-create-edit.component.ts","./src/app/modules/students/components/admission-fee/admission-fee-create-edit/admission.ts","./src/app/modules/students/components/admission-fee/admission-fee-list/admission-fee-list.component.scss","./src/app/modules/students/components/admission-fee/admission-fee-list/admission-fee-list.component.ts","./src/app/modules/students/components/admission-fee/admission-fee-view/admission-fee-view.component.css","./src/app/modules/students/components/admission-fee/admission-fee-view/admission-fee-view.component.ts","./src/app/modules/students/components/search-student-dialog/search-student-dialog.component.css","./src/app/modules/students/components/search-student-dialog/search-student-dialog.component.ts","./src/app/modules/students/components/student-attendence/student-attendence-create-edit/student-attendence-create-edit.component.css","./src/app/modules/students/components/student-attendence/student-attendence-create-edit/student-attendence-create-edit.component.ts","./src/app/modules/students/components/student-attendence/student-attendence-list/student-attendence-list.component.css","./src/app/modules/students/components/student-attendence/student-attendence-list/student-attendence-list.component.ts","./src/app/modules/students/components/student/student-create-edit/student-create-edit.component.css","./src/app/modules/students/components/student/student-create-edit/student-create-edit.component.ts","./src/app/modules/students/components/student/student-create-edit/student.ts","./src/app/modules/students/components/student/student-list/student-list.component.scss","./src/app/modules/students/components/student/student-list/student-list.component.ts","./src/app/modules/students/components/student/student-view/student-view.component.css","./src/app/modules/students/components/student/student-view/student-view.component.ts","./src/app/modules/students/models/admission-fee.model.ts","./src/app/modules/students/models/student.model.ts","./src/app/modules/students/students.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,8OAA+K,0NAA0N,qLAAqL,kHAAkH,iFAAiF,cAAc,qRAAqR,uMAAuM,iBAAiB,qzFAAqzF,QAAQ,wWAAwW,iBAAiB,46BAA46B,QAAQ,6nDAA6nD,cAAc,uyFAAuyF,cAAc,0OAA0O,YAAY,uQAAuQ,uBAAuB,oQAAoQ,sBAAsB,6OAA6O,aAAa,0OAA0O,YAAY,ydAAyd,qEAAqE,sBAAsB,eAAe,+I;;;;;;;;;;;;ACAtpX;AAAe,8OAA+K,iSAAiS,wJAAwJ,igBAAigB,oEAAoE,+RAA+R,6BAA6B,qXAAqX,yFAAyF,KAAK,qBAAqB,8YAA8Y,wEAAwE,KAAK,YAAY,gSAAgS,cAAc,mQAAmQ,oBAAoB,gVAAgV,iBAAiB,2BAA2B,mHAAmH,iEAAiE,4BAA4B,eAAe,2PAA2P,6N;;;;;;;;;;;;ACAl2H;AAAe,8OAA+K,8OAA8O,yKAAyK,+IAA+I,6KAA6K,iHAAiH,iFAAiF,cAAc,oTAAoT,8BAA8B,+EAA+E,+BAA+B,6EAA6E,6BAA6B,yFAAyF,mCAAmC,qFAAqF,qCAAqC,2IAA2I,qGAAqG,KAAK,2BAA2B,iPAAiP,0BAA0B,4IAA4I,oFAAoF,KAAK,kBAAkB,wFAAwF,wBAAwB,kFAAkF,yBAAyB,iFAAiF,oBAAoB,oFAAoF,2BAA2B,+EAA+E,sBAAsB,8EAA8E,qBAAqB,uFAAuF,4BAA4B,obAAob,kCAAkC,mBAAmB,KAAK,kRAAkR,cAAc,kOAAkO,YAAY,+PAA+P,uBAAuB,4PAA4P,sBAAsB,qOAAqO,aAAa,kOAAkO,YAAY,sdAAsd,mEAAmE,sBAAsB,eAAe,yG;;;;;;;;;;;;ACA/7L;AAAe,4oBAA6kB,qaAAqa,eAAe,sPAAsP,cAAc,kPAAkP,cAAc,2OAA2O,oBAAoB,+OAA+O,sBAAsB,sOAAsO,YAAY,qGAAqG,iEAAiE,4SAA4S,yN;;;;;;;;;;;;ACA5tF;AAAe,qH;;;;;;;;;;;;ACAf;AAAe,8G;;;;;;;;;;;;ACAf;AAAe,uPAAwL,KAAK,8CAA8C,mMAAmM,qLAAqL,0BAA0B,oGAAoG,iFAAiF,cAAc,kQAAkQ,oKAAoK,iBAAiB,q5FAAq5F,QAAQ,gnBAAgnB,aAAa,+lBAA+lB,cAAc,ymBAAymB,QAAQ,wmBAAwmB,QAAQ,wjCAAwjC,QAAQ,gsEAAgsE,0CAA0C,qKAAqK,iBAAiB,0rEAA0rE,QAAQ,gjBAAgjB,YAAY,OAAO,0PAA0P,iBAAiB,suEAAsuE,QAAQ,geAAge,oLAAoL,iBAAiB,yoHAAyoH,iBAAiB,0oHAA0oH,iBAAiB,koH;;;;;;;;;;;;ACAtyuB;AAAe,iPAAkL,+RAA+R,6IAA6I,+dAA+d,eAAe,qRAAqR,gBAAgB,iRAAiR,cAAc,4QAA4Q,YAAY,8RAA8R,8BAA8B,6QAA6Q,cAAc,+RAA+R,oBAAoB,2RAA2R,YAAY,gVAAgV,iBAAiB,6CAA6C,kHAAkH,iEAAiE,oRAAoR,yN;;;;;;;;;;;;ACA77H;AAAe,8OAA+K,iOAAiO,yKAAyK,+IAA+I,kKAAkK,oHAAoH,iFAAiF,cAAc,oRAAoR,4wBAA4wB,wBAAwB,mHAAmH,0BAA0B,uLAAuL,+EAA+E,KAAK,gBAAgB,qTAAqT,mBAAmB,6GAA6G,oBAAoB,2GAA2G,kBAAkB,wGAAwG,gBAAgB,6GAA6G,oBAAoB,0GAA0G,kBAAkB,2GAA2G,mBAAmB,6GAA6G,qBAAqB,uGAAuG,kBAAkB,6GAA6G,oCAAoC,+GAA+G,aAAa,8GAA8G,qBAAqB,yRAAyR,0CAA0C,mKAAmK,iBAAiB,mHAAmH,yCAAyC,2FAA2F,0CAA0C,uFAAuF,uCAAuC,wFAAwF,wCAAwC,0LAA0L,iBAAiB,8GAA8G,qCAAqC,2FAA2F,sCAAsC,uFAAuF,mCAAmC,wFAAwF,oCAAoC,6LAA6L,oLAAoL,iBAAiB,gHAAgH,0BAA0B,6FAA6F,yBAAyB,uGAAuG,sCAAsC,0FAA0F,sCAAsC,+FAA+F,8CAA8C,2FAA2F,+BAA+B,wGAAwG,iBAAiB,gHAAgH,0BAA0B,6FAA6F,yBAAyB,uGAAuG,sCAAsC,0FAA0F,sCAAsC,6FAA6F,6CAA6C,2FAA2F,+BAA+B,wGAAwG,iBAAiB,oHAAoH,4BAA4B,6FAA6F,2BAA2B,uGAAuG,wCAAwC,0FAA0F,wCAAwC,6FAA6F,+CAA+C,2FAA2F,iCAAiC,qG;;;;;;;;;;;;ACAr5R;AAAe,6EAAc,iCAAiC,kBAAkB,GAAG,6CAA6C,mjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9E;AACV;AACU;AACO;AACxB;AACU;AACuD;AACS;AAC/D;AAC4C;AAEwB;AAOhH,IAAa,+BAA+B,GAA5C,MAAa,+BAAgC,SAAQ,oDAAS;IAG5D,YACU,IAAgB,EAChB,MAAc,EACd,cAA8B,EAC9B,SAAoB,EACpB,QAAqB;QAE7B,KAAK,EAAE,CAAC;QANA,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,cAAS,GAAT,SAAS,CAAW;QACpB,aAAQ,GAAR,QAAQ,CAAa;QAG7B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC5C,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,EAAE,CAAC;YACvB,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,IAAI,CAAC,eAAe,EAAE,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAEnD,MAAM,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC;YACnD,MAAM,UAAU,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,GAAG,UAAU,CAAC,CAAC;YACtD,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE,CAAC;YACtC,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAChE,IAAI,CAAC,uBAAuB,CAAC,sBAAsB,EAAE,CAAC;YACtD,IAAI,QAAQ,IAAI,UAAU,EAAE;gBAC1B,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,CAAC;gBACvC,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;gBACjD,IAAI,CAAC,uBAAuB,CAAC,sBAAsB,EAAE,CAAC;aACvD;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;IAER,CAAC;IAED,eAAe;QAEb,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,sFAAW,CAAC,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAE7E,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;YAC3B,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBAChC,IAAI,CAAC,cAAc,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACzD;YAED,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE;gBACrC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;aACjD;iBAAM;gBACL,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC;aACjC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO;QAEL,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QAC3C,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QACnE,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC5D,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;QAC/D,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,mCAAM,CAAC,IAAI,CAAC,SAAS,CAAC,aAAuB,CAAC,CAAC,CAAC;QACnF,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACvD,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAClE,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QACrE,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAC3D,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACzD,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QAEvE,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;QACvC,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YACxC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAClD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAChD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC5C,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;YAC5D,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;SACjE;QAED,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;IAElC,CAAC;IAED,IAAI;QAEF,MAAM,QAAQ,GAAG,IAAI,wDAAQ,CAAC,OAAO,CAAC,CAAC;QAEvC,MAAM,oBAAoB,GAAe;YACvC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK;YACxB,cAAc,EAAE,IAAI,CAAC,qBAAqB,CAAC,KAAK;YAChD,MAAM,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK;YACzC,YAAY,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK;YAC5C,aAAa,EAAE,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,YAAY,CAAC;YAChF,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK;YACpC,eAAe,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK;YAClD,UAAU,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK;YACxC,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK;YACtC,gBAAgB,EAAE,IAAI,CAAC,uBAAuB,CAAC,KAAK;YACpD,OAAO,EAAE;gBACP,oBAAoB,EAAE,IAAI;gBAC1B,GAAG,EAAE,IAAI;gBACT,UAAU,EAAE,IAAI;gBAChB,SAAS,EAAE,IAAI;gBACf,MAAM,EAAE,IAAI;gBACZ,UAAU,EAAE,IAAI;gBAChB,SAAS,EAAE,IAAI;gBACf,WAAW,EAAE,IAAI;gBACjB,oBAAoB,EAAE,IAAI;gBAC1B,QAAQ,EAAE,IAAI;gBACd,UAAU,EAAE,IAAI;gBAChB,MAAM,EAAE,IAAI;gBACZ,SAAS,EAAE,IAAI;gBACf,YAAY,EAAE,IAAI;gBAClB,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK;gBAC5B,WAAW,EAAE,IAAI;gBACjB,QAAQ,EAAE,IAAI;gBACd,UAAU,EAAE,IAAI;gBAChB,UAAU,EAAE,IAAI;gBAChB,gBAAgB,EAAE,IAAI;gBACtB,cAAc,EAAE,IAAI;gBACpB,MAAM,EAAE,IAAI;gBACZ,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,IAAI;gBACtB,cAAc,EAAE,IAAI;aACrB;YACD,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB,CAAC;QAEF,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QAElC,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,KAAK,EAAE,oBAAoB,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAEjF,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;gBAC5C,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAC7B,8HAAqB,kBAEnB,IAAI,EAAE,yFAAc,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IACpD,yFAAc,CAAC,sBAAsB,EAAE,EAC1C,CAAC;gBACL,OAAO;aACR;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAC7B,8HAAqB,kBAEnB,IAAI,EAAE,yFAAc,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IACrD,yFAAc,CAAC,uBAAuB,EAAE,EAC3C,CAAC;aACN;YAED,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,4BAA4B,CAAC,CAAC,CAAC;QAEvD,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE;gBACrC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;aACjD;iBAAM;gBACL,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC;aACjC;QACH,CAAC,CAAC,CAAC;IAEL,CAAC;IAEO,0BAA0B,CAAC,KAAa,EAAE,oBAAgC;QAChF,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,sFAAW,CAAC,UAAU,GAAG,GAAG,GAAG,KAAK,EAAE,oBAAoB,CAAC,CAAC;SACvF;aAAM;YACL,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,sFAAW,CAAC,UAAU,EAAE,oBAAoB,CAAC,CAAC;SAC1E;IACH,CAAC;IAEM,aAAa;QAClB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,mHAA4B,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;aAClF,WAAW,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC9B,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBAEpB,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,mCAAM,CAAC,IAAI,CAAC,OAAO,CAAC,gBAA0B,CAAC,CAAC,CAAC;gBACvF,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;gBACjE,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACxD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;gBAC7C,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;gBACvD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;aAEtD;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,YAAY;QAElB,MAAM,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;QAC/C,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;QAC5C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,sFAAW,CAAC,UAAU,GAAG,QAAQ,GAAG,QAAQ,GAAG,GAAG,GAAG,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAEhG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACtB,IAAI,CAAC,cAAc,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE;gBACrC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;aACjD;iBAAM;gBACL,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC;aACjC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,gBAAgB,CAAC,QAAgB;QACtC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;QAC1E,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAEM,0BAA0B,CAAC,QAAgB,EAAE,YAAoB;QAEtE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,sFAAW,CAAC,0BAA0B,GAAG,GAAG,GAAG,QAAQ,GAAG,GAAG,GAAG,YAAY,GAAG,gBAAgB,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAEnI,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,IAAI,CAAC;YACzC,IAAI,IAAI,CAAC,uBAAuB,EAAE;gBAChC,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC,CAAC;aACpF;QACH,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE;gBACrC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;aACjD;iBAAM;gBACL,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC;aACjC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,GAAG,CAAC,iBAAyB;IAE7B,CAAC;CAEF;;YA3OiB,+DAAU;YACR,sDAAM;YACE,8DAAc;YACnB,2DAAS;YACV,6DAAW;;AARpB,+BAA+B;IAL3C,+DAAS,CAAC;QACT,QAAQ,EAAE,+BAA+B;QACzC,yTAAyD;;KAE1D,CAAC;GACW,+BAA+B,CA+O3C;AA/O2C;;;;;;;;;;;;;;;;;;;;AClBwB;AAGsB;AAEL;AAG9E,MAAM,SAAS;IAgDlB;QA5CA,iBAAY,GAAG,KAAK,CAAC;QAGrB,oBAAe,GAAa,qEAAe,CAAC;QAC5C,sBAAiB,GAAa,6EAAiB,CAAC;QAChD,cAAS,GAAgB,+DAAS,CAAC;QAK5B,eAAU,GAAa;YAC1B,QAAQ;YACR,QAAQ;YACR,mBAAmB;YACnB,kBAAkB;YAClB,SAAS;YACT,QAAQ;YACR,QAAQ;SACX,CAAC;QAGK,QAAG,GAAW,EAAE,CAAC;QAExB,cAAS,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACtC,0BAAqB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAClD,2BAAsB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACnD,wBAAmB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAChD,yBAAoB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACjD,oBAAe,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC5C,yBAAoB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACjD,2BAAsB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;QAClE,sBAAiB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;QAC7D,qBAAgB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC7C,4BAAuB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAEpD,kBAAa,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC1C,qBAAgB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC7C,oBAAe,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC5C,kBAAa,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAE1C,mBAAc,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC3C,0BAAqB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAClD,4BAAuB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAGhD,IAAI,CAAC,aAAa,GAAG,IAAI,wDAAS,CAAC;YAC/B,qBAAqB,EAAE,IAAI,CAAC,qBAAqB;YACjD,mBAAmB,EAAE,IAAI,CAAC,mBAAmB;YAC7C,oBAAoB,EAAE,IAAI,CAAC,oBAAoB;YAC/C,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,aAAa,EAAE,IAAI,CAAC,oBAAoB;YACxC,sBAAsB,EAAE,IAAI,CAAC,sBAAsB;YACnD,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;YACzC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,uBAAuB,EAAE,IAAI,CAAC,uBAAuB;YAErD,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,eAAe,EAAE,IAAI,CAAC,eAAe;SAExC,CAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;QAC5D,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;QACnC,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,CAAC;QACrC,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC;QACpC,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC;QACpC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;QAChC,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;QAC/B,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;QAC7B,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,CAAC;QACrC,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,CAAC;QACvC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;QAChC,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,CAAC;IAC3C,CAAC;CACJ;;;;;;;;;;;;;ACtFD;AAAe,6EAAc,+BAA+B,GAAG,uBAAuB,mBAAmB,+BAA+B,GAAG,cAAc,oBAAoB,8BAA8B,GAAG,6CAA6C,2tC;;;;;;;;;;;;;;;;;;;;;;;;ACA9L;AACyC;AACpD;AACT;AAE8D;AAC2B;AAClB;AACvC;AAOzE,IAAa,yBAAyB,GAAtC,MAAa,yBAAyB;IAkBpC,YACU,IAAgB,EAChB,MAAc,EACd,MAAiB,EACjB,QAAqB,EACrB,WAAwB;QAJxB,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAW;QACjB,aAAQ,GAAR,QAAQ,CAAa;QACrB,gBAAW,GAAX,WAAW,CAAa;QApB3B,qBAAgB,GAAa;YAClC,MAAM;YACN,gBAAgB;YAChB,eAAe;YACf,iBAAiB;YACjB,OAAO;YACP,kBAAkB;YAClB,QAAQ;SACT,CAAC;QAEK,eAAU,GAAiB,EAAE,CAAC;QAGrC,iBAAY,GAAG,KAAK,CAAC;IAQjB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QACpD,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEO,aAAa;QAEnB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,qFAAW,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC1D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;YAC5B,IAAI,CAAC,oBAAoB,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACpE,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YACrD,IAAI,CAAC,oBAAoB,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC7C,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE;gBACrC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;aACjD;iBAAM;gBACL,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC;aACjC;YAED,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,WAAW,CAAC,WAAmB;QAC7B,IAAI,CAAC,oBAAoB,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IACtE,CAAC;IAEM,UAAU,CAAC,KAAa;QAE7B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,6BAA6B,GAAG,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC;IAE1E,CAAC;IAEM,WAAW,CAAC,KAAa;QAE9B,MAAM,gBAAgB,GAAkB;YACtC,KAAK,EAAE,kBAAkB;YACzB,QAAQ,EAAE,+CAA+C;SAC1D,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+IAA2B,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,gBAAgB,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC;aACxG,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAChC,IAAI,MAAM,EAAE;gBAEV,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,qFAAW,CAAC,UAAU,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBAC3E,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;wBAC5C,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAC7B,6HAAqB,kBAEnB,IAAI,EAAE,wFAAc,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IACpD,wFAAc,CAAC,sBAAsB,EAAE,EAC1C,CAAC;wBACL,OAAO;qBACR;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAC7B,6HAAqB,kBAEnB,IAAI,EAAE,wFAAc,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IACrD,wFAAc,CAAC,uBAAuB,EAAE,EAC3C,CAAC;qBACN;oBACD,IAAI,CAAC,oBAAoB,GAAG,IAAI,oEAAkB,CAAC,EAAE,CAAC,CAAC;oBACvD,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAClB,CAAC,EAAE,GAAG,CAAC,EAAE;oBACP,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACnB,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE;wBACrC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;qBACjD;yBAAM;wBACL,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC;qBACjC;oBACD,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAC7B,6HAAqB,kBAEnB,IAAI,EAAE,wFAAc,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,IAC/C,wFAAc,CAAC,sBAAsB,EAAE,EAC1C,CAAC;gBACP,CAAC,CAAC,CAAC;aAEJ;QACH,CAAC,CAAC,CAAC;IACP,CAAC;CAGF;;YA3FiB,+DAAU;YACR,sDAAM;YACN,2DAAS;YACP,6DAAW;YACR,sFAAW;;AATS;IAA1C,+DAAS,CAAC,8DAAY,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;4DAAyB;AAC7B;IAArC,+DAAS,CAAC,yDAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;uDAAe;AAfzC,yBAAyB;IALrC,+DAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,oSAAkD;;KAEnD,CAAC;GACW,yBAAyB,CA8GrC;AA9GqC;;;;;;;;;;;;;ACftC;AAAe,6GAA8C,mO;;;;;;;;;;;;;;;;;;;;;;;;ACAX;AACO;AACyC;AAEK;AACrD;AACgF;AAClB;AACvC;AAOzE,IAAa,yBAAyB,GAAtC,MAAa,yBAAyB;IAsBpC,YACU,IAAgB,EAChB,MAAc,EACd,cAA8B,EAC9B,MAAiB,EACjB,QAAqB,EACrB,WAAwB;QALxB,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAW;QACjB,aAAQ,GAAR,QAAQ,CAAa;QACrB,gBAAW,GAAX,WAAW,CAAa;QAtB3B,eAAU,GAAa;YAE5B,IAAI;YACJ,QAAQ;YACR,QAAQ;YACR,mBAAmB;YACnB,kBAAkB;YAClB,SAAS;YACT,QAAQ;YACR,QAAQ;SACT,CAAC;QAGK,QAAG,GAAW,EAAE,CAAC;QACxB,iBAAY,GAAG,KAAK,CAAC;QAUnB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC5C,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QACpD,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,YAAY;QAEV,IAAI,IAAI,CAAC;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qFAAW,CAAC,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACxE,IAAI,GAAG,IAAI,CAAC;YACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;YAE3B,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE;gBACvB,IAAI,CAAC,cAAc,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aACnE;QAEH,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE;gBACrC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;aACjD;iBAAM;gBACL,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC;aACjC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QAEJ,MAAM,gBAAgB,GAAkB;YACtC,KAAK,EAAE,kBAAkB;YACzB,QAAQ,EAAE,+CAA+C;SAC1D,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+IAA2B,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,gBAAgB,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC;aACxG,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAChC,IAAI,MAAM,EAAE;gBAEV,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,qFAAW,CAAC,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBAEhF,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;wBAC5C,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAC7B,6HAAqB,kBAEnB,IAAI,EAAE,wFAAc,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IACpD,wFAAc,CAAC,sBAAsB,EAAE,EAC1C,CAAC;wBACL,OAAO;qBACR;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAC7B,6HAAqB,kBAEnB,IAAI,EAAE,wFAAc,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IACrD,wFAAc,CAAC,uBAAuB,EAAE,EAC3C,CAAC;qBACN;oBAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,4BAA4B,CAAC,CAAC,CAAC;gBACvD,CAAC,EAAE,GAAG,CAAC,EAAE;oBACP,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACnB,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE;wBACrC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;qBACjD;yBAAM;wBACL,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC;qBACjC;oBACD,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAC7B,6HAAqB,kBAEnB,IAAI,EAAE,wFAAc,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,IAC/C,wFAAc,CAAC,sBAAsB,EAAE,EAC1C,CAAC;gBACP,CAAC,CAAC,CAAC;aAEJ;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,IAAI;QACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,4BAA4B,GAAG,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,cAAc,CAAC,KAAa;IAE5B,CAAC;IAED,UAAU,CAAC,GAAS;IAEpB,CAAC;IAED,MAAM,CAAC,GAAS;QACd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+IAA2B,EAC1C;YACE,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE;gBACJ,KAAK,EAAE,SAAS;gBAChB,QAAQ,EAAE,0BAA0B;aACrC;YACC,YAAY,EAAE,IAAI;SACrB,CAAC;aACD,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAChC,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qFAAW,CAAC,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,OAAO,GAAG,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBAE/F,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,MAAM,aAAa,GAAsB;wBACvC,UAAU,EAAE,kBAAkB;wBAC9B,QAAQ,EAAE,IAAI;wBACd,kBAAkB,EAAE,QAAQ;wBAC5B,gBAAgB,EAAE,KAAK;qBACxB,CAAC;oBACF,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,6HAAqB,kBAAI,IAAI,EAAE,4BAA4B,IAAK,aAAa,EAAG,CAAC;gBAEnH,CAAC,EAAE,GAAG,CAAC,EAAE;oBACP,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACnB,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE;wBACrC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;qBACjD;yBAAM;wBACL,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC;qBACjC;gBACH,CAAC,CAAC,CAAC;aAEJ;QACH,CAAC,CAAC,CAAC;IACP,CAAC;CAEF;;YAxIiB,+DAAU;YACR,sDAAM;YACE,8DAAc;YACtB,2DAAS;YACP,6DAAW;YACR,sFAAW;;AA5BvB,yBAAyB;IALrC,+DAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,oSAAkD;;KAEnD,CAAC;GACW,yBAAyB,CA+JrC;AA/JqC;;;;;;;;;;;;;ACftC;AAAe,8EAAe,+FAA+F,mBAAmB,qBAAqB,yBAAyB,GAAG,qBAAqB,qCAAqC,GAAG,UAAU,iBAAiB,GAAG,iDAAiD,u2B;;;;;;;;;;;;;;;;;;;;ACAxQ;AACwC;AAC3D;AAEsB;AAOxE,IAAa,4BAA4B,GAAzC,MAAa,4BAA4B;IAYvC,YACS,SAAqD,EAC5B,IAAS,EAAU,IAAgB;QAD5D,cAAS,GAAT,SAAS,CAA4C;QAC5B,SAAI,GAAJ,IAAI,CAAK;QAAU,SAAI,GAAJ,IAAI,CAAY;QARrE,4CAA4C;QACrC,oBAAe,GAAa,CAAC,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,gBAAgB,EAAE,kBAAkB,EAAE,oBAAoB,CAAC,CAAC;QAEhI,aAAQ,GAAe,EAAE,CAAC;QACjC,qBAAgB,GAAG,KAAK,CAAC;IAKrB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAEO,WAAW;QAEjB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,qFAAW,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAExD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;YAC1B,IAAI,CAAC,kBAAkB,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAChE,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YACnD,IAAI,CAAC,kBAAkB,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACzC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAEhC,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE;gBACrC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;aACjD;iBAAM;gBACL,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC;aACjC;YACD,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,WAAmB;QAC7B,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IACpE,CAAC;IAEM,MAAM,CAAC,OAAiB;QAC7B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;IAEM,KAAK;QACV,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;CAEF;;YA1CqB,8DAAY;4CAC7B,oDAAM,SAAC,iEAAe;YAAkC,+DAAU;;AAX1B;IAA1C,+DAAS,CAAC,8DAAY,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;+DAAyB;AAC7B;IAArC,+DAAS,CAAC,yDAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;0DAAe;AAJzC,4BAA4B;IALxC,+DAAS,CAAC;QACT,QAAQ,EAAE,2BAA2B;QACrC,+RAAqD;;KAEtD,CAAC;IAeG,6GAAM,CAAC,iEAAe,CAAC;GAdf,4BAA4B,CAuDxC;AAvDwC;;;;;;;;;;;;;ACXzC;AAAe,6GAA8C,2Q;;;;;;;;;;;;;;;;;ACAX;AAOlD,IAAa,oCAAoC,GAAjD,MAAa,oCAAoC;IAE/C,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,oCAAoC;IALhD,+DAAS,CAAC;QACT,QAAQ,EAAE,oCAAoC;QAC9C,6UAA8D;;KAE/D,CAAC;GACW,oCAAoC,CAOhD;AAPgD;;;;;;;;;;;;;ACPjD;AAAe,6GAA8C,uP;;;;;;;;;;;;;;;;;ACAX;AAOlD,IAAa,8BAA8B,GAA3C,MAAa,8BAA8B;IAEzC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,8BAA8B;IAL1C,+DAAS,CAAC;QACT,QAAQ,EAAE,6BAA6B;QACvC,wTAAuD;;KAExD,CAAC;GACW,8BAA8B,CAO1C;AAP0C;;;;;;;;;;;;;ACP3C;AAAe,iIAAkE,mCAAmC,GAAG,+CAA+C,2iB;;;;;;;;;;;;;;;;;;;;;;;;;;ACApH;AACd;AACc;AACO;AACxB;AACU;AAC6C;AAEwB;AAChE;AAOhD,IAAa,0BAA0B,GAAvC,MAAa,0BAA2B,SAAQ,gDAAO;IAErD,YACU,IAAgB,EAChB,MAAc,EACd,cAA8B,EAC9B,QAAqB;QAE7B,KAAK,EAAE,CAAC;QALA,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,aAAQ,GAAR,QAAQ,CAAa;QAG7B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC5C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,EAAE,CAAC;YACxB,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC1C,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAE3C,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACtC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAEzC,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;QAC9B,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;QAE5B,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAC1C,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAE7C,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;QAClC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;IAClC,CAAC;IAED,YAAY;QAEV,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,qFAAW,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACxD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;QAC7B,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QAER,IAAI,IAAI,CAAC;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qFAAW,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACvE,IAAI,GAAG,IAAI,CAAC;YACZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;YACzB,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE;gBACrC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;aACjD;iBAAM;gBACL,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC;aACjC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI;QAEF,MAAM,QAAQ,GAAG,IAAI,wDAAQ,CAAC,OAAO,CAAC,CAAC;QACvC,MAAM,kBAAkB,GAAa;YACnC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK;YACxB,cAAc,EAAE,IAAI,CAAC,qBAAqB,CAAC,KAAK;YAChD,gBAAgB,EAAE,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE,YAAY,CAAC;YACtF,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK;YAChC,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK;YACtC,UAAU,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK;YACxC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK;YACpC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK;YAChC,SAAS,EAAC,IAAI;YACd,UAAU,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK;YACxC,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK;YACtC,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK;YAC1C,oBAAoB,EAAE,IAAI;YAC1B,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK;YACpC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK;YACpC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK;YAChC,GAAG,EAAE,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,YAAY,CAAC;YAC5D,WAAW,EAAE,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,YAAY,CAAC;YAE5E,oBAAoB,EAAE;gBACpB,EAAE,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK;gBAC/B,SAAS,EAAE,IAAI,CAAC,oBAAoB,CAAC,KAAK;gBAC1C,UAAU,EAAE,IAAI,CAAC,qBAAqB,CAAC,KAAK;gBAC5C,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK;gBACtC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK;gBAClC,QAAQ,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK;aACzC;YACD,gBAAgB,EAAE;gBAChB,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK;gBAC3B,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK;gBACtC,UAAU,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK;gBACxC,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK;gBAClC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK;gBAC9B,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK;aACrC;YACD,cAAc,EAAE,IAAI,CAAC,qBAAqB,CAAC,KAAK;YAChD,UAAU,EAAE;gBACV,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK;gBAC7B,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK;gBAClC,GAAG,EAAE,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,YAAY,CAAC;gBAClE,gBAAgB,EAAE,IAAI,CAAC,qBAAqB,CAAC,KAAK;gBAClD,MAAM,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK;gBAC5C,UAAU,EAAE,IAAI,CAAC,uBAAuB,CAAC,KAAK;gBAC9C,SAAS,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK;aAC7C;YACD,UAAU,EAAE;gBACV,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK;gBAC7B,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK;gBAClC,GAAG,EAAE,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,YAAY,CAAC;gBAClE,gBAAgB,EAAE,IAAI,CAAC,qBAAqB,CAAC,KAAK;gBAClD,MAAM,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK;gBAC5C,UAAU,EAAE,IAAI,CAAC,uBAAuB,CAAC,KAAK;gBAC9C,SAAS,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK;aAC7C;YACD,YAAY,EAAE;gBACZ,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK;gBAC7B,IAAI,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK;gBACpC,GAAG,EAAE,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,YAAY,CAAC;gBACpE,gBAAgB,EAAE,IAAI,CAAC,uBAAuB,CAAC,KAAK;gBACpD,MAAM,EAAE,IAAI,CAAC,2BAA2B,CAAC,KAAK;gBAC9C,UAAU,EAAE,IAAI,CAAC,yBAAyB,CAAC,KAAK;gBAChD,SAAS,EAAE,IAAI,CAAC,wBAAwB,CAAC,KAAK;aAC/C;SACF,CAAC;QAEF,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAEhC,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,MAAM,EAAE,kBAAkB,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAEhF,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;gBAC5C,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAC7B,6HAAqB,kBAEnB,IAAI,EAAE,wFAAc,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IACpD,wFAAc,CAAC,sBAAsB,EAAE,EAC1C,CAAC;gBACL,OAAO;aACR;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAC7B,6HAAqB,kBAEnB,IAAI,EAAE,wFAAc,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IACrD,wFAAc,CAAC,uBAAuB,EAAE,EAC3C,CAAC;aACN;YAED,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAE5C,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE;gBACrC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;aACjD;iBAAM;gBACL,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC;aACjC;YACD,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAC7B,6HAAqB,kBAEnB,IAAI,EAAE,wFAAc,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,IAC/C,wFAAc,CAAC,sBAAsB,EAAE,EAC1C,CAAC;QACP,CAAC,CAAC,CAAC;IAEL,CAAC;IAEO,0BAA0B,CAAC,UAAkB,EAAE,kBAA4B;QACjF,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,qFAAW,CAAC,QAAQ,GAAG,GAAG,GAAG,UAAU,EAAE,kBAAkB,CAAC,CAAC;SACxF;aAAM;YACL,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,qFAAW,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;SACtE;IACH,CAAC;IAED,OAAO;QAEL,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACzC,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QACjE,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,mCAAM,CAAC,IAAI,CAAC,OAAO,CAAC,gBAA0B,CAAC,CAAC,CAAC;QACvF,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACjD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACvD,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACzD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACrD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACrD,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACzD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACjD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACrD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACvD,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAC3D,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACjD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,mCAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAa,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,mCAAM,CAAC,IAAI,CAAC,OAAO,CAAC,WAAqB,CAAC,CAAC,CAAC;QAE7E,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAEjE,MAAM,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC;QACvD,IAAI,gBAAgB,EAAE;YACpB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;YAChD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;YAC3D,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;YAC7D,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;YACvD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;YACnD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;SAC1D;QAED,MAAM,oBAAoB,GAAG,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC;QAC/D,IAAI,oBAAoB,EAAE;YACxB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;YACxD,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;YACnE,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;YACrE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;YAC/D,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;YAC3D,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;SAClE;QAED,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;QAC3C,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;YAC5C,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACjD,IAAI,UAAU,CAAC,GAAG,EAAE;gBAClB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,mCAAM,CAAC,UAAU,CAAC,GAAa,CAAC,CAAC,CAAC;aAClE;YACD,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;YAC3D,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAC3D,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;YACjE,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SAC9D;QAED,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;QAC3C,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;YAC5C,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACjD,IAAI,UAAU,CAAC,GAAG,EAAE;gBAClB,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,mCAAM,CAAC,UAAU,CAAC,GAAa,CAAC,CAAC,CAAC;aACnE;YACD,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;YAC3D,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAC3D,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;YACjE,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SAC9D;QAED,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;QAC/C,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;YAC9C,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACrD,IAAI,YAAY,CAAC,GAAG,EAAE;gBACpB,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,mCAAM,CAAC,YAAY,CAAC,GAAa,CAAC,CAAC,CAAC;aACtE;YACD,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;YAC/D,IAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAC/D,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;YACrE,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;SAClE;IACH,CAAC;CAEF;;YAnQiB,+DAAU;YACR,sDAAM;YACE,8DAAc;YACpB,6DAAW;;AANpB,0BAA0B;IALtC,+DAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;QACnC,iSAAmD;;KAEpD,CAAC;GACW,0BAA0B,CAsQtC;AAtQsC;;;;;;;;;;;;;;;;;;;;;;AChB6B;AACnC;AACkD;AAEwB;AAGpG,MAAM,OAAO;IAoFhB;QAhFA,iBAAY,GAAG,KAAK,CAAC;QAGrB,aAAQ,GAAa,qEAAe,CAAC;QACrC,cAAS,GAAgB,EAAE,CAAC;QAC5B,YAAO,GAAgB,6DAAO,CAAC;QAC/B,UAAK,GAAgB,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;QAChF,gBAAW,GAAG,qFAAW,CAAC;QAC1B,cAAS,GAAG,mFAAS,CAAC;QACtB,gBAAW,GAAG,qFAAW,CAAC;QAC1B,cAAS,GAAG,mFAAS,CAAC;QAEtB,uBAAuB;QACvB,cAAS,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACtC,0BAAqB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAClD,4BAAuB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACpD,kBAAa,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAE1C,wBAAwB;QACxB,qBAAgB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;QAC5D,sBAAiB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC9C,oBAAe,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;QAC3D,oBAAe,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC5C,kBAAa,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC1C,eAAU,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;QACtD,uBAAkB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC/C,kBAAa,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC1C,sBAAiB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC9C,oBAAe,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC5C,iBAAY,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACzC,uBAAkB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC/C,qBAAgB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAE7C,4BAA4B;QAC5B,0BAAqB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAClD,iBAAY,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACzC,qBAAgB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC7C,sBAAiB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC9C,mBAAc,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC3C,iBAAY,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACzC,oBAAe,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAE5C,wBAAwB;QACxB,qBAAgB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC7C,yBAAoB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACjD,0BAAqB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAClD,uBAAkB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC/C,qBAAgB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC7C,wBAAmB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAEhD,yBAAyB;QACzB,mBAAc,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC3C,sBAAiB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC9C,qBAAgB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC7C,2BAAsB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACnD,0BAAqB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAClD,4BAAuB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACpD,8BAAyB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACtD,2BAAsB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAEnD,yBAAyB;QACzB,mBAAc,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC3C,sBAAiB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC9C,qBAAgB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC7C,2BAAsB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACnD,0BAAqB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAClD,4BAAuB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACpD,8BAAyB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACtD,2BAAsB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAEnD,2BAA2B;QAC3B,mBAAc,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC3C,wBAAmB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAChD,uBAAkB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC/C,6BAAwB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACrD,4BAAuB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACpD,8BAAyB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACtD,gCAA2B,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACxD,6BAAwB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAGjD,IAAI,CAAC,WAAW,GAAG,IAAI,wDAAS,CAAC;YAE7B,wBAAwB;YACxB,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;YACzC,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,kBAAkB,EAAE,IAAI,CAAC,kBAAkB;YAE3C,0BAA0B;YAC1B,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;YACzC,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,eAAe;YAErC,yBAAyB;YACzB,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;YACzC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,sBAAsB,EAAE,IAAI,CAAC,sBAAsB;YAEnD,yBAAyB;YACzB,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;YACzC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,sBAAsB,EAAE,IAAI,CAAC,sBAAsB;YAEnD,2BAA2B;YAC3B,mBAAmB,EAAE,IAAI,CAAC,mBAAmB;YAC7C,kBAAkB,EAAE,IAAI,CAAC,kBAAkB;YAC3C,wBAAwB,EAAE,IAAI,CAAC,wBAAwB;SAC1D,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,CAAC;QACrC,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,CAAC;QACvC,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,mCAAM,EAAE,CAAC,CAAC;IACpD,CAAC;CACJ;;;;;;;;;;;;;AClID;AAAe,6EAAc,+BAA+B,GAAG,uBAAuB,mBAAmB,+BAA+B,GAAG,cAAc,oBAAoB,8BAA8B,GAAG,6CAA6C,mpC;;;;;;;;;;;;;;;;;;;;;;;;ACAtL;AACgE;AAC5F;AACS;AACqD;AAE2B;AAClB;AACvC;AAOzE,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAY/B,YACU,IAAgB,EAChB,MAAc,EACd,MAAiB,EACjB,QAAqB,EACrB,WAAwB;QAJxB,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAW;QACjB,aAAQ,GAAR,QAAQ,CAAa;QACrB,gBAAW,GAAX,WAAW,CAAa;QAXlC,4CAA4C;QACrC,oBAAe,GAAa,CAAC,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,gBAAgB,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAE1I,aAAQ,GAAe,EAAE,CAAC;QACjC,iBAAY,GAAG,KAAK,CAAC;IAQjB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QACpD,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAEO,WAAW;QAEjB,IAAI,IAAI,CAAC;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qFAAW,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAEnD,IAAI,GAAG,IAAI,CAAC;YACZ,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;gBAElC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC1B,IAAI,CAAC,kBAAkB,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAChE,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;gBACnD,IAAI,CAAC,kBAAkB,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBAEzC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;oBAClB,IAAI,CAAC,YAAY,GAAG,kBAAkB,CAAC;iBACxC;aAEF;iBAAM;gBACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;aAC5C;QAEH,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE;gBACrC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;aACjD;iBAAM;gBACL,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC;aACjC;YAED,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,WAAW,CAAC,WAAmB;QAC7B,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IACpE,CAAC;IAEM,UAAU,CAAC,MAAc;QAE9B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,GAAG,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC;IAEhE,CAAC;IAEM,WAAW,CAAC,MAAc;QAC/B,MAAM,gBAAgB,GAAkB;YACtC,KAAK,EAAE,gBAAgB;YACvB,QAAQ,EAAE,6CAA6C;SACxD,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+IAA2B,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,gBAAgB,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC;aACxG,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAChC,IAAI,MAAM,EAAE;gBAEV,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,qFAAW,CAAC,QAAQ,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBAC1E,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;wBAC5C,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAC7B,6HAAqB,kBAEnB,IAAI,EAAE,wFAAc,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IACpD,wFAAc,CAAC,sBAAsB,EAAE,EAC1C,CAAC;wBACL,OAAO;qBACR;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAC7B,6HAAqB,kBAEnB,IAAI,EAAE,wFAAc,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IACrD,wFAAc,CAAC,uBAAuB,EAAE,EAC3C,CAAC;qBACN;oBACD,IAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,CAAC,EAAE,GAAG,CAAC,EAAE;oBACP,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACnB,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE;wBACrC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;qBACjD;yBAAM;wBACL,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC;qBACjC;oBACD,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAC7B,6HAAqB,kBAEnB,IAAI,EAAE,wFAAc,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,IAC/C,wFAAc,CAAC,sBAAsB,EAAE,EAC1C,CAAC;gBACP,CAAC,CAAC,CAAC;aAEJ;QACH,CAAC,CAAC,CAAC;IACP,CAAC;CAGF;;YAvGiB,+DAAU;YACR,sDAAM;YACN,2DAAS;YACP,6DAAW;YACR,sFAAW;;AAdS;IAA1C,+DAAS,CAAC,8DAAY,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;uDAAyB;AAC7B;IAArC,+DAAS,CAAC,yDAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;kDAAe;AAJzC,oBAAoB;IALhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,4QAA4C;;KAE7C,CAAC;GACW,oBAAoB,CAoHhC;AApHgC;;;;;;;;;;;;;ACfjC;AAAe,6GAA8C,2M;;;;;;;;;;;;;;;;;;;;;;;;;ACAX;AACO;AACsB;AAEwB;AAC5C;AACuE;AAC1C;AACwB;AACvC;AAOzE,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAU/B,YACU,IAAgB,EAChB,MAAc,EACd,cAA8B,EAC9B,MAAiB,EACjB,iBAAoC,EACpC,QAAqB,EACrB,WAAwB;QANxB,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAW;QACjB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,aAAQ,GAAR,QAAQ,CAAa;QACrB,gBAAW,GAAX,WAAW,CAAa;QAVlC,kBAAa,GAAG,4CAA4C,CAAC;QAC7D,iBAAY,GAAG,KAAK,CAAC;QAWnB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC5C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QACpD,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,UAAU;QAER,IAAI,IAAI,CAAC;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qFAAW,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACvE,IAAI,GAAG,IAAI,CAAC;YACZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;YACzB,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;gBAC3B,IAAI,CAAC,aAAa,GAAG,qFAAW,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,GAAG,OAAO,CAAC;aACxF;QACH,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE;gBACrC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;aACjD;iBAAM;gBACL,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC;aACjC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,MAAM,gBAAgB,GAAkB;YACtC,KAAK,EAAE,gBAAgB;YACvB,QAAQ,EAAE,6CAA6C;SACxD,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+IAA2B,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,gBAAgB,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC;aACxG,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAChC,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,qFAAW,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBAC/E,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;wBAC5C,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAC7B,6HAAqB,kBAEnB,IAAI,EAAE,wFAAc,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IACpD,wFAAc,CAAC,sBAAsB,EAAE,EAC1C,CAAC;wBACL,OAAO;qBACR;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAC7B,6HAAqB,kBAEnB,IAAI,EAAE,wFAAc,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IACrD,wFAAc,CAAC,uBAAuB,EAAE,EAC3C,CAAC;qBACN;oBACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBAC5C,CAAC,EAAE,GAAG,CAAC,EAAE;oBACP,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACnB,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE;wBACrC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;qBACjD;yBAAM;wBACL,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC;qBACjC;oBACD,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAC7B,6HAAqB,kBAEnB,IAAI,EAAE,wFAAc,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,IAC/C,wFAAc,CAAC,sBAAsB,EAAE,EAC1C,CAAC;gBACP,CAAC,CAAC,CAAC;aAEJ;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,IAAI;QACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,GAAG,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC;IACrE,CAAC;IAED,YAAY,CAAC,IAAU;QAErB,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,aAAa,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAC7G,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,KAAK,CAAC,IAAI,KAAK,kEAAa,CAAC,cAAc,EAAE;gBAC/C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;aAChE;iBAAM,IAAI,KAAK,YAAY,iEAAY,EAAE;gBAExC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC3B,IAAI,IAAI,GAAiB,KAAK,CAAC,IAAc,CAAC;gBAC9C,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAExB,MAAM,MAAM,GAAG,qFAAW,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC;gBACzE,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;gBAC5B,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;aACvC;QACH,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;IAEL,CAAC;CAEF;;YA7GiB,+DAAU;YACR,sDAAM;YACE,8DAAc;YACtB,2DAAS;YACE,qGAAiB;YAC1B,6DAAW;YACR,sFAAW;;AAjBvB,oBAAoB;IALhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,4QAA4C;;KAE7C,CAAC;GACW,oBAAoB,CAwHhC;AAxHgC;;;;;;;;;;;;;;;;;ACW1B,MAAM,iBAAiB,GAAa,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;ACgB5D,MAAM,SAAS,GAAgB;IAElC,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE;IACpC,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;IAC1B,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE;IACpC,EAAE,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE;IACtC,EAAE,GAAG,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE;IACxC,EAAE,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE;IACtC,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE;IACpC,EAAE,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE;IACtC,EAAE,GAAG,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE;IACxC,EAAE,GAAG,EAAE,YAAY,EAAE,KAAK,EAAE,YAAY,EAAE;IAC1C,EAAE,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE;IACtC,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE;CAEvC,CAAC;AAEK,MAAM,eAAe,GAAa,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;AAEzD,MAAM,OAAO,GAAgB;IAChC,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE;IAC9B,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE;CACrC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjEuC;AACM;AAC4F;AACpB;AACA;AACL;AACE;AACpB;AACA;AAChG,4CAA4C;AACmH;AACpB;AACpF;AACa;AACF;AACF;AACT;AAEvD,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,4GAAoB,EAAE;IAC7C,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,gIAA0B,EAAE;IACtD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,4GAAoB,EAAE;IACrD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,gIAA0B,EAAE;IAE3D,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,mIAAyB,EAAE;IAC5D,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,uJAA+B,EAAE;IACtE,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,mIAAyB,EAAE;IACrE,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,uJAA+B,EAAE;IAE3E,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,4KAAoC,EAAE;CAEzE,CAAC;AAyBF,IAAa,cAAc,GAA3B,MAAa,cAAc;CAAI;AAAlB,cAAc;IAvB1B,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,uJAA+B;YAC/B,mIAAyB;YACzB,mIAAyB;YACzB,8HAA4B;YAC5B,gIAA0B;YAC1B,4GAAoB;YACpB,4GAAoB;YACpB,4KAAoC;YACpC,wJAA8B;SAC/B;QACD,OAAO,EAAE;YACP,4DAAY;YACZ,6DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,gFAAc;YACd,2DAAW;YACX,mEAAmB;YACnB,4EAAgB;YAChB,mEAAY;SACb;QACD,eAAe,EAAE,CAAC,8HAA4B,CAAC;KAChD,CAAC;GACW,cAAc,CAAI;AAAJ","file":"modules-students-students-module-es2015.js","sourcesContent":["export default \"<div class=\\\"shadow form-min-height\\\">\\n  <div class=\\\"row p-1 bg-gold\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <span class=\\\"font-400 font-banner\\\" style=\\\"line-height: 35px;\\\">Admission</span>\\n    </div>\\n    <div class=\\\"col-md-6 text-right\\\">\\n      <button class=\\\"btn btn-cancel\\\" routerLink=\\\"/admin/students/admissions\\\">\\n        <mat-icon class=\\\"white-icon\\\">clear</mat-icon>&nbsp;Cancel\\n      </button>\\n      <button class=\\\"btn btn-save\\\" (click)=\\\"save()\\\" [disabled]='!admissionForm.valid'>\\n        <mat-icon class=\\\"white-icon\\\">save_alt</mat-icon>&nbsp;Save Admission\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #f07a7a;color: #ffffff\\\" *ngIf=\\\"errorMessage\\\">\\n    <div class=\\\"col\\\">\\n      <span>{{errorMessage}}</span>\\n    </div>\\n  </div>\\n\\n  <div [ngClass]=\\\"['pt-1','pr-5','pl-5']\\\" class=\\\"bg-white\\\">\\n    <mat-tab-group>\\n      <mat-tab>\\n        <ng-template mat-tab-label>\\n          <mat-icon class=\\\"example-tab-icon\\\">info</mat-icon>\\n          <span style=\\\"font-size: 13px;\\\">Admission Info</span>\\n        </ng-template>\\n\\n        <div class=\\\"row pt-3\\\">\\n\\n          <!-- Student Info -->\\n          <div class=\\\"col-md-12\\\">\\n            <p style=\\\"font-weight: bold; font-size: 14px;\\\">Student Info</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Search student</mat-label>\\n              <mat-icon matSuffix class=\\\"search-icon\\\">search</mat-icon>\\n              <input matInput placeholder=\\\"Search student\\\"  (mousedown)=\\\"searchStudent()\\\">\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>First name</mat-label>\\n              <input matInput placeholder=\\\"Placeholder\\\" [formControl]=\\\"firstNameFormCtl\\\" (keydown)=\\\"searchStudent()\\\">\\n              <mat-error *ngIf=\\\"firstNameFormCtl.hasError('required')\\\">\\n                First name is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Last name</mat-label>\\n              <input matInput placeholder=\\\"Placeholder\\\" [formControl]=\\\"lastNameFormCtl\\\">\\n              <mat-error *ngIf=\\\"lastNameFormCtl.hasError('required')\\\">\\n                Last name is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Registration Number</mat-label>\\n              <input matInput placeholder=\\\"Placeholder\\\" [formControl]=\\\"registrationNoFormCtl\\\">\\n              <mat-error *ngIf=\\\"registrationNoFormCtl.hasError('required')\\\">\\n                Registration Number is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Registration Date</mat-label>\\n              <input matInput [matDatepicker]=\\\"regDate\\\" placeholder=\\\"mm/dd/yyyy\\\" [formControl]=\\\"registrationDateFormCtl\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"regDate\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #regDate></mat-datepicker>\\n              <mat-error *ngIf=\\\"registrationDateFormCtl.hasError('required')\\\">\\n                Registration Date is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Student Status</mat-label>\\n              <mat-select placeholder=\\\"Status\\\" [formControl]=\\\"studentStatusFormCtl\\\">\\n                <mat-option *ngFor=\\\"let option of studentStatuses\\\" [value]=\\\"option\\\">\\n                  {{option}}\\n                </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"studentStatusFormCtl.hasError('required')\\\">\\n                Student Status is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div> \\n\\n          <div class=\\\"col-md-12\\\">\\n            <p style=\\\"font-weight: bold; font-size: 14px;\\\">Admission Info</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\" *ngIf=\\\"admId\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Admission Reference No</mat-label>\\n              <input matInput placeholder=\\\"Admission Reference No\\\" [formControl]=\\\"admissionRefNoFormCtl\\\">\\n              <mat-error *ngIf=\\\"admissionRefNoFormCtl.hasError('required')\\\">\\n                Admission Reference No is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-4\\\" *ngIf=\\\"admId\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Admission Status</mat-label>\\n              <mat-select placeholder=\\\"Status\\\" [formControl]=\\\"admissionStatusFormCtl\\\">\\n                <mat-option *ngFor=\\\"let option of admissionStatuses\\\" [value]=\\\"option\\\">\\n                  {{option}}\\n                </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"admissionStatusFormCtl.hasError('required')\\\">\\n                Admission Status is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div> \\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Academic Year</mat-label>\\n              <input matInput placeholder=\\\"Placeholder\\\" [formControl]=\\\"academicYearFormCtl\\\">\\n              <mat-error *ngIf=\\\"academicYearFormCtl.hasError('required')\\\">\\n                Academic Year is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-4\\\" *ngIf=\\\"admId\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Admission Date</mat-label>\\n              <input matInput placeholder=\\\"Placeholder\\\" [formControl]=\\\"admissionDateFormCtl\\\">\\n              <mat-error *ngIf=\\\"admissionDateFormCtl.hasError('required')\\\">\\n                Admission Date is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Admission For</mat-label>\\n              <mat-select #standard placeholder=\\\"Status\\\" [formControl]=\\\"standardFormCtl\\\" (selectionChange)=\\\"onSelectStandard(standard.value)\\\">\\n                <mat-option *ngFor=\\\"let option of standards\\\" [value]=\\\"option.value\\\">\\n                  {{option.value}}\\n                </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"standardFormCtl.hasError('required')\\\">\\n                Standard is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n         \\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Admission Amount</mat-label>\\n              <input matInput placeholder=\\\"Placeholder\\\" [formControl]=\\\"admissionAmountFormCtl\\\" readonly=\\\"readonly\\\">\\n              <mat-error *ngIf=\\\"admissionAmountFormCtl.hasError('required')\\\">\\n                Admission Amount is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Paid Amount</mat-label>\\n              <input matInput placeholder=\\\"Placeholder\\\" [formControl]=\\\"paidAmountFormCtl\\\">\\n              <mat-error *ngIf=\\\"paidAmountFormCtl.hasError('required')\\\">\\n                Paid Amount is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Due Amount</mat-label>\\n              <input matInput placeholder=\\\"Placeholder\\\" [formControl]=\\\"dueAmountFormCtl\\\">\\n              <mat-error *ngIf=\\\"dueAmountFormCtl.hasError('required')\\\">\\n                Due Amount is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Promise To Pay Date</mat-label>\\n              <input matInput [matDatepicker]=\\\"p2pDate\\\" placeholder=\\\"mm/dd/yyyy\\\" [formControl]=\\\"promiseToPayDateFormCtl\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"p2pDate\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #p2pDate></mat-datepicker>\\n              <mat-error *ngIf=\\\"promiseToPayDateFormCtl.hasError('required')\\\">\\n                Promise To Pay Date is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div class=\\\"col-md-12 pt-4\\\">\\n            <span class=\\\"font-500 font-title-md\\\">Fees</span>\\n            <hr>\\n          </div>\\n\\n          <div class=\\\"col-md-12 no-shadow w-100\\\">\\n            <table mat-table [dataSource]=\\\"feesDataSource\\\" matSort>\\n\\n              <ng-container matColumnDef=\\\"feeRef\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Ref No.</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\">{{row.feeRefNo}}</td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"amount\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Ammount</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.amount}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"exptdateOfPayment\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Expected Date Of Payment</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.exptdateOfPayment}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"actdateOfPayment\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Actual Date Of Payment</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.actdateOfPayment}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"monthOf\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Month Of</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.monthOf}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"status\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.status}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"action\\\">\\n                <th mat-header-cell *matHeaderCellDef></th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">\\n                <button class=\\\"btn btn-save\\\" *ngIf=\\\"!row.actdateOfPayment && admId\\\" (click)=\\\"pay(row.exptdateOfPayment)\\\">Pay</button>  \\n                </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"feeColumns;sticky: true\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: feeColumns ; let i = index;\\\">\\n              </tr>\\n            </table>\\n          </div>\\n\\n        </div>\\n      </mat-tab>\\n    </mat-tab-group>\\n  </div>\\n\\n</div>\"","export default \"<div class=\\\"shadow form-min-height\\\">\\n  <div class=\\\"row p-1 bg-gold\\\">\\n    <div class=\\\"col-md-4\\\">\\n      <span class=\\\"font-400 font-banner\\\" style=\\\"line-height: 35px;\\\">Admissions</span>\\n    </div>\\n    <div class=\\\"col-md-8 text-right\\\">\\n      <mat-form-field class=\\\"w-50\\\">\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\n        <mat-icon matSuffix>filter_list</mat-icon>\\n      </mat-form-field>&nbsp;\\n      <button class=\\\"btn btn-save\\\" [routerLink]=\\\"['/admin/students/admissions/add']\\\">\\n        <mat-icon class=\\\"white-icon\\\">add</mat-icon>&nbsp;New Admission\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <!-- Employess -->\\n    <div class=\\\"col-md-12 p-0 table-header\\\">\\n      <!-- Table -->\\n      <div class=\\\"no-shadow w-100\\\">\\n        <table mat-table [dataSource]=\\\"admissionsDataSource\\\" matSort>\\n\\n          <ng-container matColumnDef=\\\"name\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\" (click)=\\\"onClickRow(row.id)\\\">{{row.student?.firstName\\n              +\\\" \\\"+row.student?.lastName}}</td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"registrationNo\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Registration No.</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\" (click)=\\\"onClickRow(row.id)\\\"> {{row.student?.registrationNo}} </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"studentStatus\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Student Status</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\" (click)=\\\"onClickRow(row.id)\\\">\\n              <span class=\\\"pl-2 pr-2 rounded font-white\\\"\\n                [ngClass]=\\\"{'bg-green': row.student?.status === 'Active','bg-red':row.student?.status === 'Inactive'}\\\">{{row.student?.status}}</span>\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"admissionStatus\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Admission Status</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\" (click)=\\\"onClickRow(row.id)\\\"> \\n              <span class=\\\"pl-2 pr-2 rounded font-white\\\"\\n                [ngClass]=\\\"{'bg-green': row.status === 'Admitted','bg-red':row.status === 'Expired'}\\\">{{row.status}}</span>\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"Class\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Class</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\" (click)=\\\"onClickRow(row.id)\\\"> {{row.standard}} </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"Admission Number\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Admission Number</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\"> {{row.admissionRefNo}} </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"action\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"text-right\\\">\\n              <mat-icon *ngIf=\\\"isSuperAdmin\\\" (click)=\\\"onDeleteRow(row.id)\\\" style=\\\"color: firebrick; cursor: pointer;\\\">delete</mat-icon> &nbsp;\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"admissionColumns;sticky: true\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: admissionColumns ; let i = index;\\\">\\n          </tr>\\n        </table>\\n        <mat-paginator [pageSizeOptions]=\\\"[12, 20,30,40,50,60,70,80,90,100]\\\" showFirstLastButtons></mat-paginator>\\n        <div class=\\\"d-flex justify-content-center align-items-center\\\" style=\\\"height: 40vh;\\\"\\n          *ngIf=\\\"admissions.length <= 0\\\">\\n          <div>\\n            <h4 class=\\\"font-grey font-300\\\">No admission to display.</h4>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\"","export default \"<div class=\\\"shadow form-min-height\\\">\\n  <div class=\\\"row p-1 bg-gold\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <span class=\\\"font-400 font-banner\\\" style=\\\"line-height: 35px;\\\">Admission Details</span>\\n    </div>\\n    <div class=\\\"col-md-6 text-right\\\">\\n      <button class=\\\"btn btn-save\\\" routerLink=\\\"/admin/students/admissions\\\">\\n        <mat-icon class=\\\"white-icon\\\">keyboard_arrow_left</mat-icon>&nbsp;Back\\n      </button>\\n      <button *ngIf=\\\"isSuperAdmin\\\" class=\\\"btn btn-cancel\\\" (click)=\\\"delete()\\\">\\n        <mat-icon class=\\\"white-icon\\\">clear</mat-icon>&nbsp;Delete\\n      </button>\\n      <button class=\\\"btn btn-edit\\\" (click)=\\\"edit()\\\">\\n        <mat-icon class=\\\"white-icon\\\">edit</mat-icon>&nbsp;Edit\\n      </button>\\n      <button class=\\\"btn btn-save\\\" [routerLink]=\\\"['/admin/students/admissions/add']\\\">\\n        <mat-icon class=\\\"white-icon\\\">add</mat-icon>&nbsp;New Admission\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #f07a7a;color: #ffffff\\\" *ngIf=\\\"errorMessage\\\">\\n    <div class=\\\"col\\\">\\n      <span>{{errorMessage}}</span>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"bg-white 'pr-2','pl-2\\\" *ngIf=\\\"admission\\\">\\n    <div class=\\\"row p-4\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"font-500 font-title-lg\\\">Student Info</div>\\n        <hr>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <p>First name : {{admission.student?.firstName}}</p>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <p>Middle name : {{admission.student?.middleName}}</p>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <p>Last name : {{admission.student?.lastName}}</p>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <p>Registration Number : {{admission.student?.registrationNo}}</p>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <p>Registration Date : {{admission.student?.registrationDate}}</p>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <p>Student Status : <span class=\\\"pl-2 pr-2 rounded font-white\\\"  [ngClass]=\\\"{'bg-green': admission.student?.status === 'Active','bg-red':admission.student?.status === 'Inactive'}\\\">{{admission.student?.status}}</span></p>\\n      </div>\\n      <div class=\\\"col-md-12\\\"> \\n        <br>\\n        <div class=\\\"font-500 font-title-lg\\\">Admission Info</div>\\n        <hr>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <p>Admission Reference No : {{admission.admissionRefNo}}</p>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <p>Admission Status : <span class=\\\"pl-2 pr-2 rounded font-white\\\" [ngClass]=\\\"{'bg-green': admission.status === 'Admitted','bg-red':admission.status === 'Expired'}\\\">{{admission.status}}</span></p>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <p>Academic Year : {{admission.academicYear}}</p>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <p>Admission Date : {{admission.admissionDate}}</p>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <p>Admission For : {{admission.standard}}</p>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <p>Admission Amount : {{admission.admissionAmount}}</p>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <p>Paid Amount : {{admission.paidAmount}}</p>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <p>Due Amount : {{admission.dueAmount}}</p>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <p>Promise To Pay Date : {{admission.promiseToPayDate}}</p>\\n      </div>\\n      <div class=\\\"col-md-12 pb-5\\\">\\n        <br>\\n        <div class=\\\"font-500 font-title-lg\\\">Fees</div>\\n        <hr>\\n        <div class=\\\"no-shadow w-100\\\">\\n          <table mat-table [dataSource]=\\\"feesDataSource\\\" matSort>\\n\\n            <ng-container matColumnDef=\\\"id\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\\n              <td style=\\\"padding-left: 25px !important;\\\" mat-cell *matCellDef=\\\"let row; let i = index\\\">{{i+1}}</td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"feeRef\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Ref No.</th>\\n              <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\" (click)=\\\"onClickRow(row)\\\">{{row.feeRefNo}}</td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"amount\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Ammount</th>\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.amount}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"exptdateOfPayment\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Expected Date Of Payment</th>\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.exptdateOfPayment}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"actdateOfPayment\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Actual Date Of Payment</th>\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.actdateOfPayment}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"monthOf\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Month Of</th>\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.monthOf}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"status\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.status}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"action\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\\n              <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"text-right\\\">\\n                <button class=\\\"btn btn-save\\\" *ngIf=\\\"row.status !== 'Paid'\\\" (click)=\\\"payFee(row)\\\">Pay</button>\\n              </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"feeColumns;sticky: true\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: feeColumns ; let i = index;\\\">\\n            </tr>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\"","export default \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"fetchingStudents\\\"></mat-progress-bar>\\n<div class=\\\"shadow-sm form-min-height\\\">\\n  <div class=\\\"d-flex justify-content-between align-items-center p-2\\\" style=\\\"background-color: #dddddd\\\">\\n    <div>\\n      <span class=\\\"font-banner pl-2\\\">Students</span>\\n    </div>\\n    <div class=\\\"w-30 d-flex justify-content-end\\\">\\n      <mat-form-field class=\\\"w-100\\\">\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\n        <mat-icon matSuffix>filter_list</mat-icon>\\n      </mat-form-field>&nbsp;\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 p-0 table-header\\\">\\n      <div class=\\\"no-shadow w-100\\\">      \\n        <table mat-table [dataSource]=\\\"studentsDataSource\\\" matSort>\\n\\n          <ng-container matColumnDef=\\\"firstName\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>First Name</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\">{{row.firstName}}</td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"middleName\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Middle Name</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\">{{row.lastName}}</td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"lastName\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Last Name</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\">{{row.lastName}}</td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"registrationNo\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Registration No.</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.registrationNo}} </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"registrationDate\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Registration Date</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.registrationDate}} </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"registrationStatus\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.status}} </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"studentsColumns;sticky: true\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: studentsColumns\\\" (click)=\\\"select(row)\\\">\\n          </tr>\\n        </table>\\n        <mat-paginator [pageSizeOptions]=\\\"[10, 20,30,40,50,60,70,80,90,100]\\\" showFirstLastButtons></mat-paginator>\\n        <div class=\\\"d-flex justify-content-center align-items-center\\\" style=\\\"height: 40vh;\\\"\\n          *ngIf=\\\"students.length <= 0\\\">\\n          <div>\\n            <h4 class=\\\"font-grey font-300\\\">No student to display.</h4>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\"","export default \"<p>\\n  student-attendence-create-edit works!\\n</p>\\n\"","export default \"<p>\\n  student-attendence-list works!\\n</p>\\n\"","export default \"<div class=\\\"shadow form-min-height\\\">\\n  <div class=\\\"row p-1 bg-gold\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <span class=\\\"font-400 font-banner\\\"\\n        style=\\\"line-height: 35px;\\\">{{studId ? 'Update Student':'New Registration'}}</span>\\n    </div>\\n    <div class=\\\"col-md-6 text-right\\\">\\n      <button class=\\\"btn btn-cancel\\\" routerLink=\\\"/admin/students\\\">\\n        <mat-icon class=\\\"white-icon\\\">clear</mat-icon>&nbsp;Cancel\\n      </button>\\n      <button class=\\\"btn btn-save\\\" (click)=\\\"save()\\\" [disabled]='!studentForm.valid'>\\n        <mat-icon class=\\\"white-icon\\\">save_alt</mat-icon>&nbsp;{{studId ? 'Update':'Save'}}\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #f07a7a;color: #ffffff\\\" *ngIf=\\\"errorMessage\\\">\\n    <div class=\\\"col\\\">\\n      <span>{{errorMessage}}</span>\\n    </div>\\n  </div>\\n\\n  <div [ngClass]=\\\"['pt-1','pr-5','pl-5']\\\">\\n    <mat-tab-group>\\n      <mat-tab>\\n        <ng-template mat-tab-label>\\n          <mat-icon class=\\\"example-tab-icon\\\">info</mat-icon>\\n          <span style=\\\"font-size: 13px;\\\">General Info</span>\\n        </ng-template>\\n\\n        <div class=\\\"row pt-3\\\">\\n\\n          <div class=\\\"col-md-12\\\">\\n            <p style=\\\"font-weight: bold; font-size: 14px;\\\">Student Info</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>First name</mat-label>\\n              <input matInput placeholder=\\\"Placeholder\\\" [formControl]=\\\"firstNameFormCtl\\\">\\n              <mat-error *ngIf=\\\"firstNameFormCtl.hasError('required')\\\">\\n                First name is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Middle name</mat-label>\\n              <input matInput placeholder=\\\"Placeholder\\\" [formControl]=\\\"middleNameFormCtl\\\">\\n              <mat-error *ngIf=\\\"middleNameFormCtl.hasError('required')\\\">\\n                Middle name is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Last name</mat-label>\\n              <input matInput placeholder=\\\"Placeholder\\\" [formControl]=\\\"lastNameFormCtl\\\">\\n              <mat-error *ngIf=\\\"lastNameFormCtl.hasError('required')\\\">\\n                Last name is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-4\\\" *ngIf=\\\"studId\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Registration Number</mat-label>\\n              <input matInput placeholder=\\\"Placeholder\\\" [formControl]=\\\"registrationNoFormCtl\\\">\\n              <mat-error *ngIf=\\\"registrationNoFormCtl.hasError('required')\\\">\\n                Registration Number is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-4\\\" *ngIf=\\\"studId\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Registration Date</mat-label>\\n              <input matInput [matDatepicker]=\\\"regDate\\\" placeholder=\\\"mm/dd/yyyy\\\"\\n                [formControl]=\\\"registrationDateFormCtl\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"regDate\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #regDate></mat-datepicker>\\n              <mat-error *ngIf=\\\"registrationDateFormCtl.hasError('required')\\\">\\n                Registration Date is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-4\\\" *ngIf=\\\"studId\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Status</mat-label>\\n              <mat-select placeholder=\\\"Status\\\" [formControl]=\\\"statusFormCtl\\\">\\n                <mat-option *ngFor=\\\"let option of statuses\\\" [value]=\\\"option\\\">\\n                  {{option}}\\n                </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"statusFormCtl.hasError('required')\\\">\\n                Status is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-4\\\" *ngIf=\\\"studId\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Class</mat-label>\\n              <mat-select placeholder=\\\"Status\\\" [formControl]=\\\"standardFormCtl\\\">\\n                <mat-option *ngFor=\\\"let option of standards\\\" [value]=\\\"option.name\\\">\\n                  {{option.name}}\\n                </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"standardFormCtl.hasError('required')\\\">\\n                Status is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Gender</mat-label>\\n              <mat-select placeholder=\\\"Gender\\\" [formControl]=\\\"genderFormCtl\\\">\\n                <mat-option *ngFor=\\\"let option of genders\\\" [value]=\\\"option.value\\\">\\n                  {{option.value}}\\n                </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"genderFormCtl.hasError('required')\\\">\\n                Gender is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Blood group</mat-label>\\n              <mat-select placeholder=\\\"Blood group\\\" [formControl]=\\\"bloodGroupFormCtl\\\">\\n                <mat-option *ngFor=\\\"let option of bloodGroups\\\" [value]=\\\"option\\\">\\n                  {{option}}\\n                </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"bloodGroupFormCtl.hasError('required')\\\">\\n                Blood group is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Religion</mat-label>\\n              <mat-select placeholder=\\\"Religion\\\" [formControl]=\\\"religionFormCtl\\\">\\n                <mat-option *ngFor=\\\"let option of religions\\\" [value]=\\\"option\\\">\\n                  {{option}}\\n                </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"religionFormCtl.hasError('required')\\\">\\n                Religion is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Nationality</mat-label>\\n              <input matInput placeholder=\\\"Nationality\\\" [formControl]=\\\"nationalityFormCtl\\\">\\n              <mat-error *ngIf=\\\"nationalityFormCtl.hasError('required')\\\">\\n                Nationality is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Community</mat-label>\\n              <mat-select placeholder=\\\"Community\\\" [formControl]=\\\"communityFormCtl\\\">\\n                <mat-option *ngFor=\\\"let option of communities\\\" [value]=\\\"option\\\">\\n                  {{option}}\\n                </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"communityFormCtl.hasError('required')\\\">\\n                Community is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div class=\\\"col-md-4\\\" *ngIf=\\\"studId\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Roll Number</mat-label>\\n              <input type=\\\"number\\\" matInput placeholder=\\\"Placeholder\\\" [formControl]=\\\"rollNoFormCtl\\\">\\n              <mat-error *ngIf=\\\"rollNoFormCtl.hasError('required')\\\">\\n                Roll Number is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Date of birth</mat-label>\\n              <input matInput [matDatepicker]=\\\"dobt\\\" placeholder=\\\"mm/dd/yyyy\\\" [formControl]=\\\"dobFormCtl\\\" readonly>\\n              <mat-datepicker-toggle matSuffix [for]=\\\"dobt\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #dobt></mat-datepicker>\\n              <mat-error *ngIf=\\\"dobFormCtl.hasError('required')\\\">\\n                Date of birth is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Joining Date</mat-label>\\n              <input matInput [matDatepicker]=\\\"joiningDatet\\\" placeholder=\\\"mm/dd/yyyy\\\" [formControl]=\\\"joiningDateFormCtl\\\"\\n                readonly>\\n              <mat-datepicker-toggle matSuffix [for]=\\\"joiningDatet\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #joiningDatet></mat-datepicker>\\n              <mat-error *ngIf=\\\"joiningDateFormCtl.hasError('required')\\\">\\n                Joining Date is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </mat-tab>\\n\\n      <mat-tab>\\n        <ng-template mat-tab-label>\\n          <mat-icon class=\\\"example-tab-icon\\\">contact_mail</mat-icon>&nbsp;\\n          <span style=\\\"font-size: 13px;\\\">Address details</span>\\n        </ng-template>\\n\\n        <div class=\\\"row pt-3\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <p style=\\\"font-weight: bold; font-size: 14px;\\\">Correspondent Address</p>\\n          </div>\\n\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>First line</mat-label>\\n              <input matInput placeholder=\\\"First line\\\" [formControl]=\\\"corrFirstLineFormCtl\\\">\\n              <mat-error *ngIf=\\\"corrFirstLineFormCtl.hasError('required')\\\">\\n                First line is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Second line</mat-label>\\n              <input matInput placeholder=\\\"Second line\\\" [formControl]=\\\"corrSecondLineFormCtl\\\">\\n              <mat-error *ngIf=\\\"corrSecondLineFormCtl.hasError('required')\\\">\\n                Second line is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Country</mat-label>\\n              <input matInput placeholder=\\\"Country\\\" [formControl]=\\\"corrCountryFormCtl\\\">\\n              <mat-error *ngIf=\\\"corrCountryFormCtl.hasError('required')\\\">\\n                Country is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>State</mat-label>\\n              <input matInput placeholder=\\\"State\\\" [formControl]=\\\"corrStateFormCtl\\\">\\n              <mat-error *ngIf=\\\"corrStateFormCtl.hasError('required')\\\">\\n                State is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>District</mat-label>\\n              <mat-select placeholder=\\\"District\\\" [formControl]=\\\"corrDistrictFormCtl\\\">\\n                <mat-option *ngFor=\\\"let option of districts\\\" [value]=\\\"option\\\">\\n                  {{option}}\\n                </mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"corrDistrictFormCtl.hasError('required')\\\">\\n                District is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div class=\\\"col-md-12 pb-2\\\">\\n            <div><label>Same as permanent address</label></div>\\n            <mat-radio-group [formControl]=\\\"sameAsPermAddrFormCtl\\\">\\n              <mat-radio-button *ngFor=\\\"let option of yesNo\\\" [value]=\\\"option.value\\\">\\n                {{option.key}} &nbsp;\\n              </mat-radio-button>\\n            </mat-radio-group>\\n          </div>\\n\\n          <div class=\\\"row\\\" *ngIf=\\\"sameAsPermAddrFormCtl.value === false\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <p style=\\\"font-weight: bold; font-size: 14px;\\\">Permanent Address</p>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                <mat-label>First line</mat-label>\\n                <input matInput placeholder=\\\"First line\\\" [formControl]=\\\"firstLineFormCtl\\\">\\n                <mat-error *ngIf=\\\"firstLineFormCtl.hasError('required')\\\">\\n                  First line is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\">\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                <mat-label>Second line</mat-label>\\n                <input matInput placeholder=\\\"Second line\\\" [formControl]=\\\"secondLineFormCtl\\\">\\n                <mat-error *ngIf=\\\"secondLineFormCtl.hasError('required')\\\">\\n                  Second line is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\">\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                <mat-label>Country</mat-label>\\n                <input matInput placeholder=\\\"Country\\\" [formControl]=\\\"countryFormCtl\\\">\\n                <mat-error *ngIf=\\\"countryFormCtl.hasError('required')\\\">\\n                  Country is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\">\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                <mat-label>State</mat-label>\\n                <input matInput placeholder=\\\"State\\\" [formControl]=\\\"stateFormCtl\\\">\\n                <mat-error *ngIf=\\\"stateFormCtl.hasError('required')\\\">\\n                  State is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\">\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                <mat-label>District</mat-label>\\n                <mat-select placeholder=\\\"District\\\" [formControl]=\\\"districtFormCtl\\\">\\n                  <mat-option *ngFor=\\\"let option of districts\\\" [value]=\\\"option\\\">\\n                    {{option}}\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"districtFormCtl.hasError('required')\\\">\\n                  District is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n      </mat-tab>\\n\\n      <mat-tab>\\n        <ng-template mat-tab-label>\\n          <mat-icon>insert_drive_file</mat-icon>\\n          <span style=\\\"font-size: 13px;\\\">Parent's and Guardian's Info</span>\\n        </ng-template>\\n\\n        <div class=\\\"row pt-3\\\">\\n\\n          <div class=\\\"col-md-12\\\">\\n            <p style=\\\"font-weight: bold; font-size: 14px;\\\">Father's details</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Father's Name</mat-label>\\n              <input matInput placeholder=\\\"Placeholder\\\" [formControl]=\\\"fatherNameFormCtl\\\">\\n              <mat-error *ngIf=\\\"fatherNameFormCtl.hasError('required')\\\">\\n                Father's Name is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Date of birth</mat-label>\\n              <input matInput [matDatepicker]=\\\"fdobt\\\" placeholder=\\\"mm/dd/yyyy\\\" [formControl]=\\\"fatherDobFormCtl\\\"\\n                readonly>\\n              <mat-datepicker-toggle matSuffix [for]=\\\"fdobt\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #fdobt></mat-datepicker>\\n              <mat-error *ngIf=\\\"fatherDobFormCtl.hasError('required')\\\">\\n                Date of birth is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Education Qualification</mat-label>\\n              <input matInput placeholder=\\\"Education Qualification\\\" [formControl]=\\\"fatherEduQualiFormCtl\\\">\\n              <mat-error *ngIf=\\\"fatherEduQualiFormCtl.hasError('required')\\\">\\n                Education Qualification is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Occupation</mat-label>\\n              <input matInput placeholder=\\\"Occupation\\\" [formControl]=\\\"fatherOccupationFormCtl\\\">\\n              <mat-error *ngIf=\\\"fatherOccupationFormCtl.hasError('required')\\\">\\n                Occupation is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Annual Income</mat-label>\\n              <input matInput type=\\\"number\\\" placeholder=\\\"Annual Income\\\" [formControl]=\\\"fatherAnnualIncomeFormCtl\\\">\\n              <mat-error *ngIf=\\\"fatherAnnualIncomeFormCtl.hasError('required')\\\">\\n                Annual Income is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <!-- <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Aadhaar No</mat-label>\\n              <input matInput placeholder=\\\"Aadhaar No\\\" [formControl]=\\\"fatherAadhaarNoFormCtl\\\">\\n              <mat-error *ngIf=\\\"fatherAadhaarNoFormCtl.hasError('required')\\\">\\n                Aadhaar No is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div> -->\\n\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Contact No.</mat-label>\\n              <input matInput placeholder=\\\"Placeholder\\\" [formControl]=\\\"fatherContactNoFormCtl\\\">\\n              <mat-error *ngIf=\\\"fatherContactNoFormCtl.hasError('required')\\\">\\n                Contact No. is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n\\n          <!-- Mother's details -->\\n          <div class=\\\"col-md-12\\\">\\n            <p style=\\\"font-weight: bold; font-size: 14px;\\\">Mother's details</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Mother's Name</mat-label>\\n              <input matInput placeholder=\\\"Placeholder\\\" [formControl]=\\\"motherNameFormCtl\\\">\\n              <mat-error *ngIf=\\\"motherNameFormCtl.hasError('required')\\\">\\n                Mother's Name is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Date of birth</mat-label>\\n              <input matInput [matDatepicker]=\\\"mdobt\\\" placeholder=\\\"mm/dd/yyyy\\\" [formControl]=\\\"motherDobFormCtl\\\"\\n                readonly>\\n              <mat-datepicker-toggle matSuffix [for]=\\\"mdobt\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #mdobt></mat-datepicker>\\n              <mat-error *ngIf=\\\"motherDobFormCtl.hasError('required')\\\">\\n                Date of birth is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Education Qualification</mat-label>\\n              <input matInput placeholder=\\\"Education Qualification\\\" [formControl]=\\\"motherEduQualiFormCtl\\\">\\n              <mat-error *ngIf=\\\"motherEduQualiFormCtl.hasError('required')\\\">\\n                Education Qualification is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Occupation</mat-label>\\n              <input matInput placeholder=\\\"Occupation\\\" [formControl]=\\\"motherOccupationFormCtl\\\">\\n              <mat-error *ngIf=\\\"motherOccupationFormCtl.hasError('required')\\\">\\n                Occupation is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Annual Income</mat-label>\\n              <input matInput type=\\\"number\\\" placeholder=\\\"Annual Income\\\" [formControl]=\\\"motherAnnualIncomeFormCtl\\\">\\n              <mat-error *ngIf=\\\"motherAnnualIncomeFormCtl.hasError('required')\\\">\\n                Annual Income is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <!--  <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Aadhaar No</mat-label>\\n              <input matInput placeholder=\\\"Aadhaar No\\\" [formControl]=\\\"motherAadhaarNoFormCtl\\\">\\n              <mat-error *ngIf=\\\"motherAadhaarNoFormCtl.hasError('required')\\\">\\n                Aadhaar No is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div> -->\\n\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Contact No.</mat-label>\\n              <input matInput placeholder=\\\"Placeholder\\\" [formControl]=\\\"motherContactNoFormCtl\\\">\\n              <mat-error *ngIf=\\\"motherContactNoFormCtl.hasError('required')\\\">\\n                Contact No. is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <!-- Guardian's details -->\\n          <div class=\\\"col-md-12\\\">\\n            <p style=\\\"font-weight: bold; font-size: 14px;\\\">Guardian's details</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Guardian's Name</mat-label>\\n              <input matInput placeholder=\\\"Placeholder\\\" [formControl]=\\\"guardianNameFormCtl\\\">\\n              <mat-error *ngIf=\\\"guardianNameFormCtl.hasError('required')\\\">\\n                Guardian's Name is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Date of birth</mat-label>\\n              <input matInput [matDatepicker]=\\\"gdobt\\\" placeholder=\\\"mm/dd/yyyy\\\" [formControl]=\\\"guardianDobFormCtl\\\"\\n                readonly>\\n              <mat-datepicker-toggle matSuffix [for]=\\\"gdobt\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #gdobt></mat-datepicker>\\n              <mat-error *ngIf=\\\"guardianDobFormCtl.hasError('required')\\\">\\n                Date of birth is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Education Qualification</mat-label>\\n              <input matInput placeholder=\\\"Education Qualification\\\" [formControl]=\\\"guardianEduQualiFormCtl\\\">\\n              <mat-error *ngIf=\\\"guardianEduQualiFormCtl.hasError('required')\\\">\\n                Education Qualification is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Occupation</mat-label>\\n              <input matInput placeholder=\\\"Occupation\\\" [formControl]=\\\"gaurdianOccupationFormCtl\\\">\\n              <mat-error *ngIf=\\\"gaurdianOccupationFormCtl.hasError('required')\\\">\\n                Occupation is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Annual Income</mat-label>\\n              <input type=\\\"number\\\" matInput placeholder=\\\"Annual Income\\\" [formControl]=\\\"guardianAnnualIncomeFormCtl\\\">\\n              <mat-error *ngIf=\\\"guardianAnnualIncomeFormCtl.hasError('required')\\\">\\n                Annual Income is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <!--  <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Aadhaar No</mat-label>\\n              <input matInput placeholder=\\\"Aadhaar No\\\" [formControl]=\\\"gaurdianAadhaarNoFormCtl\\\">\\n              <mat-error *ngIf=\\\"gaurdianAadhaarNoFormCtl.hasError('required')\\\">\\n                Aadhaar No is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div> -->\\n\\n          <div class=\\\"col-md-4\\\">\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n              <mat-label>Contact No.</mat-label>\\n              <input matInput placeholder=\\\"Placeholder\\\" [formControl]=\\\"guardianContactNoFormCtl\\\">\\n              <mat-error *ngIf=\\\"guardianContactNoFormCtl.hasError('required')\\\">\\n                Contact No. is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </mat-tab>\\n\\n    </mat-tab-group>\\n  </div>\\n\\n</div>\"","export default \"<div class=\\\"shadow-sm form-min-height\\\">\\n  <div class=\\\"row p-1 bg-gold\\\">\\n    <div class=\\\"col-md-4\\\">\\n      <span class=\\\"font-400 font-banner\\\" style=\\\"line-height: 35px;\\\">Students</span>\\n    </div>\\n    <div class=\\\"col-md-8 text-right\\\">\\n      <mat-form-field class=\\\"w-50\\\">\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\n        <mat-icon matSuffix>filter_list</mat-icon>\\n      </mat-form-field>&nbsp;\\n      <button class=\\\"btn btn-save\\\" [routerLink]=\\\"['/admin/students/add']\\\">\\n        <mat-icon class=\\\"white-icon\\\">add</mat-icon>&nbsp;New Registration\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 p-0 table-header\\\">\\n      <div class=\\\"no-shadow w-100\\\">\\n        <table mat-table [dataSource]=\\\"studentsDataSource\\\" matSort>\\n\\n          <ng-container matColumnDef=\\\"firstName\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>First Name</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\" (click)=\\\"onClickRow(row.id)\\\">{{row.firstName}}</td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"middleName\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Middle Name</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\" (click)=\\\"onClickRow(row.id)\\\">{{row.middleName}}</td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"lastName\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Last Name</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\" (click)=\\\"onClickRow(row.id)\\\">{{row.lastName}}</td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"gender\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Gender</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\" (click)=\\\"onClickRow(row.id)\\\">{{row.gender}}</td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"rollNo\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Roll No.</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\" (click)=\\\"onClickRow(row.id)\\\">\\n              {{row.rollNo?row.rollNo:\\\"NA\\\"}}</td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"standard\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Class</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\" (click)=\\\"onClickRow(row.id)\\\">{{row.standard}}</td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"registrationNo\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Registration No.</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\" (click)=\\\"onClickRow(row.id)\\\"> {{row.registrationNo}}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"status\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\" (click)=\\\"onClickRow(row.id)\\\"> {{row.status}} </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"action\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"text-right\\\">\\n              <mat-icon *ngIf=\\\"isSuperAdmin\\\" (click)=\\\"onDeleteRow(row.id)\\\" style=\\\"color: firebrick; cursor: pointer;\\\">\\n                delete</mat-icon> &nbsp;\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"studentsColumns;sticky: true\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: studentsColumns\\\">\\n          </tr>\\n        </table>\\n        <mat-paginator [pageSizeOptions]=\\\"[12, 20,30,40,50,60,70,80,90,100]\\\" showFirstLastButtons></mat-paginator>\\n        <div class=\\\"d-flex justify-content-center align-items-center\\\" style=\\\"height: 40vh;\\\"\\n          *ngIf=\\\"students.length <= 0\\\">\\n          <div>\\n            <h4 class=\\\"font-grey font-300\\\">No student to display.</h4>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\"","export default \"<div class=\\\"shadow form-min-height\\\">\\n  <div class=\\\"row p-1 bg-gold\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <span class=\\\"font-400 font-banner\\\" style=\\\"line-height: 35px;\\\">Student Details</span>\\n    </div>\\n    <div class=\\\"col-md-6 text-right\\\">\\n      <button class=\\\"btn btn-save\\\" routerLink=\\\"/admin/students\\\">\\n        <mat-icon class=\\\"white-icon\\\">keyboard_arrow_left</mat-icon>&nbsp;Back\\n      </button>\\n      <button class=\\\"btn btn-cancel\\\" (click)=\\\"delete()\\\" *ngIf=\\\"isSuperAdmin\\\">\\n        <mat-icon class=\\\"white-icon\\\">clear</mat-icon>&nbsp;Delete\\n      </button>\\n      <button class=\\\"btn btn-edit\\\" (click)=\\\"edit()\\\">\\n        <mat-icon class=\\\"white-icon\\\">edit</mat-icon>&nbsp;Edit\\n      </button>\\n      <button class=\\\"btn btn-save\\\" [routerLink]=\\\"['/admin/students/add']\\\">\\n        <mat-icon class=\\\"white-icon\\\">add</mat-icon>&nbsp;New Registration\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #f07a7a;color: #ffffff\\\" *ngIf=\\\"errorMessage\\\">\\n    <div class=\\\"col\\\">\\n      <span>{{errorMessage}}</span>\\n    </div>\\n  </div>\\n\\n  <div [ngClass]=\\\"['pt-1','pr-5','pl-5']\\\" *ngIf=\\\"student\\\">\\n    <mat-tab-group>\\n      <mat-tab>\\n        <ng-template mat-tab-label>\\n          <mat-icon class=\\\"example-tab-icon\\\">info</mat-icon>\\n          <span style=\\\"font-size: 13px;\\\">General Info</span>\\n        </ng-template>\\n\\n        <div class=\\\"row pt-3\\\">\\n\\n          <!-- ============== Personal Info ===================== -->\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2\\\">\\n              <app-file-upload type=\\\"image\\\" bgButton=\\\"#029734\\\" color=\\\"white\\\" width=\\\"100\\\" height=\\\"100\\\"\\n                [imageSrc]=\\\"profilePicUrl\\\" (onSelectFile)=\\\"onSelectFile($event)\\\"></app-file-upload>\\n            </div>\\n            <div class=\\\"col-md-10\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"font-500 font-title-lg pb-1\\\">Registration Info</div>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  <p>Registration Number : {{student.registrationNo}}</p>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  <p>Registration Date : {{student.registrationDate}}</p>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  <p>Status : <span class=\\\"pl-2 pr-2 rounded font-white\\\"\\n                      [ngClass]=\\\"{'bg-green': student.status === 'Active','bg-red':student.status === 'Inactive'}\\\">{{student.status}}</span>\\n                  </p>\\n                </div>\\n\\n                <div class=\\\"col-md-12\\\">\\n                  <br>\\n                  <div class=\\\"font-500 font-title-lg pb-1\\\">Student Info</div>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  <p>First name : {{student.firstName}}</p>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  <p>Middle name : {{student.middleName}}</p>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  <p>Last name : {{student.lastName}}</p>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  <p>Gender : {{student.gender}}</p>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  <p>Blood Group : {{student.bloodGroup}}</p>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  <p>Religion : {{student.religion}}</p>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  <p>Community : {{student.community}}</p>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  <p>Nationality : {{student.nationality}}</p>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  <p>Class : {{student.standard}}</p>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  <p>Roll Number : {{student.rollNo?student.rollNo:'NA'}}</p>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  <p>Date of birth : {{student.dob}}</p>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  <p>Joining Date : {{student.joiningDate}}</p>\\n                </div>\\n              </div>\\n            </div>\\n\\n          </div>\\n          <br>\\n\\n\\n\\n        </div>\\n      </mat-tab>\\n\\n      <mat-tab>\\n        <ng-template mat-tab-label>\\n          <mat-icon class=\\\"example-tab-icon\\\">contact_phone</mat-icon>&nbsp;\\n          <span style=\\\"font-size: 13px;\\\">Address details</span>\\n        </ng-template>\\n        <div class=\\\"row pt-3\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <p style=\\\"font-weight: bold; font-size: 14px;\\\">Correspondance Address</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <p>First line : {{student.correspondentAddress?.firstLine}}</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <p>Second line : {{student.correspondentAddress?.secondLine}}</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <p>Country : {{student.correspondentAddress?.country}}</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <p>District : {{student.correspondentAddress?.district}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"!this.student.sameAsPermAddr\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <p style=\\\"font-weight: bold; font-size: 14px;\\\">Permanent Address</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <p>First line : {{student.permanentAddress?.firstLine}}</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <p>Second line : {{student.permanentAddress?.secondLine}}</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <p>Country : {{student.permanentAddress?.country}}</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <p>District : {{student.permanentAddress?.district}}</p>\\n          </div>\\n        </div>\\n      </mat-tab>\\n\\n      <mat-tab>\\n        <ng-template mat-tab-label>\\n          <mat-icon>wc</mat-icon>\\n          <span style=\\\"font-size: 13px;\\\">Parent's and Guardian's Info</span>\\n        </ng-template>\\n\\n        <div class=\\\"row pt-3\\\">\\n\\n          <div class=\\\"col-md-12\\\">\\n            <p style=\\\"font-weight: bold; font-size: 14px;\\\">Father's details</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <p>Father's Name : {{student.fatherInfo?.name}}</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <p>Date of birth : {{student.fatherInfo?.dob}}</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <p>Education Qualification : {{student.fatherInfo?.eduQualification}}</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <p>Occupation : {{student.fatherInfo?.eduQualification}}</p>\\n          </div>\\n\\n          <div class=\\\"col-md-4\\\">\\n            <p>Annual Income : {{student.fatherInfo?.income  | currency:'INR'}}</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <p>Contact No. : {{student.fatherInfo?.contactNo}}</p>\\n          </div>\\n\\n          <div class=\\\"col-md-12\\\">\\n            <p style=\\\"font-weight: bold; font-size: 14px;\\\">Mother's details</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <p>Mother's Name : {{student.motherInfo?.name}}</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <p>Date of birth : {{student.motherInfo?.dob}}</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <p>Education Qualification : {{student.motherInfo?.eduQualification}}</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <p>Occupation : {{student.motherInfo?.eduQualification}}</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <p>Annual Income : {{student.motherInfo?.income | currency:'INR'}}</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <p>Contact No. : {{student.motherInfo?.contactNo}}</p>\\n          </div>\\n\\n          <div class=\\\"col-md-12\\\">\\n            <p style=\\\"font-weight: bold; font-size: 14px;\\\">Guardian's details</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <p>Guardian's Name : {{student.guardianInfo?.name}}</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <p>Date of birth : {{student.guardianInfo?.dob}}</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <p>Education Qualification : {{student.guardianInfo?.eduQualification}}</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <p>Occupation : {{student.guardianInfo?.eduQualification}}</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <p>Annual Income : {{student.guardianInfo?.income | currency:'INR'}}</p>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <p>Contact No. : {{student.guardianInfo?.contactNo}}</p>\\n          </div>\\n\\n        </div>\\n      </mat-tab>\\n    </mat-tab-group>\\n  </div>\\n\\n</div>\"","export default \".search-icon{\\n    font-size: 28px !important;\\n    color: gray;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9zdHVkZW50cy9jb21wb25lbnRzL2FkbWlzc2lvbi1mZWUvYWRtaXNzaW9uLWZlZS1jcmVhdGUtZWRpdC9hZG1pc3Npb24tZmVlLWNyZWF0ZS1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwwQkFBMEI7SUFDMUIsV0FBVztBQUNmIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9zdHVkZW50cy9jb21wb25lbnRzL2FkbWlzc2lvbi1mZWUvYWRtaXNzaW9uLWZlZS1jcmVhdGUtZWRpdC9hZG1pc3Npb24tZmVlLWNyZWF0ZS1lZGl0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2VhcmNoLWljb257XG4gICAgZm9udC1zaXplOiAyOHB4ICFpbXBvcnRhbnQ7XG4gICAgY29sb3I6IGdyYXk7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Admission } from './admission';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport * as moment from 'moment';\nimport { DatePipe } from '@angular/common';\nimport { MatDialog, MatTableDataSource, MatSnackBar, MatSnackBarConfig } from '@angular/material';\nimport { SearchStudentDialogComponent } from '../../search-student-dialog/search-student-dialog.component';\nimport { Validators } from '@angular/forms';\nimport { ApiEndpoint, SnackBarConfig } from 'src/app/modules/shared/model/shared.model';\nimport { IAdmission } from '../../../models/admission-fee.model';\nimport { SnackbarInfoComponent } from 'src/app/modules/shared/components/snackbar-info/snackbar-info.component';\n\n@Component({\n  selector: 'app-admission-fee-create-edit',\n  templateUrl: './admission-fee-create-edit.component.html',\n  styleUrls: ['./admission-fee-create-edit.component.css']\n})\nexport class AdmissionFeeCreateEditComponent extends Admission implements OnInit {\n\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private matDialog: MatDialog,\n    private snackBar: MatSnackBar\n  ) {\n    super();\n    this.activatedRoute.params.subscribe(params => {\n      this.admId = params.id;\n      if (this.admId) {\n        this.getAdmissionFee();\n      }\n    });\n\n    this.paidAmountFormCtl.valueChanges.subscribe(data => {\n\n      const admAmout = this.admissionAmountFormCtl.value;\n      const paidAmount = data;\n      this.dueAmountFormCtl.setValue(admAmout - paidAmount);\n      this.promiseToPayDateFormCtl.enable();\n      this.promiseToPayDateFormCtl.setValidators(Validators.required);\n      this.promiseToPayDateFormCtl.updateValueAndValidity();\n      if (admAmout >= paidAmount) {\n        this.promiseToPayDateFormCtl.disable();\n        this.promiseToPayDateFormCtl.setValidators(null);\n        this.promiseToPayDateFormCtl.updateValueAndValidity();\n      }\n    });\n  }\n\n  ngOnInit() {\n\n  }\n\n  getAdmissionFee() {\n\n    this.http.get<any>(ApiEndpoint.ADMISSIONS + '/' + this.admId).subscribe(data => {\n\n      this.admission = data.data;\n      if (this.admission) {\n        this.fees = this.admission.fees;\n        this.feesDataSource = new MatTableDataSource(this.fees);\n      }\n\n      this.setForm();\n    }, err => {\n      console.error(err);\n      if (err.error && err.error.apiMessage) {\n        this.errorMessage = err.error.apiMessage.detail;\n      } else {\n        this.errorMessage = err.message;\n      }\n    });\n  }\n\n  setForm() {\n\n    this.idFormCtl.setValue(this.admission.id);\n    this.admissionRefNoFormCtl.setValue(this.admission.admissionRefNo);\n    this.admissionStatusFormCtl.setValue(this.admission.status);\n    this.academicYearFormCtl.setValue(this.admission.academicYear);\n    this.admissionDateFormCtl.setValue(moment(this.admission.admissionDate as string));\n    this.standardFormCtl.setValue(this.admission.standard);\n    this.studentStatusFormCtl.setValue(this.admission.student.status);\n    this.admissionAmountFormCtl.setValue(this.admission.admissionAmount);\n    this.paidAmountFormCtl.setValue(this.admission.paidAmount);\n    this.dueAmountFormCtl.setValue(this.admission.dueAmount);\n    this.promiseToPayDateFormCtl.setValue(this.admission.promiseToPayDate);\n\n    const student = this.admission.student;\n    if (student) {\n      this.studIdFormCtl.setValue(student.id);\n      this.firstNameFormCtl.setValue(student.firstName);\n      this.lastNameFormCtl.setValue(student.lastName);\n      this.rollNoFormCtl.setValue(student.rollNo);\n      this.registrationNoFormCtl.setValue(student.registrationNo);\n      this.registrationDateFormCtl.setValue(student.registrationDate);\n    }\n\n    this.fees = this.admission.fees;\n\n  }\n\n  save() {\n\n    const datePipe = new DatePipe('en-US');\n\n    const admissionPayloadData: IAdmission = {\n      id: this.idFormCtl.value,\n      admissionRefNo: this.admissionRefNoFormCtl.value,\n      status: this.admissionStatusFormCtl.value,\n      academicYear: this.academicYearFormCtl.value,\n      admissionDate: datePipe.transform(this.admissionDateFormCtl.value, 'MM/dd/yyyy'),\n      standard: this.standardFormCtl.value,\n      admissionAmount: this.admissionAmountFormCtl.value,\n      paidAmount: this.paidAmountFormCtl.value,\n      dueAmount: this.dueAmountFormCtl.value,\n      promiseToPayDate: this.promiseToPayDateFormCtl.value,\n      student: {\n        correspondentAddress: null,\n        dob: null,\n        fatherInfo: null,\n        firstName: null,\n        gender: null,\n        bloodGroup: null,\n        community: null,\n        nationality: null,\n        physicallyChallenged: null,\n        religion: null,\n        profilePic: null,\n        status: null,\n        aadhaarNo: null,\n        guardianInfo: null,\n        id: this.studIdFormCtl.value,\n        joiningDate: null,\n        lastName: null,\n        middleName: null,\n        motherInfo: null,\n        registrationDate: null,\n        registrationNo: null,\n        rollNo: null,\n        standard: null,\n        permanentAddress: null,\n        sameAsPermAddr: null\n      },\n      fees: this.fees\n    };\n\n    console.log(admissionPayloadData);\n\n    this.saveOrUpdateHttpObservable(this.admId, admissionPayloadData).subscribe(data => {\n\n      if (data.apiMessage && data.apiMessage.error) {\n        this.snackBar.openFromComponent(\n          SnackbarInfoComponent,\n          {\n            data: SnackBarConfig.dangerData(data.apiMessage.detail),\n            ...SnackBarConfig.flashTopDangerSnackBar()\n          });\n        return;\n      } else {\n        this.snackBar.openFromComponent(\n          SnackbarInfoComponent,\n          {\n            data: SnackBarConfig.successData(data.apiMessage.detail),\n            ...SnackBarConfig.flashTopSuccessSnackBar()\n          });\n      }\n\n      this.hasSubmitted = true;\n      this.router.navigate(['/admin/students/admissions']);\n\n    }, err => {\n      console.error(err);\n      if (err.error && err.error.apiMessage) {\n        this.errorMessage = err.error.apiMessage.detail;\n      } else {\n        this.errorMessage = err.message;\n      }\n    });\n\n  }\n\n  private saveOrUpdateHttpObservable(admid: number, admissionPayloadData: IAdmission) {\n    if (this.admId) {\n      return this.http.put<any>(ApiEndpoint.ADMISSIONS + '/' + admid, admissionPayloadData);\n    } else {\n      return this.http.post<any>(ApiEndpoint.ADMISSIONS, admissionPayloadData);\n    }\n  }\n\n  public searchStudent() {\n    const dialogRef = this.matDialog.open(SearchStudentDialogComponent, { width: '70%' })\n      .afterClosed().subscribe(data => {\n        if (data) {\n          this.student = data;\n\n          this.registrationDateFormCtl.setValue(moment(this.student.registrationDate as string));\n          this.registrationNoFormCtl.setValue(this.student.registrationNo);\n          this.studentStatusFormCtl.setValue(this.student.status);\n          this.studIdFormCtl.setValue(this.student.id);\n          this.firstNameFormCtl.setValue(this.student.firstName);\n          this.lastNameFormCtl.setValue(this.student.lastName);\n\n        }\n      });\n  }\n\n  private generateFees() {\n\n    const acaYear = this.academicYearFormCtl.value;\n    const standard = this.standardFormCtl.value;\n    this.http.get<any>(ApiEndpoint.ADMISSIONS + '/fees/' + standard + '/' + acaYear).subscribe(data => {\n\n      this.fees = data.data;\n      this.feesDataSource = new MatTableDataSource(this.fees);\n    }, err => {\n      console.error(err);\n      if (err.error && err.error.apiMessage) {\n        this.errorMessage = err.error.apiMessage.detail;\n      } else {\n        this.errorMessage = err.message;\n      }\n    });\n  }\n\n  public onSelectStandard(standard: string) {\n    this.paidAmountFormCtl.setValue(null);\n    this.dueAmountFormCtl.setValue(null);\n    this.getAddmissionFeeMaitenance(standard, this.academicYearFormCtl.value);\n    this.generateFees();\n  }\n\n  public getAddmissionFeeMaitenance(standard: string, academicYear: string) {\n\n    this.http.get<any>(ApiEndpoint.ADDMISSION_FEE_MAINTENANCE + '/' + standard + '/' + academicYear + '/standard-year').subscribe(data => {\n\n      this.admissionFeeMaintenance = data.data;\n      if (this.admissionFeeMaintenance) {\n        this.admissionAmountFormCtl.setValue(this.admissionFeeMaintenance.admissionAmount);\n      }\n    }, err => {\n      console.error(err);\n      if (err.error && err.error.apiMessage) {\n        this.errorMessage = err.error.apiMessage.detail;\n      } else {\n        this.errorMessage = err.message;\n      }\n    });\n  }\n\n  pay(exptdateOfPayment: number) {\n\n  }\n\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { MatTableDataSource } from '@angular/material';\nimport { IAdmission, AdmissionStatuses, IFee } from '../../../models/admission-fee.model';\nimport { IKeyValue } from 'src/app/modules/shared/model/IKeyVal';\nimport { Standards, IStudent, StudentStatuses } from '../../../models/student.model';\nimport { IAdmissionFeeMaintenance } from '../../../models/maintenance';\n\nexport class Admission {\n\n    admId: number;\n    errorMessage: string;\n    hasSubmitted = false;\n    admissionForm: FormGroup;\n    admission: IAdmission;\n    studentStatuses: string[] = StudentStatuses;\n    admissionStatuses: string[] = AdmissionStatuses;\n    standards: IKeyValue[] = Standards;\n    fees: IFee[];\n    student: IStudent;\n    admissionFeeMaintenance: IAdmissionFeeMaintenance;\n\n    public feeColumns: string[] = [\n        'feeRef',\n        'amount',\n        'exptdateOfPayment',\n        'actdateOfPayment',\n        'monthOf',\n        'status',\n        'action'\n    ];\n\n    public feesDataSource: MatTableDataSource<IFee>;\n    public fee: IFee[] = [];\n\n    idFormCtl = new FormControl('', null);\n    admissionRefNoFormCtl = new FormControl('', null);\n    admissionStatusFormCtl = new FormControl('', null);\n    academicYearFormCtl = new FormControl('', null);\n    admissionDateFormCtl = new FormControl('', null);\n    standardFormCtl = new FormControl('', null);\n    studentStatusFormCtl = new FormControl('', null);\n    admissionAmountFormCtl = new FormControl('', Validators.required);\n    paidAmountFormCtl = new FormControl('', Validators.required);\n    dueAmountFormCtl = new FormControl('', null);\n    promiseToPayDateFormCtl = new FormControl('', null);\n\n    studIdFormCtl = new FormControl('', null);\n    firstNameFormCtl = new FormControl('', null);\n    lastNameFormCtl = new FormControl('', null);\n    rollNoFormCtl = new FormControl('', null);\n\n    regIdIdFormCtl = new FormControl('', null);\n    registrationNoFormCtl = new FormControl('', null);\n    registrationDateFormCtl = new FormControl('', null);\n\n    constructor() {\n        this.admissionForm = new FormGroup({\n            admissionRefNoFormCtl: this.admissionRefNoFormCtl,\n            academicYearFormCtl: this.academicYearFormCtl,\n            admissionDateFormCtl: this.admissionDateFormCtl,\n            standardFormCtl: this.standardFormCtl,\n            statusFormCtl: this.studentStatusFormCtl,\n            admissionAmountFormCtl: this.admissionAmountFormCtl,\n            paidAmountFormCtl: this.paidAmountFormCtl,\n            dueAmountFormCtl: this.dueAmountFormCtl,\n            promiseToPayDateFormCtl: this.promiseToPayDateFormCtl,\n\n            firstNameFormCtl: this.firstNameFormCtl,\n            lastNameFormCtl: this.lastNameFormCtl,\n\n        });\n\n        this.academicYearFormCtl.setValue(new Date().getFullYear());\n        this.academicYearFormCtl.disable();\n        this.admissionRefNoFormCtl.disable();\n        this.admissionDateFormCtl.disable();\n        this.studentStatusFormCtl.disable();\n        this.firstNameFormCtl.disable();\n        this.lastNameFormCtl.disable();\n        this.rollNoFormCtl.disable();\n        this.registrationNoFormCtl.disable();\n        this.registrationDateFormCtl.disable();\n        this.dueAmountFormCtl.disable();\n        this.promiseToPayDateFormCtl.disable();\n    }\n}\n","export default \".name-class {\\n  text-transform: capitalize;\\n}\\n\\n.name-class:hover {\\n  color: #0466b6;\\n  text-transform: capitalize;\\n}\\n\\ntr:hover {\\n  cursor: pointer;\\n  background-color: #f3f3f3;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FkbWlucGMvc2Nob29sL215c2Nob29sL2FkbWluLXVpL3NyYy9hcHAvbW9kdWxlcy9zdHVkZW50cy9jb21wb25lbnRzL2FkbWlzc2lvbi1mZWUvYWRtaXNzaW9uLWZlZS1saXN0L2FkbWlzc2lvbi1mZWUtbGlzdC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbW9kdWxlcy9zdHVkZW50cy9jb21wb25lbnRzL2FkbWlzc2lvbi1mZWUvYWRtaXNzaW9uLWZlZS1saXN0L2FkbWlzc2lvbi1mZWUtbGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLDBCQUFBO0FDQ0Y7O0FERUE7RUFDRSxjQUFBO0VBQ0EsMEJBQUE7QUNDRjs7QURFQTtFQUNFLGVBQUE7RUFDQSx5QkFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9zdHVkZW50cy9jb21wb25lbnRzL2FkbWlzc2lvbi1mZWUvYWRtaXNzaW9uLWZlZS1saXN0L2FkbWlzc2lvbi1mZWUtbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uYW1lLWNsYXNzIHtcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG59XG5cbi5uYW1lLWNsYXNzOmhvdmVyIHtcbiAgY29sb3I6IHJnYig0LCAxMDIsIDE4Mik7XG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xufVxuXG50cjpob3ZlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0MywgMjQzLCAyNDMpO1xufVxuIiwiLm5hbWUtY2xhc3Mge1xuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbn1cblxuLm5hbWUtY2xhc3M6aG92ZXIge1xuICBjb2xvcjogIzA0NjZiNjtcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG59XG5cbnRyOmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjNmM2YzO1xufSJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatDialog, MatPaginator, MatSort, MatSnackBar } from '@angular/material';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { IAdmission } from '../../../models/admission-fee.model';\nimport { ApiEndpoint, IConfirmation, SnackBarConfig } from 'src/app/modules/shared/model/shared.model';\nimport { ConfirmationDialogComponent } from 'src/app/modules/shared/components/confirmation-dialog/confirmation-dialog.component';\nimport { SnackbarInfoComponent } from 'src/app/modules/shared/components/snackbar-info/snackbar-info.component';\nimport { AuthService } from 'src/app/modules/auth/services/auth.service';\n\n@Component({\n  selector: 'app-admission-fee-list',\n  templateUrl: './admission-fee-list.component.html',\n  styleUrls: ['./admission-fee-list.component.scss']\n})\nexport class AdmissionFeeListComponent implements OnInit {\n\n  public errorMessage: string;\n  public admissionColumns: string[] = [\n    'name',\n    'registrationNo',\n    'studentStatus',\n    'admissionStatus',\n    'Class',\n    'Admission Number',\n    'action'\n  ];\n  public admissionsDataSource: MatTableDataSource<IAdmission>;\n  public admissions: IAdmission[] = [];\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  isSuperAdmin = false;\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    this.isSuperAdmin = this.authService.isSuperAdmin();\n    this.getAdmissions();\n  }\n\n  private getAdmissions() {\n\n    this.http.get<any>(ApiEndpoint.ADMISSIONS).subscribe(data => {\n      this.admissions = data.data;\n      this.admissionsDataSource = new MatTableDataSource(this.admissions);\n      this.admissionsDataSource.paginator = this.paginator;\n      this.admissionsDataSource.sort = this.sort;\n    }, err => {\n      if (err.error && err.error.apiMessage) {\n        this.errorMessage = err.error.apiMessage.detail;\n      } else {\n        this.errorMessage = err.message;\n      }\n\n      console.error(err);\n    });\n\n  }\n\n  applyFilter(filterValue: string) {\n    this.admissionsDataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  public onClickRow(admId: number) {\n\n    this.router.navigate(['/admin/students/admissions/' + admId + '/view']);\n\n  }\n\n  public onDeleteRow(admId: number) {\n\n    const confirmationData: IConfirmation = {\n      title: 'Delete Admission',\n      subtitle: 'Are you really sure to delete this admission?'\n    };\n\n    this.dialog.open(ConfirmationDialogComponent, { width: '26%', data: confirmationData, disableClose: true })\n      .afterClosed().subscribe(okData => {\n        if (okData) {\n\n          this.http.delete<any>(ApiEndpoint.ADMISSIONS + '/' + admId).subscribe(data => {\n            if (data.apiMessage && data.apiMessage.error) {\n              this.snackBar.openFromComponent(\n                SnackbarInfoComponent,\n                {\n                  data: SnackBarConfig.dangerData(data.apiMessage.detail),\n                  ...SnackBarConfig.flashTopDangerSnackBar()\n                });\n              return;\n            } else {\n              this.snackBar.openFromComponent(\n                SnackbarInfoComponent,\n                {\n                  data: SnackBarConfig.successData(data.apiMessage.detail),\n                  ...SnackBarConfig.flashTopSuccessSnackBar()\n                });\n            }\n            this.admissionsDataSource = new MatTableDataSource([]);\n            this.ngOnInit();\n          }, err => {\n            console.error(err);\n            if (err.error && err.error.apiMessage) {\n              this.errorMessage = err.error.apiMessage.detail;\n            } else {\n              this.errorMessage = err.message;\n            }\n            this.snackBar.openFromComponent(\n              SnackbarInfoComponent,\n              {\n                data: SnackBarConfig.dangerData(this.errorMessage),\n                ...SnackBarConfig.flashTopDangerSnackBar()\n              });\n          });\n\n        }\n      });\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3R1ZGVudHMvY29tcG9uZW50cy9hZG1pc3Npb24tZmVlL2FkbWlzc2lvbi1mZWUtdmlldy9hZG1pc3Npb24tZmVlLXZpZXcuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatTableDataSource, MatDialog, MatSnackBarConfig, MatSnackBar } from '@angular/material';\nimport { IAdmission, IFee } from '../../../models/admission-fee.model';\nimport { ApiEndpoint, IConfirmation, SnackBarConfig } from 'src/app/modules/shared/model/shared.model';\nimport { HttpClient } from '@angular/common/http';\nimport { ConfirmationDialogComponent } from 'src/app/modules/shared/components/confirmation-dialog/confirmation-dialog.component';\nimport { SnackbarInfoComponent } from 'src/app/modules/shared/components/snackbar-info/snackbar-info.component';\nimport { AuthService } from 'src/app/modules/auth/services/auth.service';\n\n@Component({\n  selector: 'app-admission-fee-view',\n  templateUrl: './admission-fee-view.component.html',\n  styleUrls: ['./admission-fee-view.component.css']\n})\nexport class AdmissionFeeViewComponent implements OnInit {\n\n  errorMessage: string;\n  admId: string;\n  admission: IAdmission;\n\n  public feeColumns: string[] = [\n\n    'id',\n    'feeRef',\n    'amount',\n    'exptdateOfPayment',\n    'actdateOfPayment',\n    'monthOf',\n    'status',\n    'action'\n  ];\n\n  public feesDataSource: MatTableDataSource<IFee>;\n  public fee: IFee[] = [];\n  isSuperAdmin = false;\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar,\n    private authService: AuthService\n  ) {\n    this.activatedRoute.params.subscribe(params => {\n      this.admId = params.id;\n    });\n  }\n\n  ngOnInit() {\n    this.isSuperAdmin = this.authService.isSuperAdmin();\n    this.getAdmission();\n  }\n\n  getAdmission() {\n\n    let resp;\n    this.http.get(ApiEndpoint.ADMISSIONS + '/' + this.admId).subscribe(data => {\n      resp = data;\n      this.admission = resp.data;\n\n      if (this.admission.fees) {\n        this.feesDataSource = new MatTableDataSource(this.admission.fees);\n      }\n\n    }, err => {\n      console.error(err);\n      if (err.error && err.error.apiMessage) {\n        this.errorMessage = err.error.apiMessage.detail;\n      } else {\n        this.errorMessage = err.message;\n      }\n    });\n  }\n\n  delete() {\n\n    const confirmationData: IConfirmation = {\n      title: 'Delete Admission',\n      subtitle: 'Are you really sure to delete this admission?'\n    };\n\n    this.dialog.open(ConfirmationDialogComponent, { width: '26%', data: confirmationData, disableClose: true })\n      .afterClosed().subscribe(okData => {\n        if (okData) {\n\n          this.http.delete<any>(ApiEndpoint.ADMISSIONS + '/' + this.admId).subscribe(data => {\n\n            if (data.apiMessage && data.apiMessage.error) {\n              this.snackBar.openFromComponent(\n                SnackbarInfoComponent,\n                {\n                  data: SnackBarConfig.dangerData(data.apiMessage.detail),\n                  ...SnackBarConfig.flashTopDangerSnackBar()\n                });\n              return;\n            } else {\n              this.snackBar.openFromComponent(\n                SnackbarInfoComponent,\n                {\n                  data: SnackBarConfig.successData(data.apiMessage.detail),\n                  ...SnackBarConfig.flashTopSuccessSnackBar()\n                });\n            }\n\n            this.router.navigate(['/admin/students/admissions']);\n          }, err => {\n            console.error(err);\n            if (err.error && err.error.apiMessage) {\n              this.errorMessage = err.error.apiMessage.detail;\n            } else {\n              this.errorMessage = err.message;\n            }\n            this.snackBar.openFromComponent(\n              SnackbarInfoComponent,\n              {\n                data: SnackBarConfig.dangerData(this.errorMessage),\n                ...SnackBarConfig.flashTopDangerSnackBar()\n              });\n          });\n\n        }\n      });\n  }\n\n  edit() {\n    this.router.navigate(['admin/students/admissions/' + this.admId + '/edit']);\n  }\n\n  onDeleteFeeRow(feeId: number) {\n\n  }\n\n  onClickRow(fee: IFee) {\n\n  }\n\n  payFee(fee: IFee) {\n    this.dialog.open(ConfirmationDialogComponent,\n      {\n        width: '26%',\n        data: {\n          title: 'Pay fee',\n          subtitle: 'Click Ok to pay the fee.'\n        }\n        , disableClose: true\n      })\n      .afterClosed().subscribe(okData => {\n        if (okData) {\n          this.http.put(ApiEndpoint.ADMISSIONS + '/' + this.admId + '/fee/' + fee.id, {}).subscribe(data => {\n\n            this.getAdmission();\n            const configSuccess: MatSnackBarConfig = {\n              panelClass: 'success-snackbar',\n              duration: 5000,\n              horizontalPosition: 'center',\n              verticalPosition: 'top'\n            };\n            this.snackBar.openFromComponent(SnackbarInfoComponent, { data: 'Successfully paid the fee.', ...configSuccess });\n\n          }, err => {\n            console.error(err);\n            if (err.error && err.error.apiMessage) {\n              this.errorMessage = err.error.apiMessage.detail;\n            } else {\n              this.errorMessage = err.message;\n            }\n          });\n\n        }\n      });\n  }\n\n}\n","export default \".dialg-header{\\n    background-image: linear-gradient(to right, #065c37, #09713f, #138747, #229d4c, #33b451);\\n    padding: 5px;\\n    color: #ffffff;\\n    padding-left: 15px;\\n}\\n\\n.table thead th {\\n    border-bottom: none !important;\\n}\\n\\n.w-30{\\n    width: 30%;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9zdHVkZW50cy9jb21wb25lbnRzL3NlYXJjaC1zdHVkZW50LWRpYWxvZy9zZWFyY2gtc3R1ZGVudC1kaWFsb2cuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHdGQUF3RjtJQUN4RixZQUFZO0lBQ1osY0FBYztJQUNkLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLDhCQUE4QjtBQUNsQzs7QUFFQTtJQUNJLFVBQVU7QUFDZCIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3R1ZGVudHMvY29tcG9uZW50cy9zZWFyY2gtc3R1ZGVudC1kaWFsb2cvc2VhcmNoLXN0dWRlbnQtZGlhbG9nLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGlhbGctaGVhZGVye1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgIzA2NWMzNywgIzA5NzEzZiwgIzEzODc0NywgIzIyOWQ0YywgIzMzYjQ1MSk7XG4gICAgcGFkZGluZzogNXB4O1xuICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgIHBhZGRpbmctbGVmdDogMTVweDtcbn1cblxuLnRhYmxlIHRoZWFkIHRoIHtcbiAgICBib3JkZXItYm90dG9tOiBub25lICFpbXBvcnRhbnQ7XG59XG5cbi53LTMwe1xuICAgIHdpZHRoOiAzMCU7XG59XG5cbiJdfQ== */\"","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { HttpClient } from '@angular/common/http';\nimport { IStudent } from '../../models/student.model';\nimport { ApiEndpoint } from 'src/app/modules/shared/model/shared.model';\n\n@Component({\n  selector: 'app-search-student-dialog',\n  templateUrl: './search-student-dialog.component.html',\n  styleUrls: ['./search-student-dialog.component.css']\n})\nexport class SearchStudentDialogComponent implements OnInit {\n\n  public errorMessage: string;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  // tslint:disable-next-line: max-line-length\n  public studentsColumns: string[] = ['firstName', 'middleName', 'lastName', 'registrationNo', 'registrationDate', 'registrationStatus'];\n  public studentsDataSource: MatTableDataSource<IStudent>;\n  public students: IStudent[] = [];\n  fetchingStudents = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<SearchStudentDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any, private http: HttpClient\n  ) { }\n\n  ngOnInit() {\n    this.getStudents();\n  }\n\n  private getStudents() {\n\n    this.fetchingStudents = true;\n    this.http.get<any>(ApiEndpoint.STUDENTS).subscribe(data => {\n\n      this.students = data.data;\n      this.studentsDataSource = new MatTableDataSource(this.students);\n      this.studentsDataSource.paginator = this.paginator;\n      this.studentsDataSource.sort = this.sort;\n      this.fetchingStudents = false;\n\n    }, err => {\n      this.fetchingStudents = false;\n      if (err.error && err.error.apiMessage) {\n        this.errorMessage = err.error.apiMessage.detail;\n      } else {\n        this.errorMessage = err.message;\n      }\n      console.error(err);\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.studentsDataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  public select(student: IStudent) {\n    this.dialogRef.close(student);\n  }\n\n  public close() {\n    this.dialogRef.close();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3R1ZGVudHMvY29tcG9uZW50cy9zdHVkZW50LWF0dGVuZGVuY2Uvc3R1ZGVudC1hdHRlbmRlbmNlLWNyZWF0ZS1lZGl0L3N0dWRlbnQtYXR0ZW5kZW5jZS1jcmVhdGUtZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-student-attendence-create-edit',\n  templateUrl: './student-attendence-create-edit.component.html',\n  styleUrls: ['./student-attendence-create-edit.component.css']\n})\nexport class StudentAttendenceCreateEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3R1ZGVudHMvY29tcG9uZW50cy9zdHVkZW50LWF0dGVuZGVuY2Uvc3R1ZGVudC1hdHRlbmRlbmNlLWxpc3Qvc3R1ZGVudC1hdHRlbmRlbmNlLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-student-attendence-list',\n  templateUrl: './student-attendence-list.component.html',\n  styleUrls: ['./student-attendence-list.component.css']\n})\nexport class StudentAttendenceListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"::ng-deep .mat-form-field-appearance-fill .mat-form-field-infix {\\n  padding: 0 0.75em 0 !important;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9zdHVkZW50cy9jb21wb25lbnRzL3N0dWRlbnQvc3R1ZGVudC1jcmVhdGUtZWRpdC9zdHVkZW50LWNyZWF0ZS1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw4QkFBOEI7QUFDaEMiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3N0dWRlbnRzL2NvbXBvbmVudHMvc3R1ZGVudC9zdHVkZW50LWNyZWF0ZS1lZGl0L3N0dWRlbnQtY3JlYXRlLWVkaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIjo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1maWxsIC5tYXQtZm9ybS1maWVsZC1pbmZpeCB7XG4gIHBhZGRpbmc6IDAgMC43NWVtIDAgIWltcG9ydGFudDtcbn1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Student } from './student';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport * as moment from 'moment';\nimport { DatePipe } from '@angular/common';\nimport { ApiEndpoint, SnackBarConfig } from 'src/app/modules/shared/model/shared.model';\nimport { IStudent } from '../../../models/student.model';\nimport { SnackbarInfoComponent } from 'src/app/modules/shared/components/snackbar-info/snackbar-info.component';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-student-create-edit',\n  templateUrl: './student-create-edit.component.html',\n  styleUrls: ['./student-create-edit.component.css']\n})\nexport class StudentCreateEditComponent extends Student implements OnInit {\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private snackBar: MatSnackBar\n  ) {\n    super();\n    this.activatedRoute.params.subscribe(params => {\n      this.studId = params.id;\n      if (this.studId) {\n        this.getStudent();\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.getStandards();\n    this.sameAsPermAddrFormCtl.setValue(true);\n    this.nationalityFormCtl.setValue('Indian');\n\n    this.countryFormCtl.setValue('India');\n    this.stateFormCtl.setValue('Manipur');\n    this.districtFormCtl.setValue('Thoubal');\n\n    this.countryFormCtl.disable();\n    this.stateFormCtl.disable();\n\n    this.corrCountryFormCtl.setValue('India');\n    this.corrStateFormCtl.setValue('Manipur');\n    this.corrDistrictFormCtl.setValue('Thoubal');\n\n    this.corrCountryFormCtl.disable();\n    this.corrStateFormCtl.disable();\n  }\n\n  getStandards() {\n\n    this.http.get<any>(ApiEndpoint.STANDARD).subscribe(data => {\n      this.standards = data.data;\n    }, err => {\n      console.error(err);\n    });\n  }\n\n  getStudent() {\n\n    let resp;\n    this.http.get(ApiEndpoint.STUDENTS + '/' + this.studId).subscribe(data => {\n      resp = data;\n      this.student = resp.data;\n      this.setForm();\n    }, err => {\n      console.error(err);\n      if (err.error && err.error.apiMessage) {\n        this.errorMessage = err.error.apiMessage.detail;\n      } else {\n        this.errorMessage = err.message;\n      }\n    });\n  }\n\n  save() {\n\n    const datePipe = new DatePipe('en-US');\n    const studentPayloadData: IStudent = {\n      id: this.idFormCtl.value,\n      registrationNo: this.registrationNoFormCtl.value,\n      registrationDate: datePipe.transform(this.registrationDateFormCtl.value, 'MM/dd/yyyy'),\n      status: this.statusFormCtl.value,\n      firstName: this.firstNameFormCtl.value,\n      middleName: this.middleNameFormCtl.value,\n      lastName: this.lastNameFormCtl.value,\n      gender: this.genderFormCtl.value,\n      aadhaarNo:null,\n      bloodGroup: this.bloodGroupFormCtl.value,\n      community: this.communityFormCtl.value,\n      nationality: this.nationalityFormCtl.value,\n      physicallyChallenged: null,\n      religion: this.religionFormCtl.value,\n      standard: this.standardFormCtl.value,\n      rollNo: this.rollNoFormCtl.value,\n      dob: datePipe.transform(this.dobFormCtl.value, 'MM/dd/yyyy'),\n      joiningDate: datePipe.transform(this.joiningDateFormCtl.value, 'MM/dd/yyyy'),\n\n      correspondentAddress: {\n        id: this.corrAddIdFormCtl.value,\n        firstLine: this.corrFirstLineFormCtl.value,\n        secondLine: this.corrSecondLineFormCtl.value,\n        country: this.corrCountryFormCtl.value,\n        state: this.corrStateFormCtl.value,\n        district: this.corrDistrictFormCtl.value\n      },\n      permanentAddress: {\n        id: this.addIdFormCtl.value,\n        firstLine: this.firstLineFormCtl.value,\n        secondLine: this.secondLineFormCtl.value,\n        country: this.countryFormCtl.value,\n        state: this.stateFormCtl.value,\n        district: this.districtFormCtl.value\n      },\n      sameAsPermAddr: this.sameAsPermAddrFormCtl.value,\n      fatherInfo: {\n        id: this.fInfoIdFormCtl.value,\n        name: this.fatherNameFormCtl.value,\n        dob: datePipe.transform(this.fatherDobFormCtl.value, 'MM/dd/yyyy'),\n        eduQualification: this.fatherEduQualiFormCtl.value,\n        income: this.fatherAnnualIncomeFormCtl.value,\n        occupation: this.fatherOccupationFormCtl.value,\n        contactNo: this.fatherContactNoFormCtl.value\n      },\n      motherInfo: {\n        id: this.mInfoIdFormCtl.value,\n        name: this.motherNameFormCtl.value,\n        dob: datePipe.transform(this.motherDobFormCtl.value, 'MM/dd/yyyy'),\n        eduQualification: this.motherEduQualiFormCtl.value,\n        income: this.motherAnnualIncomeFormCtl.value,\n        occupation: this.motherOccupationFormCtl.value,\n        contactNo: this.motherContactNoFormCtl.value\n      },\n      guardianInfo: {\n        id: this.gInfoIdFormCtl.value,\n        name: this.guardianNameFormCtl.value,\n        dob: datePipe.transform(this.guardianDobFormCtl.value, 'MM/dd/yyyy'),\n        eduQualification: this.guardianEduQualiFormCtl.value,\n        income: this.guardianAnnualIncomeFormCtl.value,\n        occupation: this.gaurdianOccupationFormCtl.value,\n        contactNo: this.guardianContactNoFormCtl.value\n      }\n    };\n\n    console.log(studentPayloadData);\n\n    this.saveOrUpdateHttpObservable(this.studId, studentPayloadData).subscribe(data => {\n\n      if (data.apiMessage && data.apiMessage.error) {\n        this.snackBar.openFromComponent(\n          SnackbarInfoComponent,\n          {\n            data: SnackBarConfig.dangerData(data.apiMessage.detail),\n            ...SnackBarConfig.flashTopDangerSnackBar()\n          });\n        return;\n      } else {\n        this.snackBar.openFromComponent(\n          SnackbarInfoComponent,\n          {\n            data: SnackBarConfig.successData(data.apiMessage.detail),\n            ...SnackBarConfig.flashTopSuccessSnackBar()\n          });\n      }\n\n      this.hasSubmitted = true;\n      this.router.navigate(['/admin/students']);\n\n    }, err => {\n      console.error(err);\n      if (err.error && err.error.apiMessage) {\n        this.errorMessage = err.error.apiMessage.detail;\n      } else {\n        this.errorMessage = err.message;\n      }\n      this.snackBar.openFromComponent(\n        SnackbarInfoComponent,\n        {\n          data: SnackBarConfig.dangerData(this.errorMessage),\n          ...SnackBarConfig.flashTopDangerSnackBar()\n        });\n    });\n\n  }\n\n  private saveOrUpdateHttpObservable(studRegdId: number, studentPayloadData: IStudent) {\n    if (this.studId) {\n      return this.http.put<any>(ApiEndpoint.STUDENTS + '/' + studRegdId, studentPayloadData);\n    } else {\n      return this.http.post<any>(ApiEndpoint.STUDENTS, studentPayloadData);\n    }\n  }\n\n  setForm() {\n\n    this.idFormCtl.setValue(this.student.id);\n    this.registrationNoFormCtl.setValue(this.student.registrationNo);\n    this.registrationDateFormCtl.setValue(moment(this.student.registrationDate as string));\n    this.statusFormCtl.setValue(this.student.status);\n    this.firstNameFormCtl.setValue(this.student.firstName);\n    this.middleNameFormCtl.setValue(this.student.middleName);\n    this.lastNameFormCtl.setValue(this.student.lastName);\n    this.standardFormCtl.setValue(this.student.standard);\n    this.bloodGroupFormCtl.setValue(this.student.bloodGroup);\n    this.genderFormCtl.setValue(this.student.gender);\n    this.religionFormCtl.setValue(this.student.religion);\n    this.communityFormCtl.setValue(this.student.community);\n    this.nationalityFormCtl.setValue(this.student.nationality);\n    this.rollNoFormCtl.setValue(this.student.rollNo);\n    this.dobFormCtl.setValue(moment(this.student.dob as string));\n    this.joiningDateFormCtl.setValue(moment(this.student.joiningDate as string));\n\n    this.sameAsPermAddrFormCtl.setValue(this.student.sameAsPermAddr);\n\n    const permanentAddress = this.student.permanentAddress;\n    if (permanentAddress) {\n      this.addIdFormCtl.setValue(permanentAddress.id);\n      this.firstLineFormCtl.setValue(permanentAddress.firstLine);\n      this.secondLineFormCtl.setValue(permanentAddress.secondLine);\n      this.countryFormCtl.setValue(permanentAddress.country);\n      this.stateFormCtl.setValue(permanentAddress.state);\n      this.districtFormCtl.setValue(permanentAddress.district);\n    }\n\n    const correspondentAddress = this.student.correspondentAddress;\n    if (correspondentAddress) {\n      this.corrAddIdFormCtl.setValue(correspondentAddress.id);\n      this.corrFirstLineFormCtl.setValue(correspondentAddress.firstLine);\n      this.corrSecondLineFormCtl.setValue(correspondentAddress.secondLine);\n      this.corrCountryFormCtl.setValue(correspondentAddress.country);\n      this.corrStateFormCtl.setValue(correspondentAddress.state);\n      this.corrDistrictFormCtl.setValue(correspondentAddress.district);\n    }\n\n    const fatherInfo = this.student.fatherInfo;\n    if (fatherInfo) {\n      this.fInfoIdFormCtl.setValue(fatherInfo.id);\n      this.fatherNameFormCtl.setValue(fatherInfo.name);\n      if (fatherInfo.dob) {\n        this.fatherDobFormCtl.setValue(moment(fatherInfo.dob as string));\n      }\n      this.fatherContactNoFormCtl.setValue(fatherInfo.contactNo);\n      this.fatherAnnualIncomeFormCtl.setValue(fatherInfo.income);\n      this.fatherEduQualiFormCtl.setValue(fatherInfo.eduQualification);\n      this.fatherOccupationFormCtl.setValue(fatherInfo.occupation);\n    }\n\n    const motherInfo = this.student.motherInfo;\n    if (motherInfo) {\n      this.mInfoIdFormCtl.setValue(motherInfo.id);\n      this.motherNameFormCtl.setValue(motherInfo.name);\n      if (motherInfo.dob) {\n        this.motherNameFormCtl.setValue(moment(motherInfo.dob as string));\n      }\n      this.motherContactNoFormCtl.setValue(motherInfo.contactNo);\n      this.motherAnnualIncomeFormCtl.setValue(motherInfo.income);\n      this.motherEduQualiFormCtl.setValue(motherInfo.eduQualification);\n      this.motherOccupationFormCtl.setValue(motherInfo.occupation);\n    }\n\n    const guardianInfo = this.student.guardianInfo;\n    if (guardianInfo) {\n      this.gInfoIdFormCtl.setValue(guardianInfo.id);\n      this.guardianNameFormCtl.setValue(guardianInfo.name);\n      if (guardianInfo.dob) {\n        this.guardianDobFormCtl.setValue(moment(guardianInfo.dob as string));\n      }\n      this.guardianContactNoFormCtl.setValue(guardianInfo.contactNo);\n      this.guardianAnnualIncomeFormCtl.setValue(guardianInfo.income);\n      this.guardianEduQualiFormCtl.setValue(guardianInfo.eduQualification);\n      this.gaurdianOccupationFormCtl.setValue(guardianInfo.occupation);\n    }\n  }\n\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as moment from 'moment';\nimport { IStudent, Genders, StudentStatuses } from '../../../models/student.model';\nimport { IKeyValue } from 'src/app/modules/shared/model/IKeyVal';\nimport { bloodGroups, religions, communities, districts } from 'src/app/modules/shared/model/shared.model';\nimport { IStandard } from 'src/app/modules/maintenances/model/standard';\n\nexport class Student {\n\n    studId: number;\n    errorMessage: string;\n    hasSubmitted = false;\n    studentForm: FormGroup;\n    student: IStudent;\n    statuses: string[] = StudentStatuses;\n    standards: IStandard[] = [];\n    genders: IKeyValue[] = Genders;\n    yesNo: IKeyValue[] = [{ key: 'Yes', value: true }, { key: 'No', value: false }];\n    bloodGroups = bloodGroups;\n    religions = religions;\n    communities = communities;\n    districts = districts;\n\n    // Registration details\n    idFormCtl = new FormControl('', null);\n    registrationNoFormCtl = new FormControl('', null);\n    registrationDateFormCtl = new FormControl('', null);\n    statusFormCtl = new FormControl('', null);\n\n    // Student basic details\n    firstNameFormCtl = new FormControl('', Validators.required);\n    middleNameFormCtl = new FormControl('', null);\n    lastNameFormCtl = new FormControl('', Validators.required);\n    standardFormCtl = new FormControl('', null);\n    rollNoFormCtl = new FormControl('', null);\n    dobFormCtl = new FormControl('', Validators.required);\n    joiningDateFormCtl = new FormControl('', null);\n    genderFormCtl = new FormControl('', null);\n    bloodGroupFormCtl = new FormControl('', null);\n    religionFormCtl = new FormControl('', null);\n    casteFormCtl = new FormControl('', null);\n    nationalityFormCtl = new FormControl('', null);\n    communityFormCtl = new FormControl('', null);\n\n    // Permanent Address details\n    sameAsPermAddrFormCtl = new FormControl('', null);\n    addIdFormCtl = new FormControl('', null);\n    firstLineFormCtl = new FormControl('', null);\n    secondLineFormCtl = new FormControl('', null);\n    countryFormCtl = new FormControl('', null);\n    stateFormCtl = new FormControl('', null);\n    districtFormCtl = new FormControl('', null);\n\n    // Correspondent Address\n    corrAddIdFormCtl = new FormControl('', null);\n    corrFirstLineFormCtl = new FormControl('', null);\n    corrSecondLineFormCtl = new FormControl('', null);\n    corrCountryFormCtl = new FormControl('', null);\n    corrStateFormCtl = new FormControl('', null);\n    corrDistrictFormCtl = new FormControl('', null);\n\n    // Student Father details\n    fInfoIdFormCtl = new FormControl('', null);\n    fatherNameFormCtl = new FormControl('', null);\n    fatherDobFormCtl = new FormControl('', null);\n    fatherContactNoFormCtl = new FormControl('', null);\n    fatherEduQualiFormCtl = new FormControl('', null);\n    fatherOccupationFormCtl = new FormControl('', null);\n    fatherAnnualIncomeFormCtl = new FormControl('', null);\n    fatherAadhaarNoFormCtl = new FormControl('', null);\n\n    // Student Mother details\n    mInfoIdFormCtl = new FormControl('', null);\n    motherNameFormCtl = new FormControl('', null);\n    motherDobFormCtl = new FormControl('', null);\n    motherContactNoFormCtl = new FormControl('', null);\n    motherEduQualiFormCtl = new FormControl('', null);\n    motherOccupationFormCtl = new FormControl('', null);\n    motherAnnualIncomeFormCtl = new FormControl('', null);\n    motherAadhaarNoFormCtl = new FormControl('', null);\n\n    // Student Guardian details\n    gInfoIdFormCtl = new FormControl('', null);\n    guardianNameFormCtl = new FormControl('', null);\n    guardianDobFormCtl = new FormControl('', null);\n    guardianContactNoFormCtl = new FormControl('', null);\n    guardianEduQualiFormCtl = new FormControl('', null);\n    gaurdianOccupationFormCtl = new FormControl('', null);\n    guardianAnnualIncomeFormCtl = new FormControl('', null);\n    gaurdianAadhaarNoFormCtl = new FormControl('', null);\n\n    constructor() {\n        this.studentForm = new FormGroup({\n\n            // Student basic details\n            firstNameFormCtl: this.firstNameFormCtl,\n            middleNameFormCtl: this.middleNameFormCtl,\n            lastNameFormCtl: this.lastNameFormCtl,\n            standardFormCtl: this.standardFormCtl,\n            rollNoFormCtl: this.rollNoFormCtl,\n            dobFormCtl: this.dobFormCtl,\n            joiningDateFormCtl: this.joiningDateFormCtl,\n\n            // Student Address details\n            firstLineFormCtl: this.firstLineFormCtl,\n            secondLineFormCtl: this.secondLineFormCtl,\n            countryFormCtl: this.countryFormCtl,\n            stateFormCtl: this.stateFormCtl,\n            districtFormCtl: this.districtFormCtl,\n\n            // Student Father details\n            fatherNameFormCtl: this.fatherNameFormCtl,\n            fatherDobFormCtl: this.fatherDobFormCtl,\n            fatherContactNoFormCtl: this.fatherContactNoFormCtl,\n\n            // Student Mother details\n            motherNameFormCtl: this.motherNameFormCtl,\n            motherDobFormCtl: this.motherDobFormCtl,\n            motherContactNoFormCtl: this.motherContactNoFormCtl,\n\n            // Student Guardian details\n            guardianNameFormCtl: this.guardianNameFormCtl,\n            guardianDobFormCtl: this.guardianDobFormCtl,\n            guardianContactNoFormCtl: this.guardianContactNoFormCtl\n        });\n\n        this.registrationNoFormCtl.disable();\n        this.registrationDateFormCtl.disable();\n        this.registrationDateFormCtl.setValue(moment());\n    }\n}\n","export default \".name-class {\\n  text-transform: capitalize;\\n}\\n\\n.name-class:hover {\\n  color: #0466b6;\\n  text-transform: capitalize;\\n}\\n\\ntr:hover {\\n  cursor: pointer;\\n  background-color: #f3f3f3;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FkbWlucGMvc2Nob29sL215c2Nob29sL2FkbWluLXVpL3NyYy9hcHAvbW9kdWxlcy9zdHVkZW50cy9jb21wb25lbnRzL3N0dWRlbnQvc3R1ZGVudC1saXN0L3N0dWRlbnQtbGlzdC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbW9kdWxlcy9zdHVkZW50cy9jb21wb25lbnRzL3N0dWRlbnQvc3R1ZGVudC1saXN0L3N0dWRlbnQtbGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNFLDBCQUFBO0FDQUY7O0FER0E7RUFDRSxjQUFBO0VBQ0EsMEJBQUE7QUNBRjs7QURHQTtFQUNFLGVBQUE7RUFDQSx5QkFBQTtBQ0FGIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9zdHVkZW50cy9jb21wb25lbnRzL3N0dWRlbnQvc3R1ZGVudC1saXN0L3N0dWRlbnQtbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLm5hbWUtY2xhc3Mge1xuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbn1cblxuLm5hbWUtY2xhc3M6aG92ZXIge1xuICBjb2xvcjogcmdiKDQsIDEwMiwgMTgyKTtcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG59XG5cbnRyOmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQzLCAyNDMsIDI0Myk7XG59XG4iLCIubmFtZS1jbGFzcyB7XG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xufVxuXG4ubmFtZS1jbGFzczpob3ZlciB7XG4gIGNvbG9yOiAjMDQ2NmI2O1xuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbn1cblxudHI6aG92ZXIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmM2YzZjM7XG59Il19 */\"","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport { MatTableDataSource, MatDialog, MatPaginator, MatSort, MatDialogRef, MAT_DIALOG_DATA, MatSnackBar } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiEndpoint, IConfirmation, SnackBarConfig } from 'src/app/modules/shared/model/shared.model';\nimport { IStudent } from '../../../models/student.model';\nimport { ConfirmationDialogComponent } from 'src/app/modules/shared/components/confirmation-dialog/confirmation-dialog.component';\nimport { SnackbarInfoComponent } from 'src/app/modules/shared/components/snackbar-info/snackbar-info.component';\nimport { AuthService } from 'src/app/modules/auth/services/auth.service';\n\n@Component({\n  selector: 'app-student-list',\n  templateUrl: './student-list.component.html',\n  styleUrls: ['./student-list.component.scss']\n})\nexport class StudentListComponent implements OnInit {\n\n  public errorMessage: string;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  // tslint:disable-next-line: max-line-length\n  public studentsColumns: string[] = ['firstName', 'middleName', 'lastName', 'gender', 'rollNo', 'standard', 'registrationNo', 'status', 'action'];\n  public studentsDataSource: MatTableDataSource<IStudent>;\n  public students: IStudent[] = [];\n  isSuperAdmin = false;\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    this.isSuperAdmin = this.authService.isSuperAdmin();\n    this.getStudents();\n  }\n\n  private getStudents() {\n\n    let resp;\n    this.http.get(ApiEndpoint.STUDENTS).subscribe(data => {\n\n      resp = data;\n      if (resp && !resp.apiMessage.error) {\n\n        this.students = resp.data;\n        this.studentsDataSource = new MatTableDataSource(this.students);\n        this.studentsDataSource.paginator = this.paginator;\n        this.studentsDataSource.sort = this.sort;\n\n        if (!this.students) {\n          this.errorMessage = 'No Student found';\n        }\n\n      } else {\n        this.errorMessage = resp.apiMessage.detail;\n      }\n\n    }, err => {\n      if (err.error && err.error.apiMessage) {\n        this.errorMessage = err.error.apiMessage.detail;\n      } else {\n        this.errorMessage = err.message;\n      }\n\n      console.error(err);\n    });\n\n  }\n\n  applyFilter(filterValue: string) {\n    this.studentsDataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  public onClickRow(studId: number) {\n\n    this.router.navigate(['/admin/students/' + studId + '/view']);\n\n  }\n\n  public onDeleteRow(studId: number) {\n    const confirmationData: IConfirmation = {\n      title: 'Delete Student',\n      subtitle: 'Are you really sure to delete this student?'\n    };\n\n    this.dialog.open(ConfirmationDialogComponent, { width: '26%', data: confirmationData, disableClose: true })\n      .afterClosed().subscribe(okData => {\n        if (okData) {\n\n          this.http.delete<any>(ApiEndpoint.STUDENTS + '/' + studId).subscribe(data => {\n            if (data.apiMessage && data.apiMessage.error) {\n              this.snackBar.openFromComponent(\n                SnackbarInfoComponent,\n                {\n                  data: SnackBarConfig.dangerData(data.apiMessage.detail),\n                  ...SnackBarConfig.flashTopDangerSnackBar()\n                });\n              return;\n            } else {\n              this.snackBar.openFromComponent(\n                SnackbarInfoComponent,\n                {\n                  data: SnackBarConfig.successData(data.apiMessage.detail),\n                  ...SnackBarConfig.flashTopSuccessSnackBar()\n                });\n            }\n            this.getStudents();\n          }, err => {\n            console.error(err);\n            if (err.error && err.error.apiMessage) {\n              this.errorMessage = err.error.apiMessage.detail;\n            } else {\n              this.errorMessage = err.message;\n            }\n            this.snackBar.openFromComponent(\n              SnackbarInfoComponent,\n              {\n                data: SnackBarConfig.dangerData(this.errorMessage),\n                ...SnackBarConfig.flashTopDangerSnackBar()\n              });\n          });\n\n        }\n      });\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3R1ZGVudHMvY29tcG9uZW50cy9zdHVkZW50L3N0dWRlbnQtdmlldy9zdHVkZW50LXZpZXcuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpClient, HttpEventType, HttpResponse } from '@angular/common/http';\nimport { IStudent } from '../../../models/student.model';\nimport { ApiEndpoint, IConfirmation, SnackBarConfig } from 'src/app/modules/shared/model/shared.model';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { ConfirmationDialogComponent } from 'src/app/modules/shared/components/confirmation-dialog/confirmation-dialog.component';\nimport { FileUploadService } from 'src/app/modules/shared/services/file-upload.service';\nimport { SnackbarInfoComponent } from 'src/app/modules/shared/components/snackbar-info/snackbar-info.component';\nimport { AuthService } from 'src/app/modules/auth/services/auth.service';\n\n@Component({\n  selector: 'app-student-view',\n  templateUrl: './student-view.component.html',\n  styleUrls: ['./student-view.component.css']\n})\nexport class StudentViewComponent implements OnInit {\n\n  errorMessage: string;\n  studId: string;\n  student: IStudent;\n  percentage: number;\n  uploadingFile: boolean;\n  profilePicUrl = '../../../../../../assets/images/avatar.png';\n  isSuperAdmin = false;\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private dialog: MatDialog,\n    private fileUploadService: FileUploadService,\n    private snackBar: MatSnackBar,\n    private authService: AuthService\n  ) {\n    this.activatedRoute.params.subscribe(params => {\n      this.studId = params.id;\n    });\n  }\n\n  ngOnInit() {\n    this.isSuperAdmin = this.authService.isSuperAdmin();\n    this.getStudent();\n  }\n\n  getStudent() {\n\n    let resp;\n    this.http.get(ApiEndpoint.STUDENTS + '/' + this.studId).subscribe(data => {\n      resp = data;\n      this.student = resp.data;\n      if (this.student.profilePic) {\n        this.profilePicUrl = ApiEndpoint.DOCUMENT + '/' + this.student.profilePic.id + '/view';\n      }\n    }, err => {\n      console.error(err);\n      if (err.error && err.error.apiMessage) {\n        this.errorMessage = err.error.apiMessage.detail;\n      } else {\n        this.errorMessage = err.message;\n      }\n    });\n  }\n\n  delete() {\n    const confirmationData: IConfirmation = {\n      title: 'Delete Student',\n      subtitle: 'Are you really sure to delete this student?'\n    };\n\n    this.dialog.open(ConfirmationDialogComponent, { width: '26%', data: confirmationData, disableClose: true })\n      .afterClosed().subscribe(okData => {\n        if (okData) {\n          this.http.delete<any>(ApiEndpoint.STUDENTS + '/' + this.studId).subscribe(data => {\n            if (data.apiMessage && data.apiMessage.error) {\n              this.snackBar.openFromComponent(\n                SnackbarInfoComponent,\n                {\n                  data: SnackBarConfig.dangerData(data.apiMessage.detail),\n                  ...SnackBarConfig.flashTopDangerSnackBar()\n                });\n              return;\n            } else {\n              this.snackBar.openFromComponent(\n                SnackbarInfoComponent,\n                {\n                  data: SnackBarConfig.successData(data.apiMessage.detail),\n                  ...SnackBarConfig.flashTopSuccessSnackBar()\n                });\n            }\n            this.router.navigate(['/admin/students']);\n          }, err => {\n            console.error(err);\n            if (err.error && err.error.apiMessage) {\n              this.errorMessage = err.error.apiMessage.detail;\n            } else {\n              this.errorMessage = err.message;\n            }\n            this.snackBar.openFromComponent(\n              SnackbarInfoComponent,\n              {\n                data: SnackBarConfig.dangerData(this.errorMessage),\n                ...SnackBarConfig.flashTopDangerSnackBar()\n              });\n          });\n\n        }\n      });\n  }\n\n  edit() {\n    this.router.navigate(['/admin/students/' + this.studId + '/edit']);\n  }\n\n  onSelectFile(file: File) {\n\n    this.fileUploadService.uploadDoc(file, this.studId, 'STUDENT', 'PROFILE_PIC', 'PROFILE_PIC').subscribe(event => {\n      console.log(event);\n      if (event.type === HttpEventType.UploadProgress) {\n        this.percentage = Math.round(100 * event.loaded / event.total);\n      } else if (event instanceof HttpResponse) {\n\n        this.uploadingFile = false;\n        let body: string | any = event.body as string;\n        body = JSON.parse(body);\n\n        const docUrl = ApiEndpoint.DOCUMENT + '/' + body.actionMessage + '/view';\n        this.profilePicUrl = docUrl;\n        console.log('File has been uploaded');\n      }\n    }, error => {\n      console.error(error);\n    });\n\n  }\n\n}\n","import { IStudent } from './student.model';\n\nexport interface IAdmission {\n    id: number;\n    admissionRefNo: string;\n    status: string;\n    academicYear: string;\n    admissionDate: string;\n    standard: string;\n    admissionAmount: number;\n    paidAmount: number;\n    dueAmount: number;\n    promiseToPayDate: string;\n    student: IStudent;\n    fees: IFee[];\n}\n\nexport interface IFee {\n    id: number;\n    feeRefNo: string;\n    status: string;\n    amount: string;\n    exptdateOfPayment: string;\n    actdateOfPayment: string;\n    monthOf: number;\n}\n\nexport const AdmissionStatuses: string[] = ['Admitted', 'Expired'];\n\nexport interface IKeyValue {\n    key: string;\n    value: any;\n}","import { IAddress } from '../../employees/model/employeeModels';\nimport { Document } from '../../shared/model/shared.model';\n\nexport interface IStudent {\n\n    id: number;\n    registrationNo: string;\n    registrationDate: string;\n    gender: string;\n    bloodGroup: string;\n    religion: string;\n    community: string;\n    nationality: string;\n    aadhaarNo: string;\n    physicallyChallenged: boolean;\n    status?: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    standard: string;\n    rollNo: string;\n    dob: string;\n    joiningDate: string;\n    profilePic?: Document;\n    correspondentAddress: IAddress;\n    sameAsPermAddr: boolean;\n    permanentAddress: IAddress;\n    fatherInfo: IGuardian;\n    motherInfo: IGuardian;\n    guardianInfo: IGuardian;\n}\n\nexport interface IGuardian {\n\n    id: number;\n    name: string;\n    dob: string;\n    eduQualification: string;\n    contactNo: string;\n    occupation: string;\n    income: number;\n}\n\nexport const Standards: IKeyValue[] = [\n\n    { key: 'NUSSERY', value: 'Nussery' },\n    { key: 'KG', value: 'KG' },\n    { key: 'CLASS_I', value: 'Class I' },\n    { key: 'CLASS_II', value: 'Class II' },\n    { key: 'CLASS_III', value: 'Class III' },\n    { key: 'CLASS_IV', value: 'Class IV' },\n    { key: 'CLASS_V', value: 'Class V' },\n    { key: 'CLASS_VI', value: 'Class VI' },\n    { key: 'CLASS_VII', value: 'Class VII' },\n    { key: 'CLASS_VIII', value: 'Class VIII' },\n    { key: 'CLASS_IX', value: 'Class IX' },\n    { key: 'CLASS_X', value: 'Class X' }\n\n];\n\nexport const StudentStatuses: string[] = ['Active', 'Inactive'];\n\nexport const Genders: IKeyValue[] = [\n    { key: 'MALE', value: 'Male' },\n    { key: 'FEMALE', value: 'Female' }\n];\n\n\nexport interface IKeyValue {\n    key: string;\n    value: any;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdmissionFeeCreateEditComponent } from './components/admission-fee/admission-fee-create-edit/admission-fee-create-edit.component';\nimport { AdmissionFeeListComponent } from './components/admission-fee/admission-fee-list/admission-fee-list.component';\nimport { AdmissionFeeViewComponent } from './components/admission-fee/admission-fee-view/admission-fee-view.component';\nimport { SearchStudentDialogComponent } from './components/search-student-dialog/search-student-dialog.component';\nimport { StudentCreateEditComponent } from './components/student/student-create-edit/student-create-edit.component';\nimport { StudentListComponent } from './components/student/student-list/student-list.component';\nimport { StudentViewComponent } from './components/student/student-view/student-view.component';\n// tslint:disable-next-line: max-line-length\nimport { StudentAttendenceCreateEditComponent } from './components/student-attendence/student-attendence-create-edit/student-attendence-create-edit.component';\nimport { StudentAttendenceListComponent } from './components/student-attendence/student-attendence-list/student-attendence-list.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MaterialModule } from '../shared/material/material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CustomDateModule } from '../shared/custom-date.module';\nimport { SharedModule } from '../shared/shared.module';\n\nconst routes: Routes = [\n  { path: '', component: StudentListComponent },\n  { path: 'add', component: StudentCreateEditComponent },\n  { path: ':id/view', component: StudentViewComponent },\n  { path: ':id/edit', component: StudentCreateEditComponent },\n\n  { path: 'admissions', component: AdmissionFeeListComponent },\n  { path: 'admissions/add', component: AdmissionFeeCreateEditComponent },\n  { path: 'admissions/:id/view', component: AdmissionFeeViewComponent },\n  { path: 'admissions/:id/edit', component: AdmissionFeeCreateEditComponent },\n\n  { path: 'attendances', component: StudentAttendenceCreateEditComponent },\n\n];\n\n@NgModule({\n  declarations: [\n    AdmissionFeeCreateEditComponent,\n    AdmissionFeeListComponent,\n    AdmissionFeeViewComponent,\n    SearchStudentDialogComponent,\n    StudentCreateEditComponent,\n    StudentListComponent,\n    StudentViewComponent,\n    StudentAttendenceCreateEditComponent,\n    StudentAttendenceListComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CustomDateModule,\n    SharedModule\n  ],\n  entryComponents: [SearchStudentDialogComponent]\n})\nexport class StudentsModule { }\n"],"sourceRoot":"webpack:///"}