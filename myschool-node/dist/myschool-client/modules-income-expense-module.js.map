{"version":3,"sources":["webpack:///./src/app/components/income-expense/expense/expense-create-edit/expense-create-edit.component.css","webpack:///./src/app/components/income-expense/expense/expense-create-edit/expense-create-edit.component.html","webpack:///./src/app/components/income-expense/expense/expense-create-edit/expense-create-edit.component.ts","webpack:///./src/app/components/income-expense/expense/expense-list/expense-list.component.css","webpack:///./src/app/components/income-expense/expense/expense-list/expense-list.component.html","webpack:///./src/app/components/income-expense/expense/expense-list/expense-list.component.ts","webpack:///./src/app/components/income-expense/expense/expense-view/expense-view.component.css","webpack:///./src/app/components/income-expense/expense/expense-view/expense-view.component.html","webpack:///./src/app/components/income-expense/expense/expense-view/expense-view.component.ts","webpack:///./src/app/components/income-expense/income/income-create-edit/income-create-edit.component.css","webpack:///./src/app/components/income-expense/income/income-create-edit/income-create-edit.component.html","webpack:///./src/app/components/income-expense/income/income-create-edit/income-create-edit.component.ts","webpack:///./src/app/components/income-expense/income/income-list/income-list.component.css","webpack:///./src/app/components/income-expense/income/income-list/income-list.component.html","webpack:///./src/app/components/income-expense/income/income-list/income-list.component.ts","webpack:///./src/app/components/income-expense/income/income-view/income-view.component.css","webpack:///./src/app/components/income-expense/income/income-view/income-view.component.html","webpack:///./src/app/components/income-expense/income/income-view/income-view.component.ts","webpack:///./src/app/model/income-expense.model.ts","webpack:///./src/app/modules/income-expense.module.ts"],"names":[],"mappings":"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","file":"modules-income-expense-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW5jb21lLWV4cGVuc2UvZXhwZW5zZS9leHBlbnNlLWNyZWF0ZS1lZGl0L2V4cGVuc2UtY3JlYXRlLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"shadow form-min-height ml-3 mr-3 mt-1 pb-5\\\">\\r\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #dddddd\\\">\\r\\n    <div class=\\\"col-md-6\\\" [ngStyle.lt-md]=\\\"{'text-align' : 'center'}\\\">\\r\\n      <span style=\\\"font-weight: bold; font-size: 14px; line-height: 35px;\\\">Expense</span>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 text-right\\\" [ngStyle.lt-md]=\\\"{'text-align' : 'center'}\\\">\\r\\n      <button class=\\\"btn btn-cancel\\\" routerLink=\\\"/income-expense/expenses\\\">\\r\\n        <mat-icon>clear</mat-icon>&nbsp;Cancel\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-save\\\" (click)=\\\"save()\\\" [disabled]='!expenseForm.valid'>\\r\\n        <mat-icon>save_alt</mat-icon>&nbsp;Save Expense\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #f07a7a;color: #ffffff\\\" *ngIf=\\\"errorMessage\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <span>{{errorMessage}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div [ngClass]=\\\"['pt-1','pr-5','pl-5']\\\" [ngClass.lt-md]=\\\"['p-0']\\\">\\r\\n\\r\\n    <div class=\\\"row pt-3\\\">\\r\\n\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <p style=\\\"font-weight: bold; font-size: 14px;\\\">Expense Info</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label>Reference No.</mat-label>\\r\\n          <input matInput placeholder=\\\"Placeholder\\\" [formControl]=\\\"refNoFormCtl\\\">\\r\\n          <mat-error *ngIf=\\\"refNoFormCtl.hasError('required')\\\">\\r\\n            Reference No. is <strong>required</strong>\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label>Amount</mat-label>\\r\\n          <input matInput placeholder=\\\"Placeholder\\\" [formControl]=\\\"amountFormCtl\\\">\\r\\n          <mat-error *ngIf=\\\"amountFormCtl.hasError('required')\\\">\\r\\n            Amount is <strong>required</strong>\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label>Expense Type</mat-label>\\r\\n          <mat-select placeholder=\\\"Status\\\" [formControl]=\\\"expenseTypeFormCtl\\\">\\r\\n            <mat-option *ngFor=\\\"let option of expenseTypes\\\" [value]=\\\"option.value\\\">\\r\\n              {{option.value}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error *ngIf=\\\"expenseTypeFormCtl.hasError('required')\\\">\\r\\n            Expense Type is <strong>required</strong>\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label>Expense Details</mat-label>\\r\\n          <input matInput placeholder=\\\"Expense Details\\\" [formControl]=\\\"expenseDetailsFormCtl\\\">\\r\\n          <mat-error *ngIf=\\\"expenseDetailsFormCtl.hasError('required')\\\">\\r\\n            Expense Details is <strong>required</strong>\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label>Expense Date</mat-label>\\r\\n          <input matInput [matDatepicker]=\\\"expenseDate\\\" placeholder=\\\"Expense Date\\\" [formControl]=\\\"expenseDateFormCtl\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"expenseDate\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #expenseDate></mat-datepicker>\\r\\n          <mat-error *ngIf=\\\"expenseDateFormCtl.hasError('required')\\\">\\r\\n            Expense Date is <strong>required</strong>\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label>Comments</mat-label>\\r\\n          <input matInput placeholder=\\\"Expense Details\\\" [formControl]=\\\"commentsFormCtl\\\">\\r\\n          <mat-error *ngIf=\\\"commentsFormCtl.hasError('required')\\\">\\r\\n            Comments is <strong>required</strong>\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { IExpense, ExpenseTypes } from 'src/app/model/income-expense.model';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiEndpoint } from 'src/app/model/apiEndpoint';\r\nimport { IKeyValue } from 'src/app/model/student.model';\r\n\r\n@Component({\r\n  selector: 'app-expense-create-edit',\r\n  templateUrl: './expense-create-edit.component.html',\r\n  styleUrls: ['./expense-create-edit.component.css', '../../../../../assets/css/form-common.css']\r\n})\r\nexport class ExpenseCreateEditComponent implements OnInit {\r\n\r\n  expenseId: number\r\n  errorMessage: String\r\n\r\n  expenseForm: FormGroup\r\n  expense: IExpense\r\n  expenseTypes: IKeyValue[] = ExpenseTypes\r\n\r\n  idFormCtl = new FormControl('', null)\r\n  refNoFormCtl = new FormControl('', null)\r\n  amountFormCtl = new FormControl('', Validators.required)\r\n  expenseTypeFormCtl = new FormControl('', Validators.required)\r\n  expenseDetailsFormCtl = new FormControl('', Validators.required)\r\n  commentsFormCtl = new FormControl('', null)\r\n  expenseDateFormCtl = new FormControl('', Validators.required)\r\n\r\n  constructor(private http: HttpClient, private router: Router, private activatedRoute: ActivatedRoute) {\r\n\r\n    this.expenseForm = new FormGroup({\r\n      refNoFormCtl: this.refNoFormCtl,\r\n      amountFormCtl: this.amountFormCtl,\r\n      expenseTypeFormCtl: this.expenseTypeFormCtl,\r\n      expenseDetailsFormCtl: this.expenseDetailsFormCtl,\r\n      commentsFormCtl: this.commentsFormCtl,\r\n      expenseDateFormCtl: this.expenseDateFormCtl\r\n    })\r\n\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.expenseId = params.expId\r\n      if (this.expenseId)\r\n        this.getExpense()\r\n    })\r\n\r\n    this.refNoFormCtl.disable()\r\n    this.expenseDateFormCtl.disable()\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public getExpense(): any {\r\n    this.http.get(ApiEndpoint.EXPENSES + \"/\" + this.expenseId).subscribe(data => {\r\n\r\n      this.expense = data[\"data\"]\r\n      this.setForm()\r\n    }, err => {\r\n      console.error(err)\r\n      if (err.error && err.error.apiMessage)\r\n        this.errorMessage = err.error.apiMessage.detail\r\n      else\r\n        this.errorMessage = err.message\r\n    })\r\n  }\r\n\r\n  public save() {\r\n\r\n    let expensePayload: IExpense = {\r\n\r\n      amount: this.amountFormCtl.value,\r\n      comments: this.commentsFormCtl.value,\r\n      expenseDate: this.expenseDateFormCtl.value,\r\n      expenseDetails: this.expenseDetailsFormCtl.value,\r\n      expenseType: this.expenseTypeFormCtl.value,\r\n      id: this.idFormCtl.value,\r\n      refNo: this.refNoFormCtl.value\r\n\r\n    }\r\n\r\n    this.saveOrUpdateHttpObservable(expensePayload).subscribe(data => {\r\n\r\n      this.router.navigate([\"/income-expense/expenses\"]);\r\n\r\n    }, err => {\r\n      console.error(err);\r\n      if (err.error && err.error.apiMessage)\r\n        this.errorMessage = err.error.apiMessage.detail;\r\n      else\r\n        this.errorMessage = err.message\r\n    })\r\n  }\r\n\r\n  private saveOrUpdateHttpObservable(expensePayload: IExpense) {\r\n    if (this.expenseId) {\r\n      return this.http.put(ApiEndpoint.EXPENSES + \"/\" + this.expenseId, expensePayload);\r\n    }\r\n    else {\r\n      return this.http.post(ApiEndpoint.EXPENSES, expensePayload);\r\n    }\r\n  }\r\n\r\n  public setForm() {\r\n\r\n    this.idFormCtl.setValue(this.expense.id)\r\n    this.refNoFormCtl.setValue(this.expense.refNo)\r\n    this.amountFormCtl.setValue(this.expense.amount)\r\n    this.expenseTypeFormCtl.setValue(this.expense.expenseType)\r\n    this.expenseDetailsFormCtl.setValue(this.expense.expenseDetails)\r\n    this.commentsFormCtl.setValue(this.expense.comments)\r\n    this.expenseDateFormCtl.setValue(this.expense.expenseDate)\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW5jb21lLWV4cGVuc2UvZXhwZW5zZS9leHBlbnNlLWxpc3QvZXhwZW5zZS1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"shadow form-min-height ml-3 mr-3 mt-1 pb-5\\\">\\r\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #f07a7a;color: #ffffff\\\" *ngIf=\\\"errorMessage\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <span>{{errorMessage}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #dddddd\\\">\\r\\n    <div class=\\\"col-md-6\\\" [ngStyle.lt-md]=\\\"{'text-align' : 'center'}\\\">\\r\\n      <span style=\\\"font-weight: bold; font-size: 14px; line-height: 35px;\\\">Expenses</span>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 text-right\\\" [ngStyle.lt-md]=\\\"{'text-align' : 'center'}\\\">\\r\\n      <button class=\\\"btn btn-save\\\" [routerLink]=\\\"['income-expense/expense-create']\\\">\\r\\n        <mat-icon>add</mat-icon>&nbsp;New Expense\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <!-- Employess -->\\r\\n    <div class=\\\"col-md-12 table-header mb-5\\\">\\r\\n      <!-- Table -->\\r\\n      <div class=\\\"no-shadow w-100\\\">\\r\\n        <table mat-table [dataSource]=\\\"expenseDataSource\\\" matSort>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"id\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\\r\\n            <td style=\\\"padding-left: 25px !important;\\\" mat-cell *matCellDef=\\\"let row; let i = index\\\">{{i+1}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"refNo\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Ref No.</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\" (click)=\\\"onClickRow(row.id)\\\">{{row.refNo}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"amount\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Amount</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.amount}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"expenseType\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Expense Type</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.expenseType}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"expenseDetails\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Expense Details</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.expenseDetails}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"comments\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Comments</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.comments}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"expenseDate\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Expense Date</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.expenseDate}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"action\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"text-right\\\" (click)=\\\"onDeleteRow(row.id)\\\">\\r\\n              <mat-icon style=\\\"color: firebrick; cursor: pointer;\\\">clear</mat-icon> &nbsp;\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"expenseColumns;sticky: true\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: expenseColumns ; let i = index;\\\">\\r\\n          </tr>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { IExpense } from 'src/app/model/income-expense.model';\r\nimport { MatTableDataSource } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiEndpoint } from 'src/app/model/apiEndpoint';\r\n\r\n@Component({\r\n  selector: 'app-expense-list',\r\n  templateUrl: './expense-list.component.html',\r\n  styleUrls: ['./expense-list.component.css']\r\n})\r\nexport class ExpenseListComponent implements OnInit {\r\n\r\n  public errorMessage: String;\r\n  public expenseColumns: string[] = [\"id\", \"refNo\", \"amount\", \"expenseType\", \"expenseDetails\", \"comments\", \"expenseDate\", \"action\"];\r\n  public expenseDataSource: MatTableDataSource<IExpense>;\r\n  public expenses: IExpense[] = [];\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.getExpenses();\r\n  }\r\n\r\n  private getExpenses() {\r\n\r\n    let resp;\r\n    this.http.get(ApiEndpoint.EXPENSES).subscribe(data => {\r\n\r\n      resp = data;\r\n      if (resp && !resp.apiMessage.error) {\r\n\r\n        this.expenses = resp.data;\r\n        this.expenseDataSource = new MatTableDataSource(this.expenses);\r\n\r\n        if (!this.expenses)\r\n          this.errorMessage = \"No expense found\";\r\n\r\n      } else {\r\n        this.errorMessage = resp.apiMessage.detail;\r\n      }\r\n\r\n    }, err => {\r\n      if (err.error && err.error.apiMessage)\r\n        this.errorMessage = err.error.apiMessage.detail;\r\n      else\r\n        this.errorMessage = err.message\r\n\r\n      console.error(err);\r\n    })\r\n\r\n  }\r\n\r\n  public onClickRow(expenseId: Number) {\r\n\r\n    this.router.navigate([\"/income-expense/expenses/\" + expenseId + \"/view\"]);\r\n\r\n  }\r\n\r\n  public onDeleteRow(expenseId: Number) {\r\n\r\n    this.http.delete(ApiEndpoint.EXPENSES + \"/\" + expenseId).subscribe(data => {\r\n      this.expenseDataSource = new MatTableDataSource([])\r\n      this.getExpenses();\r\n    }, err => {\r\n      console.error(err);\r\n      if (err.error && err.error.apiMessage)\r\n        this.errorMessage = err.error.apiMessage.detail;\r\n      else\r\n        this.errorMessage = err.message;\r\n    })\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW5jb21lLWV4cGVuc2UvZXhwZW5zZS9leHBlbnNlLXZpZXcvZXhwZW5zZS12aWV3LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"shadow form-min-height ml-3 mr-3 mt-1 pb-5\\\">\\r\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #dddddd\\\">\\r\\n    <div class=\\\"col-md-6\\\" [ngStyle.lt-md]=\\\"{'text-align' : 'center'}\\\">\\r\\n      <span style=\\\"font-weight: bold; font-size: 14px; line-height: 35px;\\\">Expense Details</span>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 text-right\\\" [ngStyle.lt-md]=\\\"{'text-align' : 'center'}\\\">\\r\\n      <button class=\\\"btn btn-save\\\" routerLink=\\\"/income-expense/expenses\\\">\\r\\n        <mat-icon>keyboard_arrow_left</mat-icon>&nbsp;Back\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-cancel\\\" (click)=\\\"delete()\\\">\\r\\n        <mat-icon>clear</mat-icon>&nbsp;Delete\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-edit\\\" (click)=\\\"edit()\\\">\\r\\n        <mat-icon>edit</mat-icon>&nbsp;Edit\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-save\\\" [routerLink]=\\\"['/income-expense/expense-create']\\\">\\r\\n        <mat-icon>add</mat-icon>&nbsp;New Admission\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #f07a7a;color: #ffffff\\\" *ngIf=\\\"errorMessage\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <span>{{errorMessage}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div [ngClass]=\\\"['pt-1','pr-5','pl-5']\\\" [ngClass.lt-md]=\\\"['p-0']\\\" *ngIf=\\\"expense\\\">\\r\\n\\r\\n    <div class=\\\"row pt-3\\\">\\r\\n\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <p style=\\\"font-weight: bold; font-size: 14px;\\\">Expense Info</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <p>Reference No. : {{expense.refNo}}</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <p>Amount : {{expense.amount}}</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <p>Expense Type : {{expense.expenseType}}</p>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <p>Expense Details : {{expense.expenseDetails}}</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <p>Expense Date : {{expense.comments}}</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <p>Comments : {{expense.expenseDate}}</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { IExpense } from 'src/app/model/income-expense.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ApiEndpoint } from 'src/app/model/apiEndpoint';\r\n\r\n@Component({\r\n  selector: 'app-expense-view',\r\n  templateUrl: './expense-view.component.html',\r\n  styleUrls: ['./expense-view.component.css']\r\n})\r\nexport class ExpenseViewComponent implements OnInit {\r\n\r\n  errorMessage: String;\r\n  expId: String;\r\n  expense: IExpense;\r\n\r\n  constructor(private http: HttpClient, private router: Router, private activatedRoute: ActivatedRoute) {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.expId = params.expId;\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getExpense();\r\n  }\r\n\r\n  getExpense() {\r\n\r\n    this.http.get(ApiEndpoint.EXPENSES + \"/\" + this.expId).subscribe(data => {\r\n\r\n      this.expense = data[\"data\"]\r\n\r\n    }, err => {\r\n      console.error(err);\r\n      if (err.error && err.error.apiMessage)\r\n        this.errorMessage = err.error.apiMessage.detail;\r\n      else\r\n        this.errorMessage = err.message;\r\n    })\r\n  }\r\n\r\n  delete() {\r\n\r\n    this.http.delete(ApiEndpoint.EXPENSES + \"/\" + this.expId).subscribe(data => {\r\n      this.router.navigate([\"/income-expense/expenses\"]);\r\n    }, err => {\r\n      console.error(err);\r\n      if (err.error && err.error.apiMessage)\r\n        this.errorMessage = err.error.apiMessage.detail;\r\n      else\r\n        this.errorMessage = err.message;\r\n    })\r\n  }\r\n\r\n  edit() {\r\n    this.router.navigate([\"/income-expense/expenses/\" + this.expId + \"/edit\"]);\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW5jb21lLWV4cGVuc2UvaW5jb21lL2luY29tZS1jcmVhdGUtZWRpdC9pbmNvbWUtY3JlYXRlLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"shadow form-min-height ml-3 mr-3 mt-1 pb-5\\\">\\r\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #dddddd\\\">\\r\\n    <div class=\\\"col-md-6\\\" [ngStyle.lt-md]=\\\"{'text-align' : 'center'}\\\">\\r\\n      <span style=\\\"font-weight: bold; font-size: 14px; line-height: 35px;\\\">Income</span>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 text-right\\\" [ngStyle.lt-md]=\\\"{'text-align' : 'center'}\\\">\\r\\n      <button class=\\\"btn btn-cancel\\\" routerLink=\\\"/income-expense/incomes\\\">\\r\\n        <mat-icon>clear</mat-icon>&nbsp;Cancel\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-save\\\" (click)=\\\"save()\\\" [disabled]='!incomeForm.valid'>\\r\\n        <mat-icon>save_alt</mat-icon>&nbsp;Save Income\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #f07a7a;color: #ffffff\\\" *ngIf=\\\"errorMessage\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <span>{{errorMessage}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div [ngClass]=\\\"['pt-1','pr-5','pl-5']\\\" [ngClass.lt-md]=\\\"['p-0']\\\">\\r\\n\\r\\n    <div class=\\\"row pt-3\\\">\\r\\n\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <p style=\\\"font-weight: bold; font-size: 14px;\\\">Income Info</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label>Reference No.</mat-label>\\r\\n          <input matInput placeholder=\\\"Placeholder\\\" [formControl]=\\\"refNoFormCtl\\\">\\r\\n          <mat-error *ngIf=\\\"refNoFormCtl.hasError('required')\\\">\\r\\n            Reference No. is <strong>required</strong>\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label>Amount</mat-label>\\r\\n          <input matInput placeholder=\\\"Placeholder\\\" [formControl]=\\\"amountFormCtl\\\">\\r\\n          <mat-error *ngIf=\\\"amountFormCtl.hasError('required')\\\">\\r\\n            Amount is <strong>required</strong>\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label>Income Type</mat-label>\\r\\n          <mat-select placeholder=\\\"Income Type\\\" [formControl]=\\\"incomeTypeFormCtl\\\">\\r\\n            <mat-option *ngFor=\\\"let option of incomeTypes\\\" [value]=\\\"option.value\\\">\\r\\n              {{option.value}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error *ngIf=\\\"incomeTypeFormCtl.hasError('required')\\\">\\r\\n            Income Type is <strong>required</strong>\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label>Income Details</mat-label>\\r\\n          <input matInput placeholder=\\\"Expense Details\\\" [formControl]=\\\"incomeDetailsFormCtl\\\">\\r\\n          <mat-error *ngIf=\\\"incomeDetailsFormCtl.hasError('required')\\\">\\r\\n            Income Details is <strong>required</strong>\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label>Income Date</mat-label>\\r\\n          <input matInput [matDatepicker]=\\\"expenseDate\\\" placeholder=\\\"Expense Date\\\" [formControl]=\\\"incomeDateFormCtl\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"expenseDate\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #expenseDate></mat-datepicker>\\r\\n          <mat-error *ngIf=\\\"incomeDateFormCtl.hasError('required')\\\">\\r\\n            Income Date is <strong>required</strong>\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label>Comments</mat-label>\\r\\n          <input matInput placeholder=\\\"Expense Details\\\" [formControl]=\\\"commentsFormCtl\\\">\\r\\n          <mat-error *ngIf=\\\"commentsFormCtl.hasError('required')\\\">\\r\\n            Comments is <strong>required</strong>\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { IExpense, ExpenseTypes, IIncome, IncomeTypes } from 'src/app/model/income-expense.model';\r\nimport { IKeyValue } from 'src/app/model/IKeyVal';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ApiEndpoint } from 'src/app/model/apiEndpoint';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-income-create-edit',\r\n  templateUrl: './income-create-edit.component.html',\r\n  styleUrls: ['./income-create-edit.component.css', '../../../../../assets/css/form-common.css']\r\n})\r\nexport class IncomeCreateEditComponent implements OnInit {\r\n\r\n  incomeId: number\r\n  errorMessage: String\r\n\r\n  incomeForm: FormGroup\r\n  income: IIncome\r\n  incomeTypes: IKeyValue[] = IncomeTypes\r\n\r\n  idFormCtl = new FormControl('', null)\r\n  refNoFormCtl = new FormControl('', null)\r\n  amountFormCtl = new FormControl('', Validators.required)\r\n  incomeTypeFormCtl = new FormControl('', Validators.required)\r\n  incomeDetailsFormCtl = new FormControl('', Validators.required)\r\n  commentsFormCtl = new FormControl('', null)\r\n  incomeDateFormCtl = new FormControl('', Validators.required)\r\n\r\n  constructor(private http: HttpClient, private router: Router, private activatedRoute: ActivatedRoute) {\r\n\r\n    this.incomeForm = new FormGroup({\r\n      refNoFormCtl: this.refNoFormCtl,\r\n      amountFormCtl: this.amountFormCtl,\r\n      incomeTypeFormCtl: this.incomeTypeFormCtl,\r\n      incomeDetailsFormCtl: this.incomeDetailsFormCtl,\r\n      commentsFormCtl: this.commentsFormCtl,\r\n      incomeDateFormCtl: this.incomeDateFormCtl\r\n    })\r\n\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.incomeId = params.incId\r\n      if (this.incomeId)\r\n        this.getIncome()\r\n    })\r\n\r\n    this.refNoFormCtl.disable()\r\n    this.incomeDateFormCtl.disable()\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public getIncome(): any {\r\n    this.http.get(ApiEndpoint.INCOMES + \"/\" + this.incomeId).subscribe(data => {\r\n\r\n      this.income = data[\"data\"]\r\n      this.setForm()\r\n    }, err => {\r\n      console.error(err)\r\n      if (err.error && err.error.apiMessage)\r\n        this.errorMessage = err.error.apiMessage.detail\r\n      else\r\n        this.errorMessage = err.message\r\n    })\r\n  }\r\n\r\n  public save() {\r\n\r\n    let incomePayload: IIncome = {\r\n\r\n      amount: this.amountFormCtl.value,\r\n      comments: this.commentsFormCtl.value,\r\n      incomeDate: this.incomeDateFormCtl.value,\r\n      incomeDetails: this.incomeDetailsFormCtl.value,\r\n      incomeType: this.incomeTypeFormCtl.value,\r\n      id: this.idFormCtl.value,\r\n      refNo: this.refNoFormCtl.value\r\n\r\n    }\r\n\r\n    this.saveOrUpdateHttpObservable(incomePayload).subscribe(data => {\r\n\r\n      this.router.navigate([\"/income-expense/incomes\"]);\r\n\r\n    }, err => {\r\n      console.error(err);\r\n      if (err.error && err.error.apiMessage)\r\n        this.errorMessage = err.error.apiMessage.detail;\r\n      else\r\n        this.errorMessage = err.message\r\n    })\r\n  }\r\n\r\n  private saveOrUpdateHttpObservable(incomePayload: IIncome) {\r\n\r\n    if (this.incomeId) {\r\n      return this.http.put(ApiEndpoint.INCOMES + \"/\" + this.incomeId, incomePayload);\r\n    }\r\n    else {\r\n      return this.http.post(ApiEndpoint.INCOMES, incomePayload);\r\n    }\r\n  }\r\n\r\n  public setForm() {\r\n\r\n    this.idFormCtl.setValue(this.income.id)\r\n    this.refNoFormCtl.setValue(this.income.refNo)\r\n    this.amountFormCtl.setValue(this.income.amount)\r\n    this.incomeTypeFormCtl.setValue(this.income.incomeType)\r\n    this.incomeDetailsFormCtl.setValue(this.income.incomeDetails)\r\n    this.commentsFormCtl.setValue(this.income.comments)\r\n    this.incomeDateFormCtl.setValue(this.income.incomeDate)\r\n  }\r\n\r\n}  \r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW5jb21lLWV4cGVuc2UvaW5jb21lL2luY29tZS1saXN0L2luY29tZS1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"shadow form-min-height ml-3 mr-3 mt-1 pb-5\\\">\\r\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #f07a7a;color: #ffffff\\\" *ngIf=\\\"errorMessage\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <span>{{errorMessage}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #dddddd\\\">\\r\\n    <div class=\\\"col-md-6\\\" [ngStyle.lt-md]=\\\"{'text-align' : 'center'}\\\">\\r\\n      <span style=\\\"font-weight: bold; font-size: 14px; line-height: 35px;\\\">Incomes</span>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 text-right\\\" [ngStyle.lt-md]=\\\"{'text-align' : 'center'}\\\">\\r\\n      <button class=\\\"btn btn-save\\\" [routerLink]=\\\"['/income-expense/income-create']\\\">\\r\\n        <mat-icon>add</mat-icon>&nbsp;New Income\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-md-12 table-header mb-5\\\">\\r\\n\\r\\n      <div class=\\\"no-shadow w-100\\\">\\r\\n        <table mat-table [dataSource]=\\\"incomeDataSource\\\" matSort>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"id\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\\r\\n            <td style=\\\"padding-left: 25px !important;\\\" mat-cell *matCellDef=\\\"let row; let i = index\\\">{{i+1}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"refNo\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Ref No.</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\" (click)=\\\"onClickRow(row.id)\\\">{{row.refNo}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"amount\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Amount</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.amount}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"incomeType\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Income Type</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.incomeType}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"incomeDetails\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Income Details</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.incomeDetails}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"comments\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Comments</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.comments}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"incomeDate\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Income Date</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.incomeDate}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"action\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"text-right\\\" (click)=\\\"onDeleteRow(row.id)\\\">\\r\\n              <mat-icon style=\\\"color: firebrick; cursor: pointer;\\\">clear</mat-icon> &nbsp;\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"incomeColumns;sticky: true\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: incomeColumns ; let i = index;\\\">\\r\\n          </tr>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material';\r\nimport { IIncome } from 'src/app/model/income-expense.model';\r\nimport { Router } from '@angular/router';\r\nimport { ApiEndpoint } from 'src/app/model/apiEndpoint';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-income-list',\r\n  templateUrl: './income-list.component.html',\r\n  styleUrls: ['./income-list.component.css']\r\n})\r\nexport class IncomeListComponent implements OnInit {\r\n\r\n  public errorMessage: String;\r\n  public incomeColumns: string[] = [\"id\", \"refNo\", \"amount\", \"incomeType\", \"incomeDetails\", \"comments\", \"incomeDate\", \"action\"];\r\n  public incomeDataSource: MatTableDataSource<IIncome>;\r\n  public incomes: IIncome[] = [];\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.getIncomes();\r\n  }\r\n\r\n  private getIncomes() {\r\n\r\n    let resp;\r\n    this.http.get(ApiEndpoint.INCOMES).subscribe(data => {\r\n\r\n      resp = data;\r\n      if (resp && !resp.apiMessage.error) {\r\n\r\n        this.incomes = resp.data;\r\n        this.incomeDataSource = new MatTableDataSource(this.incomes);\r\n\r\n        if (!this.incomes)\r\n          this.errorMessage = \"No income found\";\r\n\r\n      } else {\r\n        this.errorMessage = resp.apiMessage.detail;\r\n      }\r\n\r\n    }, err => {\r\n      if (err.error && err.error.apiMessage)\r\n        this.errorMessage = err.error.apiMessage.detail;\r\n      else\r\n        this.errorMessage = err.message\r\n\r\n      console.error(err);\r\n    })\r\n\r\n  }\r\n\r\n  public onClickRow(incomeId: Number) {\r\n\r\n    this.router.navigate([\"/income-expense/incomes/\" + incomeId + \"/view\"]);\r\n\r\n  }\r\n\r\n  public onDeleteRow(incomeId: Number) {\r\n\r\n    this.http.delete(ApiEndpoint.INCOMES + \"/\" + incomeId).subscribe(data => {\r\n      this.incomeDataSource = new MatTableDataSource([])\r\n      this.getIncomes();\r\n    }, err => {\r\n      console.error(err);\r\n      if (err.error && err.error.apiMessage)\r\n        this.errorMessage = err.error.apiMessage.detail;\r\n      else\r\n        this.errorMessage = err.message;\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW5jb21lLWV4cGVuc2UvaW5jb21lL2luY29tZS12aWV3L2luY29tZS12aWV3LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"shadow form-min-height ml-3 mr-3 mt-1 pb-5\\\">\\r\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #dddddd\\\">\\r\\n    <div class=\\\"col-md-6\\\" [ngStyle.lt-md]=\\\"{'text-align' : 'center'}\\\">\\r\\n      <span style=\\\"font-weight: bold; font-size: 14px; line-height: 35px;\\\">Income Details</span>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 text-right\\\" [ngStyle.lt-md]=\\\"{'text-align' : 'center'}\\\">\\r\\n      <button class=\\\"btn btn-save\\\" routerLink=\\\"/income-expense/incomes\\\">\\r\\n        <mat-icon>keyboard_arrow_left</mat-icon>&nbsp;Back\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-cancel\\\" (click)=\\\"delete()\\\">\\r\\n        <mat-icon>clear</mat-icon>&nbsp;Delete\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-edit\\\" (click)=\\\"edit()\\\">\\r\\n        <mat-icon>edit</mat-icon>&nbsp;Edit\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-save\\\" [routerLink]=\\\"['/income-expense/income-create']\\\">\\r\\n        <mat-icon>add</mat-icon>&nbsp;New Income\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #f07a7a;color: #ffffff\\\" *ngIf=\\\"errorMessage\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <span>{{errorMessage}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div [ngClass]=\\\"['pt-1','pr-5','pl-5']\\\" [ngClass.lt-md]=\\\"['p-0']\\\" *ngIf=\\\"income\\\">\\r\\n\\r\\n    <div class=\\\"row pt-3\\\">\\r\\n\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <p style=\\\"font-weight: bold; font-size: 14px;\\\">Income Info</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <p>Reference No. : {{income.refNo}}</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <p>Amount : {{income.amount}}</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <p>Income Type : {{income.incomeType}}</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <p>Income Details : {{income.incomeDetails}}</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <p>Income Date : {{income.comments}}</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <p>Comments : {{income.incomeDate}}</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { IIncome } from 'src/app/model/income-expense.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ApiEndpoint } from 'src/app/model/apiEndpoint';\r\n\r\n@Component({\r\n  selector: 'app-income-view',\r\n  templateUrl: './income-view.component.html',\r\n  styleUrls: ['./income-view.component.css']\r\n})\r\nexport class IncomeViewComponent implements OnInit {\r\n\r\n  errorMessage: String;\r\n  incomeId: String;\r\n  income: IIncome;\r\n\r\n  constructor(private http: HttpClient, private router: Router, private activatedRoute: ActivatedRoute) {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.incomeId = params.incId;\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getIncome();\r\n  }\r\n\r\n  getIncome() {\r\n\r\n    this.http.get(ApiEndpoint.INCOMES + \"/\" + this.incomeId).subscribe(data => {\r\n\r\n      this.income = data[\"data\"]\r\n\r\n    }, err => {\r\n      console.error(err);\r\n      if (err.error && err.error.apiMessage)\r\n        this.errorMessage = err.error.apiMessage.detail;\r\n      else\r\n        this.errorMessage = err.message;\r\n    })\r\n  }\r\n\r\n  delete() {\r\n\r\n    this.http.delete(ApiEndpoint.INCOMES + \"/\" + this.incomeId).subscribe(data => {\r\n      this.router.navigate([\"/income-expense/incomes\"]);\r\n    }, err => {\r\n      console.error(err);\r\n      if (err.error && err.error.apiMessage)\r\n        this.errorMessage = err.error.apiMessage.detail;\r\n      else\r\n        this.errorMessage = err.message;\r\n    })\r\n  }\r\n\r\n  edit() {\r\n    this.router.navigate([\"/income-expense/incomes/\" + this.incomeId + \"/edit\"]);\r\n  }\r\n\r\n}\r\n","import { IKeyValue } from \"./student.model\";\r\n\r\nexport interface IExpense {\r\n\r\n    id: Number\r\n    refNo: String\r\n    amount: Number\r\n    expenseType: String\r\n    expenseDetails: String\r\n    comments: String\r\n    expenseDate: String\r\n}\r\n\r\nexport interface IIncome {\r\n\r\n    id: Number\r\n    refNo: string\r\n    amount: Number\r\n    incomeType: String\r\n    incomeDetails: String\r\n    comments: String\r\n    incomeDate: String\r\n}\r\n\r\nexport const ExpenseTypes: IKeyValue[] = [\r\n\r\n    { key: \"MAINTENANCE\", value: \"Maintenance\" },\r\n    { key: \"SALARY\", value: \"Salary\" },\r\n    { key: \"CLASS_ROOM_MAINTENANCE\", value: \"Class room maintenance\" },\r\n    { key: \"LABORATORY_EQUIPEMENTS\", value: \"Laboratory Equipments\" },\r\n    { key: \"LIBRARY\", value: \"Library\" },\r\n    { key: \"WATER\", value: \"Water\" },\r\n    { key: \"ELECTRICITY_BILL\", value: \"Electricity bill\" },\r\n    { key: \"COMPUTER\", value: \"Computer\" },\r\n    { key: \"SCHOOL_BUILDING\", value: \"School building\" },\r\n    { key: \"GAME_AND_SPORT\", value: \"Games and sports\" },\r\n    { key: \"ANNUAL_FUNCTION\", value: \"Annual function\" },\r\n    { key: \"TEACHER_DAY_FUNCTION\", value: \"Teacher's day function\" },\r\n    { key: \"CHILDREN_DAY_FUNCTION\", value: \"Children's day function\" },\r\n    { key: \"OTHERS\", value: \"Others\" }\r\n]\r\n\r\nexport const IncomeTypes: IKeyValue[] = [\r\n\r\n    { key: \"ADMISSION\", value: \"Admission\" },\r\n    { key: \"FEE\", value: \"Fee\" },\r\n    { key: \"OTHERS\", value: \"Others\" }\r\n]","import { Routes, RouterModule } from '@angular/router';\r\nimport { ExpenseListComponent } from '../components/income-expense/expense/expense-list/expense-list.component';\r\nimport { ExpenseViewComponent } from '../components/income-expense/expense/expense-view/expense-view.component';\r\nimport { ExpenseCreateEditComponent } from '../components/income-expense/expense/expense-create-edit/expense-create-edit.component';\r\nimport { IncomeListComponent } from '../components/income-expense/income/income-list/income-list.component';\r\nimport { IncomeViewComponent } from '../components/income-expense/income/income-view/income-view.component';\r\nimport { IncomeCreateEditComponent } from '../components/income-expense/income/income-create-edit/income-create-edit.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from './material.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CustomDateModule } from '../components/shared/custom-date/custom-date.module';\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n  // Expense\r\n  { path: \"expenses\", component: ExpenseListComponent },\r\n  { path: \"expenses/:expId/view\", component: ExpenseViewComponent },\r\n  { path: \"expense-create\", component: ExpenseCreateEditComponent },\r\n  { path: \"expenses/:expId/edit\", component: ExpenseCreateEditComponent },\r\n\r\n  // Income\r\n  { path: \"incomes\", component: IncomeListComponent },\r\n  { path: \"incomes/:incId/view\", component: IncomeViewComponent },\r\n  { path: \"income-create\", component: IncomeCreateEditComponent },\r\n  { path: \"incomes/:incId/edit\", component: IncomeCreateEditComponent },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CustomDateModule\r\n  ],\r\n  declarations: [\r\n\r\n    ExpenseListComponent,\r\n    ExpenseViewComponent,\r\n    ExpenseCreateEditComponent,\r\n    IncomeCreateEditComponent,\r\n    IncomeListComponent,\r\n    IncomeViewComponent\r\n\r\n  ]\r\n})\r\nexport class IncomeExpenseModule { }\r\n"],"sourceRoot":""}