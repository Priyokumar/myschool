{"version":3,"sources":["webpack:///./src/app/components/user/change-password/change-password.component.css","webpack:///./src/app/components/user/change-password/change-password.component.html","webpack:///./src/app/components/user/change-password/change-password.component.ts","webpack:///./src/app/components/user/role/menu-dialog/menu-dialog.component.css","webpack:///./src/app/components/user/role/menu-dialog/menu-dialog.component.html","webpack:///./src/app/components/user/role/menu-dialog/menu-dialog.component.ts","webpack:///./src/app/components/user/role/menu-view-dialog/menu-view-dialog.component.css","webpack:///./src/app/components/user/role/menu-view-dialog/menu-view-dialog.component.html","webpack:///./src/app/components/user/role/menu-view-dialog/menu-view-dialog.component.ts","webpack:///./src/app/components/user/role/role-create-edit/role-create-edit.component.css","webpack:///./src/app/components/user/role/role-create-edit/role-create-edit.component.html","webpack:///./src/app/components/user/role/role-create-edit/role-create-edit.component.ts","webpack:///./src/app/components/user/role/role-list/role-list.component.css","webpack:///./src/app/components/user/role/role-list/role-list.component.html","webpack:///./src/app/components/user/role/role-list/role-list.component.ts","webpack:///./src/app/components/user/role/role-view/role-view.component.css","webpack:///./src/app/components/user/role/role-view/role-view.component.html","webpack:///./src/app/components/user/role/role-view/role-view.component.ts","webpack:///./src/app/components/user/user-audit/user-audit.component.css","webpack:///./src/app/components/user/user-audit/user-audit.component.html","webpack:///./src/app/components/user/user-audit/user-audit.component.ts","webpack:///./src/app/components/user/user/user-create-edit/user-create-edit.component.css","webpack:///./src/app/components/user/user/user-create-edit/user-create-edit.component.html","webpack:///./src/app/components/user/user/user-create-edit/user-create-edit.component.ts","webpack:///./src/app/components/user/user/user-list/user-list.component.css","webpack:///./src/app/components/user/user/user-list/user-list.component.html","webpack:///./src/app/components/user/user/user-list/user-list.component.ts","webpack:///./src/app/components/user/user/user-view/user-view.component.css","webpack:///./src/app/components/user/user/user-view/user-view.component.html","webpack:///./src/app/components/user/user/user-view/user-view.component.ts","webpack:///./src/app/model/security.ts","webpack:///./src/app/modules/security.module.ts"],"names":[],"mappings":"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","file":"modules-security-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci9jaGFuZ2UtcGFzc3dvcmQvY2hhbmdlLXBhc3N3b3JkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\r\\n  change-password works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.css']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci9yb2xlL21lbnUtZGlhbG9nL21lbnUtZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div style=\\\"height: 500px\\\">\\r\\n  <div class=\\\"dialg-header w-100\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6 text-left\\\">\\r\\n        <span class=\\\"lead\\\">Menu</span>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\">\\r\\n        <button class=\\\"btn btn-cancel mt-2\\\" (click)=\\\"cancel()\\\">\\r\\n          <mat-icon>clear</mat-icon>&nbsp;Cancel\\r\\n        </button>\\r\\n        <button class=\\\"btn btn-save mt-2\\\" (click)=\\\"add()\\\">\\r\\n          <mat-icon>add</mat-icon>&nbsp;Add\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row p-4\\\">\\r\\n\\r\\n    <div class=\\\"col-md-12 p-0\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <p style=\\\"font-weight: bold; font-size: 14px;\\\">Menu Info</p>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label>Menu</mat-label>\\r\\n            <mat-select placeholder=\\\"Menu\\\" [formControl]=\\\"idFctrl\\\">\\r\\n              <mat-option *ngFor=\\\"let option of menus\\\" [value]=\\\"option.id\\\">\\r\\n                {{option.title}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n            <mat-error *ngIf=\\\"idFctrl.hasError('required')\\\">\\r\\n              Menu is <strong>required</strong>\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label>Title</mat-label>\\r\\n            <input matInput placeholder=\\\"Title\\\" [formControl]=\\\"titleFctrl\\\">\\r\\n            <mat-error *ngIf=\\\"titleFctrl.hasError('required')\\\">\\r\\n              Title is <strong>required</strong>\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label>Order</mat-label>\\r\\n            <input matInput placeholder=\\\"Order\\\" [formControl]=\\\"orderFctrl\\\">\\r\\n            <mat-error *ngIf=\\\"orderFctrl.hasError('required')\\\">\\r\\n              Order is <strong>required</strong>\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label>Icon</mat-label>\\r\\n            <input matInput placeholder=\\\"Icon\\\" [formControl]=\\\"iconFctrl\\\">\\r\\n            <mat-error *ngIf=\\\"iconFctrl.hasError('required')\\\">\\r\\n              Icon is <strong>required</strong>\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n            <mat-label>Has Submenu</mat-label>\\r\\n            <mat-select placeholder=\\\"Menu\\\" [formControl]=\\\"hasSubmenuFctrl\\\">\\r\\n              <mat-option *ngFor=\\\"let option of hasSubMenus\\\" [value]=\\\"option.key\\\">\\r\\n                {{option.value}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n            <mat-error *ngIf=\\\"hasSubmenuFctrl.hasError('required')\\\">\\r\\n              Has Submenu is <strong>required</strong>\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-12 shadow-sm table-header mb-5\\\">\\r\\n      <div class=\\\"no-shadow\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-4\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n              <mat-label>Menu</mat-label>\\r\\n              <mat-select placeholder=\\\"Menu\\\" [formControl]=\\\"subMenuFctrl\\\" #submenuinput>\\r\\n                <mat-option *ngFor=\\\"let option of subMenusSelect\\\" [value]=\\\"option\\\">\\r\\n                  {{option.title}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error *ngIf=\\\"subMenuFctrl.hasError('required')\\\">\\r\\n                Menu is <strong>required</strong>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-4\\\">\\r\\n            <button class=\\\"btn btn-save mt-2\\\" (click)=\\\"addSubMenu()\\\">\\r\\n              <mat-icon>add</mat-icon>&nbsp;Add Submenu\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <table mat-table [dataSource]=\\\"subMenuDataSource\\\" matSort class=\\\"p\\\">\\r\\n\\r\\n          <ng-container matColumnDef=\\\"id\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row; let i = index\\\">{{i+1}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"title\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Title</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\">{{row.title}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"order\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Order</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.order}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"icon\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Icon</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.icon}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"action\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\\r\\n            <td mat-cell *matCellDef=\\\"let row; let i = index\\\" class=\\\"text-right\\\">\\r\\n              <mat-icon (click)=\\\"onDelete(i)\\\" style=\\\"color: firebrick\\\">close</mat-icon> &nbsp;\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"subMenuColumns;sticky: true\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: subMenuColumns ; let i = index;\\\">\\r\\n          </tr>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core'\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms'\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatTableDataSource } from '@angular/material'\r\nimport { IMenu } from 'src/app/model/security'\r\nimport { allSideNavs, SideNavServiceService } from 'src/app/service/side-nav-service.service';\r\n\r\n@Component({\r\n  selector: 'app-menu-dialog',\r\n  templateUrl: './menu-dialog.component.html',\r\n  styleUrls: ['./menu-dialog.component.css']\r\n})\r\nexport class MenuDialogComponent implements OnInit {\r\n\r\n  public actionMode = \"CREATE\"\r\n  public menuForm: FormGroup\r\n\r\n  public subMenuColumns: string[] = [\"id\", \"title\", \"order\", \"icon\", \"action\"]\r\n  public subMenuDataSource: MatTableDataSource<IMenu>\r\n  public subMenus: IMenu[] = []\r\n  public menus: IMenu[] = allSideNavs\r\n  public subMenusSelect: IMenu[] = []\r\n  public hasSubMenus = [{ key: true, value: \"Yes\" }, { key: false, value: \"No\" }]\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<MenuDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: IMenu, private sideNavService: SideNavServiceService) {\r\n\r\n    dialogRef.disableClose = true\r\n\r\n    this.menuForm = new FormGroup({\r\n      \"orderFctrl\": this.orderFctrl,\r\n      \"pathFctrl\": this.pathFctrl,\r\n      \"titleFctrl\": this.titleFctrl,\r\n      \"iconFctrl\": this.iconFctrl,\r\n      \"hasSubmenuFctrl\": this.hasSubmenuFctrl\r\n    })\r\n\r\n    if (data) {\r\n      this.actionMode = \"EDIT\"\r\n      this.orderFctrl.setValue(data.order)\r\n      this.pathFctrl.setValue(data.path)\r\n      this.titleFctrl.setValue(data.title)\r\n      this.iconFctrl.setValue(data.icon)\r\n      this.hasSubmenuFctrl.setValue(data.hasSubmenu)\r\n      this.subMenus = data.submenu\r\n      this.subMenuDataSource = new MatTableDataSource(this.subMenus)\r\n    }\r\n\r\n    this.idFctrl.valueChanges.subscribe(data => {\r\n\r\n      this.subMenus = []\r\n      this.subMenuDataSource = new MatTableDataSource(this.subMenus)\r\n      let menu = allSideNavs.find(menu => { return menu.id == data })\r\n      this.orderFctrl.setValue(menu.order)\r\n      this.pathFctrl.setValue(menu.path)\r\n      this.titleFctrl.setValue(menu.title)\r\n      this.iconFctrl.setValue(menu.icon)\r\n      this.hasSubmenuFctrl.setValue(menu.hasSubmenu)\r\n      this.subMenusSelect = menu.submenu\r\n\r\n      if (menu.hasSubmenu === false){\r\n        this.subMenuFctrl.setValidators(null)\r\n        this.subMenuFctrl.updateValueAndValidity()\r\n      }\r\n\r\n    })\r\n\r\n    this.orderFctrl.disable()\r\n    this.pathFctrl.disable()\r\n    this.titleFctrl.disable()\r\n    this.iconFctrl.disable()\r\n    this.hasSubmenuFctrl.disable()\r\n\r\n  }\r\n\r\n  idFctrl = new FormControl(null, Validators.required)\r\n  orderFctrl = new FormControl(null, Validators.required)\r\n  pathFctrl = new FormControl(null, Validators.required)\r\n  titleFctrl = new FormControl(null, Validators.required)\r\n  iconFctrl = new FormControl(null, Validators.required)\r\n  hasSubmenuFctrl = new FormControl(null, Validators.required)\r\n  subMenuFctrl = new FormControl(null, Validators.required)\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public add() {\r\n\r\n    let menu: IMenu = {\r\n      id: this.idFctrl.value,\r\n      icon: this.iconFctrl.value,\r\n      order: this.orderFctrl.value,\r\n      path: this.pathFctrl.value,\r\n      title: this.titleFctrl.value,\r\n      hasSubmenu: this.hasSubmenuFctrl.value,\r\n      submenu: this.subMenus,\r\n    }\r\n\r\n    this.dialogRef.close(menu)\r\n  }\r\n\r\n  public cancel() {\r\n    this.dialogRef.close()\r\n  }\r\n\r\n  onDelete(index: number) {\r\n    this.subMenusSelect.push(this.subMenus[index])\r\n    this.subMenus.splice(index, 1)\r\n    this.subMenuDataSource = new MatTableDataSource(this.subMenus)\r\n  }\r\n\r\n  addSubMenu() {\r\n\r\n    let subMenu = <IMenu>this.subMenuFctrl.value\r\n\r\n    let index = this.subMenus.findIndex(data => { return data.id == subMenu.id })\r\n    if (index < 0 && subMenu.id) {\r\n      this.subMenus.push(subMenu)\r\n      this.subMenuDataSource = new MatTableDataSource(this.subMenus)\r\n    }\r\n    this.subMenusSelect = this.subMenusSelect.filter(data => { return data.id != subMenu.id })\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci9yb2xlL21lbnUtdmlldy1kaWFsb2cvbWVudS12aWV3LWRpYWxvZy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div style=\\\"height: 500px\\\">\\r\\n  <div class=\\\"dialg-header w-100\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6 text-left\\\">\\r\\n        <span class=\\\"lead\\\">Menu</span>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\">\\r\\n        <button class=\\\"btn btn-cancel mt-2\\\" (click)=\\\"cancel()\\\">\\r\\n          <mat-icon>clear</mat-icon>&nbsp;Cancel\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row p-4\\\">\\r\\n\\r\\n    <div class=\\\"col-md-12 p-0\\\">\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"menu\\\">\\r\\n\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <p style=\\\"font-weight: bold; font-size: 14px;\\\">Menu Info</p>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          Title : {{menu.title}}\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          Order : {{menu.order}}\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          Icon : {{menu.icon}}\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          Has Submenu : {{menu.hasSubmenu}}\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-12 shadow-sm table-header mb-5\\\">\\r\\n      <p class=\\\"p-2\\\"><b>Sub menus</b></p>\\r\\n      <div class=\\\"no-shadow\\\">\\r\\n        <table mat-table [dataSource]=\\\"subMenuDataSource\\\" matSort class=\\\"p\\\">\\r\\n\\r\\n          <ng-container matColumnDef=\\\"id\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row; let i = index\\\">{{i+1}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"title\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Title</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\">{{row.title}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"order\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Order</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.order}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"icon\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Icon</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.icon}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"subMenuColumns;sticky: true\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: subMenuColumns ; let i = index;\\\">\\r\\n          </tr>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { IMenu } from 'src/app/model/security';\r\nimport { MatTableDataSource, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-menu-view-dialog',\r\n  templateUrl: './menu-view-dialog.component.html',\r\n  styleUrls: ['./menu-view-dialog.component.css']\r\n})\r\nexport class MenuViewDialogComponent implements OnInit {\r\n\r\n\r\n  public subMenuColumns: string[] = [\"id\", \"title\", \"order\", \"icon\"]\r\n  public subMenuDataSource: MatTableDataSource<IMenu>\r\n  public subMenus: IMenu[] = []\r\n  menu: IMenu\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<MenuViewDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: IMenu) {\r\n\r\n    this.subMenus = data.submenu\r\n    this.subMenuDataSource = new MatTableDataSource(this.subMenus)\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  public cancel() {\r\n    this.dialogRef.close()\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci9yb2xlL3JvbGUtY3JlYXRlLWVkaXQvcm9sZS1jcmVhdGUtZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"shadow form-min-height ml-3 mr-3 mt-1 pb-5\\\">\\r\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #dddddd\\\">\\r\\n    <div class=\\\"col-md-6\\\" [ngStyle.lt-md]=\\\"{'text-align' : 'center'}\\\">\\r\\n      <span style=\\\"font-weight: bold; font-size: 14px; line-height: 35px;\\\">Role</span>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 text-right\\\" [ngStyle.lt-md]=\\\"{'text-align' : 'center'}\\\">\\r\\n      <button class=\\\"btn btn-cancel\\\" routerLink=\\\"/security/roles\\\">\\r\\n        <mat-icon>clear</mat-icon>&nbsp;Cancel\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-save\\\" (click)=\\\"save()\\\" [disabled]='!roleForm.valid'>\\r\\n        <mat-icon>save_alt</mat-icon>&nbsp;Save Role\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #f07a7a;color: #ffffff\\\" *ngIf=\\\"errorMessage\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <span>{{errorMessage}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div [ngClass]=\\\"['pt-1','pr-5','pl-5']\\\" [ngClass.lt-md]=\\\"['p-0']\\\">\\r\\n\\r\\n    <div class=\\\"row pt-3\\\">\\r\\n\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <p style=\\\"font-weight: bold; font-size: 14px;\\\">Role Info</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label>Name</mat-label>\\r\\n          <input matInput placeholder=\\\"Name\\\" [formControl]=\\\"nameFormCtl\\\">\\r\\n          <mat-error *ngIf=\\\"nameFormCtl.hasError('required')\\\">\\r\\n            Name is <strong>required</strong>\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label>Description</mat-label>\\r\\n          <input matInput placeholder=\\\"Description\\\" [formControl]=\\\"descFormCtl\\\">\\r\\n          <mat-error *ngIf=\\\"descFormCtl.hasError('required')\\\">\\r\\n            Description is <strong>required</strong>\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <!-- Menus -->\\r\\n      <div class=\\\"col-md-12 table-header mb-5\\\">\\r\\n        <div class=\\\"row p-2\\\">\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <span style=\\\"font-weight: bold; font-size: 14px;\\\">Menus</span>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6 text-right\\\">\\r\\n            <button class=\\\"btn btn-save\\\" (click)=\\\"addMenu()\\\">\\r\\n              <mat-icon>add_circle</mat-icon>&nbsp;Add\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- Table -->\\r\\n        <div class=\\\"no-shadow\\\">\\r\\n          <table mat-table [dataSource]=\\\"menuDataSource\\\" matSort class=\\\"\\\">\\r\\n\\r\\n            <ng-container matColumnDef=\\\"id\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\\r\\n              <td mat-cell *matCellDef=\\\"let row; let i = index\\\">{{i+1}}</td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"title\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Title</th>\\r\\n              <td mat-cell *matCellDef=\\\"let row\\\">{{row.title}}</td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"order\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Order</th>\\r\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.order}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"icon\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Icon</th>\\r\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.icon}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"hasSubmenu\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Has Submenu</th>\\r\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.hasSubmenu}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"action\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\\r\\n              <td mat-cell *matCellDef=\\\"let row; let i = index\\\" class=\\\"text-right\\\">\\r\\n                <mat-icon (click)=\\\"onDelete(i)\\\" style=\\\"color: firebrick\\\">close</mat-icon> &nbsp;\\r\\n                <mat-icon (click)=\\\"edit(i,row)\\\" style=\\\"color: lightseagreen\\\">edit</mat-icon>\\r\\n              </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"menuColumns;sticky: true\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: menuColumns ; let i = index;\\\">\\r\\n            </tr>\\r\\n          </table>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { IRole, IMenu } from 'src/app/model/security';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ApiEndpoint } from 'src/app/model/apiEndpoint';\r\nimport { MatTableDataSource, MatDialog } from '@angular/material';\r\nimport { MenuDialogComponent } from '../menu-dialog/menu-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-role-create-edit',\r\n  templateUrl: './role-create-edit.component.html',\r\n  styleUrls: ['./role-create-edit.component.css', '../../../../../assets/css/form-common.css']\r\n})\r\nexport class RoleCreateEditComponent implements OnInit {\r\n\r\n  roleId: number\r\n  errorMessage: String\r\n\r\n  public menuColumns: string[] = [\"id\", \"title\", \"order\", \"icon\", \"hasSubmenu\", \"action\"];\r\n  public menuDataSource: MatTableDataSource<IMenu>;\r\n  public menus: IMenu[] = [];\r\n\r\n  roleForm: FormGroup\r\n  role: IRole\r\n  sideNavs: IMenu[] = []\r\n  idFormCtl = new FormControl('', null)\r\n  nameFormCtl = new FormControl('', Validators.required)\r\n  descFormCtl = new FormControl('', Validators.required)\r\n\r\n  constructor(private http: HttpClient, private router: Router, private activatedRoute: ActivatedRoute, private dialog: MatDialog) {\r\n\r\n    this.roleForm = new FormGroup({\r\n      nameFormCtl: this.nameFormCtl,\r\n      descFormCtl: this.descFormCtl\r\n    })\r\n\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.roleId = params.roleId\r\n      if (this.roleId)\r\n        this.getRoleId()\r\n    })\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public getRoleId(): any {\r\n    this.http.get(ApiEndpoint.ROLES + \"/\" + this.roleId).subscribe(data => {\r\n\r\n      this.role = data[\"data\"]\r\n      this.menus = this.role.menus\r\n      this.menuDataSource = new MatTableDataSource(this.menus)\r\n      this.setForm()\r\n    }, err => {\r\n      console.error(err)\r\n      if (err.error && err.error.apiMessage)\r\n        this.errorMessage = err.error.apiMessage.detail\r\n      else\r\n        this.errorMessage = err.message\r\n    })\r\n  }\r\n\r\n  public save() {\r\n\r\n    let rolePayload: IRole = {\r\n\r\n      id: this.idFormCtl.value,\r\n      name: this.nameFormCtl.value,\r\n      desc: this.descFormCtl.value,\r\n      menus: this.menus\r\n\r\n\r\n    }\r\n\r\n    this.saveOrUpdateHttpObservable(rolePayload).subscribe(data => {\r\n\r\n      this.router.navigate([\"/security/roles\"]);\r\n\r\n    }, err => {\r\n      console.error(err);\r\n      if (err.error && err.error.apiMessage)\r\n        this.errorMessage = err.error.apiMessage.detail;\r\n      else\r\n        this.errorMessage = err.message\r\n    })\r\n  }\r\n\r\n  private saveOrUpdateHttpObservable(rolePayload: IRole) {\r\n\r\n    if (this.roleId) {\r\n      return this.http.put(ApiEndpoint.ROLES + \"/\" + this.roleId, rolePayload);\r\n    }\r\n    else {\r\n      return this.http.post(ApiEndpoint.ROLES, rolePayload);\r\n    }\r\n  }\r\n\r\n  public setForm() {\r\n\r\n    this.idFormCtl.setValue(this.role.id)\r\n    this.nameFormCtl.setValue(this.role.name)\r\n    this.descFormCtl.setValue(this.role.desc)\r\n  }\r\n\r\n  public addMenu() {\r\n    let dialogRef = this.dialog.open(MenuDialogComponent, { width: '60%' })\r\n      .afterClosed().subscribe(data => {\r\n        if (data) {\r\n          if (!this.menus)\r\n            this.menus = []\r\n          this.menus.push(data);\r\n          this.menuDataSource = new MatTableDataSource(this.menus);\r\n        }\r\n      });\r\n  }\r\n\r\n  public onDelete(index: number) {\r\n    this.menus.splice(index, 1);\r\n    this.menuDataSource = new MatTableDataSource(this.menus);\r\n  }\r\n\r\n  public edit(index: number, menu: IMenu) {\r\n    let dialogRef = this.dialog.open(MenuDialogComponent, { width: '60%', data: menu })\r\n      .afterClosed().subscribe(data => {\r\n        if (data) {\r\n          this.menus[index] = data;\r\n          this.menuDataSource = new MatTableDataSource(this.menus);\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci9yb2xlL3JvbGUtbGlzdC9yb2xlLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"shadow form-min-height ml-3 mr-3 mt-1 pb-5\\\">\\r\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #f07a7a;color: #ffffff\\\" *ngIf=\\\"errorMessage\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <span>{{errorMessage}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #dddddd\\\">\\r\\n    <div class=\\\"col-md-6\\\" [ngStyle.lt-md]=\\\"{'text-align' : 'center'}\\\">\\r\\n      <span style=\\\"font-weight: bold; font-size: 14px; line-height: 35px;\\\">Roles</span>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 text-right\\\" [ngStyle.lt-md]=\\\"{'text-align' : 'center'}\\\">\\r\\n      <button class=\\\"btn btn-save\\\" [routerLink]=\\\"['/security/role-create']\\\">\\r\\n        <mat-icon>add</mat-icon>&nbsp;New Role\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-md-12 table-header mb-5\\\">\\r\\n\\r\\n      <div class=\\\"no-shadow w-100\\\">\\r\\n        <table mat-table [dataSource]=\\\"roleDataSource\\\" matSort>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"id\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\\r\\n            <td style=\\\"padding-left: 25px !important;\\\" mat-cell *matCellDef=\\\"let row; let i = index\\\">{{i+1}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"name\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\" (click)=\\\"onClickRow(row.id)\\\">{{row.name}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"desc\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Description</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\" (click)=\\\"onClickRow(row.id)\\\">{{row.desc}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"action\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"text-right\\\" (click)=\\\"onDeleteRow(row.id)\\\">\\r\\n              <mat-icon style=\\\"color: firebrick; cursor: pointer;\\\">clear</mat-icon> &nbsp;\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"roleColumns;sticky: true\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: roleColumns ; let i = index;\\\">\\r\\n          </tr>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { IRole } from 'src/app/model/security';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatTableDataSource } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\nimport { ApiEndpoint } from 'src/app/model/apiEndpoint';\r\n\r\n@Component({\r\n  selector: 'app-role-list',\r\n  templateUrl: './role-list.component.html',\r\n  styleUrls: ['./role-list.component.css']\r\n})\r\nexport class RoleListComponent implements OnInit {\r\n\r\n\r\n  public errorMessage: String;\r\n  public roleColumns: string[] = [\"id\", \"name\", \"desc\", \"action\"];\r\n  public roleDataSource: MatTableDataSource<IRole>;\r\n  public roles: IRole[] = [];\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.getRoles();\r\n  }\r\n\r\n  private getRoles() {\r\n\r\n    let resp;\r\n    this.http.get(ApiEndpoint.ROLES).subscribe(data => {\r\n\r\n      resp = data;\r\n      if (resp && !resp.apiMessage.error) {\r\n\r\n        this.roles = resp.data;\r\n        this.roleDataSource = new MatTableDataSource(this.roles);\r\n\r\n        if (!this.roles)\r\n          this.errorMessage = \"No role found\";\r\n\r\n      } else {\r\n        this.errorMessage = resp.apiMessage.detail;\r\n      }\r\n\r\n    }, err => {\r\n      if (err.error && err.error.apiMessage)\r\n        this.errorMessage = err.error.apiMessage.detail;\r\n      else\r\n        this.errorMessage = err.message\r\n\r\n      console.error(err);\r\n    })\r\n\r\n  }\r\n\r\n  public onClickRow(roleId: Number) {\r\n\r\n    this.router.navigate([\"/security/roles/\" + roleId + \"/view\"]);\r\n\r\n  }\r\n\r\n  public onDeleteRow(roleId: Number) {\r\n\r\n    this.http.delete(ApiEndpoint.ROLES + \"/\" + roleId).subscribe(data => {\r\n      this.roleDataSource = new MatTableDataSource([])\r\n      this.getRoles();\r\n    }, err => {\r\n      console.error(err);\r\n      if (err.error && err.error.apiMessage)\r\n        this.errorMessage = err.error.apiMessage.detail;\r\n      else\r\n        this.errorMessage = err.message;\r\n    })\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci9yb2xlL3JvbGUtdmlldy9yb2xlLXZpZXcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"shadow form-min-height ml-3 mr-3 mt-1 pb-5\\\">\\r\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #dddddd\\\">\\r\\n    <div class=\\\"col-md-6\\\" [ngStyle.lt-md]=\\\"{'text-align' : 'center'}\\\">\\r\\n      <span style=\\\"font-weight: bold; font-size: 14px; line-height: 35px;\\\">Role Details</span>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 text-right\\\" [ngStyle.lt-md]=\\\"{'text-align' : 'center'}\\\">\\r\\n      <button class=\\\"btn btn-save\\\" routerLink=\\\"/security/roles\\\">\\r\\n        <mat-icon>keyboard_arrow_left</mat-icon>&nbsp;Back\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-cancel\\\" (click)=\\\"delete()\\\">\\r\\n        <mat-icon>clear</mat-icon>&nbsp;Delete\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-edit\\\" (click)=\\\"edit()\\\">\\r\\n        <mat-icon>edit</mat-icon>&nbsp;Edit\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-save\\\" [routerLink]=\\\"['/security/role-create']\\\">\\r\\n        <mat-icon>add</mat-icon>&nbsp;New Role\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #f07a7a;color: #ffffff\\\" *ngIf=\\\"errorMessage\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <span>{{errorMessage}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div [ngClass]=\\\"['pt-1','pr-5','pl-5']\\\" [ngClass.lt-md]=\\\"['p-0']\\\" *ngIf=\\\"role\\\">\\r\\n\\r\\n    <div class=\\\"row pt-3\\\">\\r\\n\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <p style=\\\"font-weight: bold; font-size: 14px;\\\">Role Info</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <p>Name : {{role.name}}</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <p>Description : {{role.desc}}</p>\\r\\n      </div>\\r\\n\\r\\n      <!-- Menus -->\\r\\n      <div class=\\\"col-md-12 table-header mb-5\\\">\\r\\n        <div class=\\\"row p-2\\\">\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <span style=\\\"font-weight: bold; font-size: 14px;\\\">Menus</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- Table -->\\r\\n        <div class=\\\"no-shadow\\\">\\r\\n          <table mat-table [dataSource]=\\\"menuDataSource\\\" matSort class=\\\"\\\">\\r\\n\\r\\n            <ng-container matColumnDef=\\\"id\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\\r\\n              <td mat-cell *matCellDef=\\\"let row; let i = index\\\">{{i+1}}</td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"title\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Title</th>\\r\\n              <td mat-cell *matCellDef=\\\"let row\\\">{{row.title}}</td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"order\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Order</th>\\r\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.order}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"icon\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Icon</th>\\r\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.icon}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"hasSubmenu\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Has Submenu</th>\\r\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.hasSubmenu}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"menuColumns;sticky: true\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: menuColumns ; let i = index;\\\" (click)=\\\"onClickRow(row)\\\">\\r\\n            </tr>\\r\\n          </table>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { IRole, IMenu } from 'src/app/model/security';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ApiEndpoint } from 'src/app/model/apiEndpoint';\r\nimport { MatTableDataSource, MatDialog } from '@angular/material';\r\nimport { MenuDialogComponent } from '../menu-dialog/menu-dialog.component';\r\nimport { MenuViewDialogComponent } from '../menu-view-dialog/menu-view-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-role-view',\r\n  templateUrl: './role-view.component.html',\r\n  styleUrls: ['./role-view.component.css']\r\n})\r\nexport class RoleViewComponent implements OnInit {\r\n\r\n  errorMessage: String;\r\n  roleId: String;\r\n  role: IRole;\r\n\r\n  public menuColumns: string[] = [\"id\", \"title\", \"order\", \"icon\", \"hasSubmenu\"];\r\n  public menuDataSource: MatTableDataSource<IMenu>;\r\n  public menus: IMenu[] = [];\r\n\r\n  constructor(private http: HttpClient, private router: Router, private activatedRoute: ActivatedRoute,\r\n    private dialog: MatDialog) {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.roleId = params.roleId;\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getRole();\r\n  }\r\n\r\n  getRole() {\r\n\r\n    this.http.get(ApiEndpoint.ROLES + \"/\" + this.roleId).subscribe(data => {\r\n\r\n      this.role = data[\"data\"]\r\n      this.menus = this.role.menus\r\n      this.menuDataSource = new MatTableDataSource(this.menus)\r\n\r\n    }, err => {\r\n      console.error(err);\r\n      if (err.error && err.error.apiMessage)\r\n        this.errorMessage = err.error.apiMessage.detail;\r\n      else\r\n        this.errorMessage = err.message;\r\n    })\r\n  }\r\n\r\n  delete() {\r\n\r\n    this.http.delete(ApiEndpoint.ROLES + \"/\" + this.roleId).subscribe(data => {\r\n      this.router.navigate([\"/security/roles\"]);\r\n    }, err => {\r\n      console.error(err);\r\n      if (err.error && err.error.apiMessage)\r\n        this.errorMessage = err.error.apiMessage.detail;\r\n      else\r\n        this.errorMessage = err.message;\r\n    })\r\n  }\r\n\r\n  edit() {\r\n    this.router.navigate([\"/security/roles/\" + this.roleId + \"/edit\"]);\r\n  }\r\n\r\n  onClickRow(menu: IMenu) {\r\n    let dialogRef = this.dialog.open(MenuViewDialogComponent, { width: '60%', data: menu })\r\n      .afterClosed().subscribe(data => {\r\n        if (data) {\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci91c2VyLWF1ZGl0L3VzZXItYXVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\r\\n  user-audit works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-audit',\r\n  templateUrl: './user-audit.component.html',\r\n  styleUrls: ['./user-audit.component.css']\r\n})\r\nexport class UserAuditComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci91c2VyL3VzZXItY3JlYXRlLWVkaXQvdXNlci1jcmVhdGUtZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"shadow form-min-height ml-3 mr-3 mt-1 pb-5\\\">\\r\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #dddddd\\\">\\r\\n    <div class=\\\"col-md-6\\\" [ngStyle.lt-md]=\\\"{'text-align' : 'center'}\\\">\\r\\n      <span style=\\\"font-weight: bold; font-size: 14px; line-height: 35px;\\\">Add User</span>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 text-right\\\" [ngStyle.lt-md]=\\\"{'text-align' : 'center'}\\\">\\r\\n      <button class=\\\"btn btn-cancel\\\" routerLink=\\\"/security/users\\\">\\r\\n        <mat-icon>clear</mat-icon>&nbsp;Cancel\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-save\\\" (click)=\\\"save()\\\" [disabled]='!userForm.valid'>\\r\\n        <mat-icon>save_alt</mat-icon>&nbsp;Add User\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #f07a7a;color: #ffffff\\\" *ngIf=\\\"errorMessage\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <span>{{errorMessage}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div [ngClass]=\\\"['pt-1','pr-5','pl-5']\\\" [ngClass.lt-md]=\\\"['p-0']\\\">\\r\\n\\r\\n    <div class=\\\"row pt-3\\\">\\r\\n\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <p style=\\\"font-weight: bold; font-size: 14px;\\\">User Info</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\" *ngIf=\\\"!userId\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label>Employee</mat-label>\\r\\n          <mat-select #selectedEmployee placeholder=\\\"Employee\\\" [formControl]=\\\"employeeFormCtl\\\" (selectionChange)=\\\"onSelectEmployee(selectedEmployee.value)\\\">\\r\\n            <mat-option *ngFor=\\\"let option of employees\\\" [value]=\\\"option.id\\\">\\r\\n              {{option.firstName}} {{option.middleName}} {{option.lastName}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error *ngIf=\\\"roleFormCtl.hasError('required')\\\">\\r\\n            Role is <strong>required</strong>\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label>User Name</mat-label>\\r\\n          <input matInput placeholder=\\\"User Name\\\" [formControl]=\\\"userNameFormCtl\\\">\\r\\n          <mat-error *ngIf=\\\"userNameFormCtl.hasError('required')\\\">\\r\\n            User Name is <strong>required</strong>\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label>Firt Name</mat-label>\\r\\n          <input matInput placeholder=\\\"Firt Name\\\" [formControl]=\\\"firstNameFormCtl\\\" readonly=\\\"readonly\\\">\\r\\n          <mat-error *ngIf=\\\"firstNameFormCtl.hasError('required')\\\">\\r\\n            Firt Name is <strong>required</strong>\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label>Last Name</mat-label>\\r\\n          <input matInput placeholder=\\\"Last Name\\\" [formControl]=\\\"lastNameFormCtl\\\" readonly=\\\"readonly\\\">\\r\\n          <mat-error *ngIf=\\\"lastNameFormCtl.hasError('required')\\\">\\r\\n            Last Name is <strong>required</strong>\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label>Email</mat-label>\\r\\n          <input matInput placeholder=\\\"Firt Name\\\" [formControl]=\\\"emailFormCtl\\\" readonly=\\\"readonly\\\">\\r\\n          <mat-error *ngIf=\\\"emailFormCtl.hasError('required')\\\">\\r\\n            Email is <strong>required</strong>\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label>Mobile Number</mat-label>\\r\\n          <input matInput placeholder=\\\"Mobile Number\\\" [formControl]=\\\"mobileFormCtl\\\" readonly=\\\"readonly\\\">\\r\\n          <mat-error *ngIf=\\\"mobileFormCtl.hasError('required')\\\">\\r\\n            Mobile Number is <strong>required</strong>\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label>Status</mat-label>\\r\\n          <mat-select placeholder=\\\"Status\\\" [formControl]=\\\"statusFormCtl\\\">\\r\\n            <mat-option *ngFor=\\\"let option of userStatuses\\\" [value]=\\\"option\\\">\\r\\n              {{option}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error *ngIf=\\\"roleFormCtl.hasError('required')\\\">\\r\\n            Status is <strong>required</strong>\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"p-3\\\" style=\\\"border: 1px solid #c6c6c6; border-radius: 5px\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-3 p-0\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Roles</mat-label>\\r\\n                <mat-select placeholder=\\\"Roles\\\" [formControl]=\\\"roleFormCtl\\\">\\r\\n                  <mat-option *ngFor=\\\"let option of roles\\\" [value]=\\\"option\\\">\\r\\n                    {{option.name}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n                <mat-error *ngIf=\\\"roleFormCtl.hasError('required')\\\">\\r\\n                  Role is <strong>required</strong>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1 mt-1 p-0\\\">\\r\\n              <button class=\\\"btn btn-save mt-2 w-100\\\" (click)=\\\"addRole()\\\">\\r\\n                <mat-icon>add</mat-icon>\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n          <p><b>Selected Roles</b></p>\\r\\n          <hr>\\r\\n          <mat-chip-list>\\r\\n            <mat-chip color=\\\"primary\\\" selected *ngFor=\\\"let addedRole of addedRoles\\\" [removable]=\\\"true\\\" (removed)=\\\"remove(addedRole)\\\">{{addedRole.name}}\\r\\n              <mat-icon matChipRemove>cancel</mat-icon>\\r\\n            </mat-chip>\\r\\n          </mat-chip-list>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { IUser, IRole, UserStatuses } from 'src/app/model/security';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ApiEndpoint } from 'src/app/model/apiEndpoint';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { IEmployee } from 'src/app/model/employeeModels';\r\n\r\n@Component({\r\n  selector: 'app-user-create-edit',\r\n  templateUrl: './user-create-edit.component.html',\r\n  styleUrls: ['./user-create-edit.component.css', '../../../../../assets/css/form-common.css']\r\n})\r\nexport class UserCreateEditComponent implements OnInit {\r\n\r\n  userId: number\r\n  errorMessage: String\r\n  userStatuses = UserStatuses\r\n\r\n  addedRoles: IRole[] = []\r\n\r\n  userForm: FormGroup\r\n  user: IUser\r\n  roles: IRole[] = []\r\n  employees: IEmployee[] = []\r\n\r\n  idFormCtl = new FormControl('', null)\r\n  userNameFormCtl = new FormControl('', Validators.required)\r\n  firstNameFormCtl = new FormControl('', Validators.required)\r\n  lastNameFormCtl = new FormControl('', Validators.required)\r\n  emailFormCtl = new FormControl('', Validators.required)\r\n  mobileFormCtl = new FormControl('', Validators.required)\r\n  linkedIdFormCtl = new FormControl('', Validators.required)\r\n  statusFormCtl = new FormControl('', null)\r\n  roleFormCtl = new FormControl('', Validators.required)\r\n  employeeFormCtl = new FormControl('', Validators.required)\r\n\r\n  constructor(private http: HttpClient, private router: Router, private activatedRoute: ActivatedRoute) {\r\n\r\n    this.userForm = new FormGroup({\r\n\r\n      userNameFormCtl: this.userNameFormCtl,\r\n      firstNameFormCtl: this.firstNameFormCtl,\r\n      lastNameFormCtl: this.lastNameFormCtl,\r\n      emailFormCtl: this.emailFormCtl,\r\n      employeeFormCtl: this.employeeFormCtl\r\n\r\n    })\r\n\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.userId = params.uid\r\n      if (this.userId) {\r\n        this.getUserId()\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    if (!this.userId) {\r\n      this.statusFormCtl.disable()\r\n    }\r\n\r\n    this.getEmployees()\r\n    this.getRoles()\r\n  }\r\n\r\n  private getRoles() {\r\n\r\n    this.http.get(ApiEndpoint.ROLES).subscribe(data => {\r\n      this.roles = data[\"data\"];\r\n    }, err => {\r\n      if (err.error && err.error.apiMessage)\r\n        this.errorMessage = err.error.apiMessage.detail\r\n      else\r\n        this.errorMessage = err.message\r\n      console.error(err);\r\n    })\r\n  }\r\n\r\n  public getUserId(): any {\r\n    this.http.get(ApiEndpoint.USERS + \"/\" + this.userId).subscribe(data => {\r\n      this.user = data[\"data\"]\r\n      this.setForm()\r\n    }, err => {\r\n      console.error(err)\r\n      if (err.error && err.error.apiMessage)\r\n        this.errorMessage = err.error.apiMessage.detail\r\n      else\r\n        this.errorMessage = err.message\r\n    })\r\n  }\r\n\r\n  private getEmployees() {\r\n    this.http.get(ApiEndpoint.EMPLOYEES).subscribe(data => {\r\n      this.employees = data[\"data\"];\r\n      let employee = this.employees.find(elmnt => { return elmnt.id == this.user.linkedId })\r\n      this.employeeFormCtl.setValue(employee.id)\r\n    }, err => {\r\n      if (err.error && err.error.apiMessage)\r\n        this.errorMessage = err.error.apiMessage.detail\r\n      else\r\n        this.errorMessage = err.message\r\n      console.error(err)\r\n    })\r\n  }\r\n\r\n  public save() {\r\n\r\n    let userPayload: IUser = {\r\n\r\n      id: this.idFormCtl.value,\r\n      email: this.emailFormCtl.value,\r\n      firstName: this.firstNameFormCtl.value,\r\n      lastName: this.lastNameFormCtl.value,\r\n      linkedId: this.linkedIdFormCtl.value,\r\n      mobile: this.mobileFormCtl.value,\r\n      status: this.statusFormCtl.value,\r\n      userName: this.userNameFormCtl.value,\r\n      roles: this.addedRoles,\r\n\r\n    }\r\n\r\n    this.saveOrUpdateHttpObservable(userPayload).subscribe(data => {\r\n\r\n      let apiMessage = data[\"apiMessage\"]\r\n\r\n      if (apiMessage.error) {\r\n        this.errorMessage = apiMessage.detail\r\n        return;\r\n      }\r\n\r\n      this.router.navigate([\"/security/users\"])\r\n    }, err => {\r\n\r\n      console.error(err);\r\n      if (err.error && err.error.apiMessage)\r\n        this.errorMessage = err.error.apiMessage.detail\r\n      else\r\n        this.errorMessage = err.message\r\n    })\r\n  }\r\n\r\n  private saveOrUpdateHttpObservable(userPayload: IUser) {\r\n\r\n    if (this.userId) {\r\n      return this.http.put(ApiEndpoint.USERS + \"/\" + this.userId, userPayload)\r\n    }\r\n    else {\r\n      return this.http.post(ApiEndpoint.USERS, userPayload)\r\n    }\r\n  }\r\n\r\n  public setForm() {\r\n\r\n    this.idFormCtl.setValue(this.user.id)\r\n    this.userNameFormCtl.setValue(this.user.userName)\r\n    this.firstNameFormCtl.setValue(this.user.firstName)\r\n    this.lastNameFormCtl.setValue(this.user.lastName)\r\n    this.emailFormCtl.setValue(this.user.email)\r\n    this.mobileFormCtl.setValue(this.user.mobile)\r\n    this.linkedIdFormCtl.setValue(this.user.linkedId)\r\n    this.statusFormCtl.setValue(this.user.status)\r\n    this.addedRoles = this.user.roles\r\n\r\n  }\r\n\r\n  public onSelectEmployee(selectedEmployeeId: Number) {\r\n\r\n    let employee = this.employees.find(elmnt => { return elmnt.id == selectedEmployeeId })\r\n    this.firstNameFormCtl.setValue(employee.firstName)\r\n    this.lastNameFormCtl.setValue(employee.lastName)\r\n    this.linkedIdFormCtl.setValue(employee.id)\r\n    this.emailFormCtl.setValue(employee.email)\r\n\r\n  }\r\n\r\n  public addRole() {\r\n\r\n    let addingRole: IRole = this.roleFormCtl.value\r\n    if (!addingRole)\r\n      return\r\n\r\n    let indx = this.addedRoles.findIndex(elmnt => { return elmnt.id == addingRole.id })\r\n    if (indx >= 0)\r\n      return\r\n    this.addedRoles.push(this.roleFormCtl.value)\r\n  }\r\n\r\n  public remove(addedRole: IRole) {\r\n    let indx = this.addedRoles.findIndex(elmnt => { return elmnt.id == addedRole.id })\r\n    this.addedRoles.splice(indx, 1)\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci91c2VyL3VzZXItbGlzdC91c2VyLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"shadow form-min-height ml-3 mr-3 mt-1 pb-5\\\">\\r\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #f07a7a;color: #ffffff\\\" *ngIf=\\\"errorMessage\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <span>{{errorMessage}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #dddddd\\\">\\r\\n    <div class=\\\"col-md-6\\\" [ngStyle.lt-md]=\\\"{'text-align' : 'center'}\\\">\\r\\n      <span style=\\\"font-weight: bold; font-size: 14px; line-height: 35px;\\\">Users</span>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 text-right\\\" [ngStyle.lt-md]=\\\"{'text-align' : 'center'}\\\">\\r\\n      <button class=\\\"btn btn-save\\\" [routerLink]=\\\"['/security/user-create']\\\">\\r\\n        <mat-icon>add</mat-icon>&nbsp;Add User\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-md-12 table-header mb-5\\\">\\r\\n\\r\\n      <div class=\\\"no-shadow w-100\\\">\\r\\n        <table mat-table [dataSource]=\\\"userDataSource\\\" matSort>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"id\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\\r\\n            <td style=\\\"padding-left: 25px !important;\\\" mat-cell *matCellDef=\\\"let row; let i = index\\\">{{i+1}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"name\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\" (click)=\\\"onClickRow(row.id)\\\">\\r\\n              {{row.firstName}} {{row.lastName}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"userName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>User Name</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\" (click)=\\\"onClickRow(row.id)\\\">{{row.userName}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"mobile\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Mobile</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\" (click)=\\\"onClickRow(row.id)\\\">{{row.mobile}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"email\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Email</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\" (click)=\\\"onClickRow(row.id)\\\">{{row.email}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"status\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-class\\\" (click)=\\\"onClickRow(row.id)\\\">{{row.status}}</td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"action\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"text-right\\\" (click)=\\\"onDeleteRow(row.id)\\\">\\r\\n              <mat-icon style=\\\"color: firebrick; cursor: pointer;\\\">clear</mat-icon> &nbsp;\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"userColumns;sticky: true\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: userColumns ; let i = index;\\\">\\r\\n          </tr>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material';\r\nimport { IUser } from 'src/app/model/security';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { ApiEndpoint } from 'src/app/model/apiEndpoint';\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.css']\r\n})\r\nexport class UserListComponent implements OnInit {\r\n\r\n  public errorMessage: String;\r\n  public userColumns: string[] = [\"id\", \"name\", \"userName\", \"mobile\", \"email\", \"status\", \"action\"];\r\n  public userDataSource: MatTableDataSource<IUser>;\r\n  public users: IUser[] = [];\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.getUsers();\r\n  }\r\n\r\n  private getUsers() {\r\n\r\n    let resp;\r\n    this.http.get(ApiEndpoint.USERS).subscribe(data => {\r\n\r\n      resp = data;\r\n      if (resp && !resp.apiMessage.error) {\r\n\r\n        this.users = resp.data;\r\n        this.userDataSource = new MatTableDataSource(this.users);\r\n\r\n        if (!this.users)\r\n          this.errorMessage = \"No user found\";\r\n\r\n      } else {\r\n        this.errorMessage = resp.apiMessage.detail;\r\n      }\r\n\r\n    }, err => {\r\n      if (err.error && err.error.apiMessage)\r\n        this.errorMessage = err.error.apiMessage.detail;\r\n      else\r\n        this.errorMessage = err.message\r\n\r\n      console.error(err);\r\n    })\r\n\r\n  }\r\n\r\n  public onClickRow(userId: Number) {\r\n    this.router.navigate([\"/security/users/\" + userId + \"/view\"]);\r\n  }\r\n\r\n  public onDeleteRow(userId: Number) {\r\n\r\n    this.http.delete(ApiEndpoint.USERS + \"/\" + userId).subscribe(data => {\r\n      this.userDataSource = new MatTableDataSource([])\r\n      this.getUsers();\r\n    }, err => {\r\n      console.error(err);\r\n      if (err.error && err.error.apiMessage)\r\n        this.errorMessage = err.error.apiMessage.detail;\r\n      else\r\n        this.errorMessage = err.message;\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci91c2VyL3VzZXItdmlldy91c2VyLXZpZXcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"shadow form-min-height ml-3 mr-3 mt-1 pb-5\\\">\\r\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #dddddd\\\">\\r\\n    <div class=\\\"col-md-6\\\" [ngStyle.lt-md]=\\\"{'text-align' : 'center'}\\\">\\r\\n      <span style=\\\"font-weight: bold; font-size: 14px; line-height: 35px;\\\">User Details</span>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 text-right\\\" [ngStyle.lt-md]=\\\"{'text-align' : 'center'}\\\">\\r\\n      <button class=\\\"btn btn-save\\\" routerLink=\\\"/security/users\\\">\\r\\n        <mat-icon>keyboard_arrow_left</mat-icon>&nbsp;Back\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-cancel\\\" (click)=\\\"delete()\\\">\\r\\n        <mat-icon>clear</mat-icon>&nbsp;Delete\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-edit\\\" (click)=\\\"edit()\\\">\\r\\n        <mat-icon>edit</mat-icon>&nbsp;Edit\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-save\\\" [routerLink]=\\\"['/security/user-create']\\\">\\r\\n        <mat-icon>add</mat-icon>&nbsp;New Role\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row p-1\\\" style=\\\"background-color: #f07a7a;color: #ffffff\\\" *ngIf=\\\"errorMessage\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <span>{{errorMessage}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div [ngClass]=\\\"['pt-1','pr-5','pl-5']\\\" [ngClass.lt-md]=\\\"['p-0']\\\" *ngIf=\\\"user\\\">\\r\\n\\r\\n    <div class=\\\"row pt-3\\\">\\r\\n\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <p style=\\\"font-weight: bold; font-size: 14px;\\\">User Info</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <p>Name : {{user.firstName}}</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <p>Last Name : {{user.lastName}}</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <p>Email : {{user.email}}</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <p>Mobile : {{user.mobile}}</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <p>Status : {{user.status}}</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <p>User Name : {{user.userName}}</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"p-3\\\" style=\\\"border: 1px solid #c6c6c6; border-radius: 5px\\\">\\r\\n          <p><b>Selected Roles</b></p>\\r\\n          <hr>\\r\\n          <mat-chip-list>\\r\\n            <mat-chip color=\\\"primary\\\" selected *ngFor=\\\"let role of user.roles\\\">{{role.name}}</mat-chip>\\r\\n          </mat-chip-list>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { IUser, IMenu } from 'src/app/model/security';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ApiEndpoint } from 'src/app/model/apiEndpoint';\r\n\r\n@Component({\r\n  selector: 'app-user-view',\r\n  templateUrl: './user-view.component.html',\r\n  styleUrls: ['./user-view.component.css']\r\n})\r\nexport class UserViewComponent implements OnInit {\r\n\r\n  errorMessage: String;\r\n  userId: String;\r\n  user: IUser;\r\n\r\n  constructor(private http: HttpClient, private router: Router, private activatedRoute: ActivatedRoute) {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.userId = params.uid;\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getUser();\r\n  }\r\n\r\n  getUser() {\r\n\r\n    this.http.get(ApiEndpoint.USERS + \"/\" + this.userId).subscribe(data => {\r\n\r\n      this.user = data[\"data\"]\r\n\r\n    }, err => {\r\n      console.error(err);\r\n      if (err.error && err.error.apiMessage)\r\n        this.errorMessage = err.error.apiMessage.detail;\r\n      else\r\n        this.errorMessage = err.message;\r\n    })\r\n  }\r\n\r\n  delete() {\r\n\r\n    this.http.delete(ApiEndpoint.USERS + \"/\" + this.userId).subscribe(data => {\r\n      this.router.navigate([\"/security/users\"]);\r\n    }, err => {\r\n      console.error(err);\r\n      if (err.error && err.error.apiMessage)\r\n        this.errorMessage = err.error.apiMessage.detail;\r\n      else\r\n        this.errorMessage = err.message;\r\n    })\r\n  }\r\n\r\n  edit() {\r\n    this.router.navigate([\"/security/users/\" + this.userId + \"/edit\"]);\r\n  }\r\n\r\n}\r\n","\r\nexport interface IUser {\r\n    id: Number\r\n    userName: String\r\n    firstName: String\r\n    lastName: String\r\n    email: String\r\n    mobile: String\r\n    roles: IRole[]\r\n    linkedId: Number\r\n    status: String\r\n}\r\n\r\nexport interface IRole {\r\n    id: String\r\n    name: String\r\n    desc: String\r\n    menus: IMenu[]\r\n}\r\n\r\nexport interface IMenu {\r\n    id: Number\r\n    order: Number\r\n    path: String\r\n    title: String\r\n    icon: String\r\n    hasSubmenu: Boolean\r\n    submenu: IMenu[]\r\n}\r\n\r\nexport const UserStatuses: String[] = [\r\n    \"Active\",\r\n    \"Expired\",\r\n    \"Inactive\",\r\n    \"First time\"\r\n]\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { ChangePasswordComponent } from '../components/user/change-password/change-password.component';\r\nimport { UserAuditComponent } from '../components/user/user-audit/user-audit.component';\r\nimport { UserListComponent } from '../components/user/user/user-list/user-list.component';\r\nimport { UserViewComponent } from '../components/user/user/user-view/user-view.component';\r\nimport { UserCreateEditComponent } from '../components/user/user/user-create-edit/user-create-edit.component';\r\nimport { RoleListComponent } from '../components/user/role/role-list/role-list.component';\r\nimport { RoleViewComponent } from '../components/user/role/role-view/role-view.component';\r\nimport { RoleCreateEditComponent } from '../components/user/role/role-create-edit/role-create-edit.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from './material.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CustomDateModule } from '../components/shared/custom-date/custom-date.module';\r\nimport { MenuDialogComponent } from '../components/user/role/menu-dialog/menu-dialog.component';\r\nimport { MenuViewDialogComponent } from '../components/user/role/menu-view-dialog/menu-view-dialog.component';\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n  // Change password\r\n  { path: \"change-password\", component: ChangePasswordComponent },\r\n\r\n  // User Audit\r\n  { path: \"user-audit\", component: UserAuditComponent },\r\n\r\n  // User \r\n  { path: \"users\", component: UserListComponent },\r\n  { path: \"users/:uid/view\", component: UserViewComponent },\r\n  { path: \"user-create\", component: UserCreateEditComponent },\r\n  { path: \"users/:uid/edit\", component: UserCreateEditComponent },\r\n\r\n  // Role \r\n  { path: \"roles\", component: RoleListComponent },\r\n  { path: \"roles/:roleId/view\", component: RoleViewComponent },\r\n  { path: \"role-create\", component: RoleCreateEditComponent },\r\n  { path: \"roles/:roleId/edit\", component: RoleCreateEditComponent },\r\n\r\n]\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CustomDateModule\r\n  ],\r\n  declarations: [\r\n\r\n    UserAuditComponent,\r\n    ChangePasswordComponent,\r\n    UserListComponent,\r\n    UserViewComponent,\r\n    UserCreateEditComponent,\r\n    RoleCreateEditComponent,\r\n    RoleListComponent,\r\n    RoleViewComponent,\r\n    MenuDialogComponent,\r\n    MenuViewDialogComponent,\r\n\r\n  ],\r\n  entryComponents: [\r\n    MenuDialogComponent,\r\n    MenuViewDialogComponent\r\n  ]\r\n})\r\nexport class SecurityModule { }\r\n"],"sourceRoot":""}